{"version":3,"sources":["Components/Header/Header.js","services/TransformWeather.js","actions/index.js","actions/ActionTypes.js","services/findCity.js","Components/Weather/WeatherData/Temperature.js","Components/Weather/WeatherData/ExtraInfo.js","Components/Weather/WeatherData/index.js","Components/Weather/weatherItem/weatherItem.tsx","Components/Weather/weatherAlert/weatherAlert.tsx","Components/Weather/weatherListController/weatherListController.js","Components/Weather/WeatherList/WeatherList.js","Components/modal/modal.js","Containers/LocationListContainer.js","Components/Weather/ForecastItem/ForecastItem.js","Components/Weather/ForecastExtended/ForecastExtended.js","Containers/ForecastExtendedContainer.js","App.js","serviceWorker.js","reducers/cityReducer.js","reducers/index.js","reducers/forecastExtendedReducer.js","store/index.js","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","react_default","a","createElement","Fragment","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","Typography","variant","Button","getData","city","type","arguments","length","undefined","api_weather","concat","fetch","then","res","json","catch","err","transformWeather","speed","wind","_res$main","main","humidity","temp","weather","weatherState","getWeatherState","temperature","_ref","Object","slicedToArray","description","icon","setSelectedCity","payload","dispatch","setCity","forecastData","console","log","forecastExtend","list","filter","item","moment","unix","dt","utc","hour","map","weekDay","format","data","setForecastData","addCity","searchCity","criterio","url","findCity","_ref2","formatedCitiesList","name","country","getWeatherIcon","display","justifyContent","alignItems","Temperature","src","alt","extraInfo","flexDirection","ExtraInfo","h","w","backgroundColor","boxSizing","WeatherData","Weather","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","headleClick","click","onDelete","e","stopPropagation","componentWillMount","setState","render","state","onClick","Card","style","marginBottom","CardHeader","action","Cancel_default","CardContent","Component","weatherAlert","show","onSubmit","onCancel","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","WeatherListController","Fab","showModal","LocationOn_default","WeatherList","deleteItem","modalSubmit","deleteCity","modalCancel","setDeleteItem","index","_this2","cities","weatherItem_Weather","key","selectCity","SearchModal","handleClose","searchResults","TextField","margin","label","onChange","event","value","target","trim","setTimeout","fullWidth","isLoading","CircularProgress","List","component","result","ListItem","button","clickHandler","ListItemIcon","ListItemText","primary","Add_default","ForecastListContainer","handleSelectionLocation","dispatchsetCity","setUserLocation","WeatherList_WeatherList","onShowModal","onDeleteCity","propsType","PropTypes","func","isRequired","connect","cityReducer","formatedCityInfo","country_code","join","onHideModal","useStiles","ForecastItem","subheader","ForecastExtended","forecastExtendedData","forecast","day","ForecastExtendedContainer","Weather_ForecastExtended_ForecastExtended","extendedForecastReducer","selectedCity","paper","padding","textAlign","container","marginTop","Boolean","window","location","hostname","match","initialState","combineReducers","objectSpread","newCitiesList","toConsumableArray","i","_action$payload","defineProperty","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","Container","maxWidth","Grid","xs","sm","Paper","LocationListContainer","Containers_ForecastExtendedContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mRAKMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,MAID,SAASK,IACpB,IAAMC,EAAUV,IAElB,OACEW,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,SAAS,UACfL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,KAAK,QACLC,UAAWV,EAAQL,WACnBgB,MAAM,UACNC,aAAW,SAGbX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWV,EAAQF,OAA5C,cAGAG,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQJ,MAAM,WAAd,kGC/BGK,EAAU,SAACC,GAAyB,IAAnBC,EAAmBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,UAE7BG,EAAW,0CAAAC,OAA6CL,EAA7C,OAAAK,OAAuDN,EAAvD,wBAAAM,OADF,oCAEZ,OAAOC,MAAMF,GACXG,KAAM,SAAAC,GACJ,OAAOA,EAAIC,SAEbF,KAAM,SAAAC,GACH,OAAOA,IAEVE,MAAO,SAAAC,GACJ,MAAMA,KAKEC,EAAmB,SAACJ,GAAQ,IAC7BK,EAASL,EAAIM,KAAbD,MAD6BE,EAEXP,EAAIQ,KAAtBC,EAF6BF,EAE7BE,SAAUC,EAFmBH,EAEnBG,KACVC,EAAWX,EAAXW,QAEP,MAAQ,CACNF,WACAG,aAHmBC,EAAgBF,GAInCG,YAAYJ,EACZJ,KAAI,GAAAT,OAAKQ,EAAL,SAKNQ,EAAkB,SAAAE,GAAc,IAAZJ,EAAYK,OAAAC,EAAA,EAAAD,CAAAD,EAAA,MAOpC,MALoB,CACZP,KAF2BG,EAA3BH,KAGAU,YAH2BP,EAArBO,YAINC,KAJ2BR,EAARQ,OCjBlBC,EAAkB,SAAAC,GAC7B,OAAO,SAAAC,GAELA,EANY,SAAAD,GAAO,MAAK,CAAE7B,KCdN,YDcsB6B,WAMjCE,CAAQF,IACjB/B,EAAQ+B,EAAS,YACdtB,KAAK,SAAAyB,GAEJC,QAAQC,IAAIF,GACZ,IAAMG,EAAyCH,EDmBZI,KAEtBC,OAAQ,SAAAC,GAAI,OACa,IAAtCC,IAAOC,KAAKF,EAAKG,IAAIC,MAAMC,QACW,KAAtCJ,IAAOC,KAAKF,EAAKG,IAAIC,MAAMC,QACW,KAAtCJ,IAAOC,KAAKF,EAAKG,IAAIC,MAAMC,SAC1BC,IAAK,SAAAN,GACF,MAAQ,CACJO,QAAQN,IAAOC,KAAKF,EAAKG,IAAIK,OAAO,OACpCH,KAAKJ,IAAOC,KAAKF,EAAKG,IAAIE,OAC1BI,KAAK,CACHzB,YAAYgB,EAAKtB,KAAKE,KACtBJ,KAAKwB,EAAKxB,KAAKD,MACfI,SAASqB,EAAKtB,KAAKC,SACnBG,aAAcC,EAAgBiB,EAAKnB,aChC7Cc,QAAQC,IAAIC,GACZL,EAZgB,SAAAD,GAAO,MAAK,CAAE7B,KCbL,oBDa8B6B,WAY9CmB,CAAgB,CAAEjD,KAAM8B,EAASM,sBAE3CzB,MAAM,SAAAC,GAAG,OAAIsB,QAAQC,IAAR,GAAA7B,OAAeM,QAItBsC,EAAU,SAAAlD,GACrB,MAAO,CACLC,KChCoB,WDiCpB6B,QAAS9B,IAsCAmD,EAAa,SAAAnD,GACxB,OAAO,SAAA+B,GACLA,EApBK,CACL9B,KC9C6B,sBCXT,SAACmD,GACvB,IAAMC,EAAG,2FAAA/C,OAA8F8C,GACvG,OAAO7C,MAAM8C,GACV7C,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GAAG,OAAIA,IACZE,MAAM,SAAAC,GAAG,OAAIsB,QAAQC,IAAIvB,KFwE1B0C,CAAStD,GACNQ,KAAK,SAAA+C,GAAc,IACdC,EADcD,EAAXP,KACuBH,IAC5B,SAAA7C,GAAI,OAAIA,EAAKyD,KAAO,IAAMzD,EAAK0D,UAEjCxB,QAAQC,IAAIqB,GACZzB,EAfC,CACL9B,KCzD+B,sBD0D/B6B,QAa+B0B,MAE5B7C,MAAM,SAAAC,GAAG,OAAImB,EAvBX,CACL9B,KClD4B,mBDmD5B6B,QAqBwClB,QGjFtC+C,EAAgB,SAAAnC,GAAY,IAAVI,EAAUJ,EAAVI,KACpB,yCAAAtB,OAA2CsB,EAA3C,SAGEvD,EAAYC,YAAY,SAAAC,GAC5B,MAAQ,CACNgD,YAAY,CACV9C,SAAS,IACTmF,QAAQ,OACRC,eAAe,SACfC,WAAW,aAIFC,EAAA,SAAAR,GAAiC,IAA/BhC,EAA+BgC,EAA/BhC,YAAaF,EAAkBkC,EAAlBlC,aACtBtC,EAAUV,IAChB,OACEW,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQwC,aACtBvC,EAAAC,EAAAC,cAAA,OAAM8E,IAAKL,EAAetC,GAAc4C,IAAI,GAAGxE,UAAU,aACzDT,EAAAC,EAAAC,cAAA,eAAAoB,OAAUiB,GAAcvC,EAAAC,EAAAC,cAAA,QAAMO,UAAU,eAAhB,YCnBxBpB,EAAYC,YAAY,SAAAC,GAC1B,MAAQ,CACR2F,UAAU,CACRzF,SAAS,IACTiB,MAAM,OACNkE,QAAQ,OACRO,cAAc,SACdN,eAAe,SACfC,WAAW,aAKFM,EAAA,SAAA5C,GAA4B,IAAhB6C,EAAgB7C,EAA1BN,SAAmBoD,EAAO9C,EAAbT,KACrBhC,EAAUV,IAEjB,OACEW,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQmF,WACtBlF,EAAAC,EAAAC,cAAA,yBAAAoB,OAAoB+D,EAApB,MACArF,EAAAC,EAAAC,cAAA,qBAAAoB,OAAgBgE,MChBhBjG,EAAYC,YAAY,SAAAC,GAC5B,MAAO,CAEHC,KAAK,CACHoF,QAAQ,OACRW,gBAAiB,0BACjBC,UAAU,iBASFC,EAAA,SAAAjD,GAAY,IAAVwB,EAAUxB,EAAVwB,KAEVjE,EAAUV,IAETkD,EAA8CyB,EAA9CzB,YAAaF,EAAiC2B,EAAjC3B,aAAcH,EAAmB8B,EAAnB9B,SAAUH,EAASiC,EAATjC,KAG5C,OACE/B,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQP,MACtBQ,EAAAC,EAAAC,cAAC6E,EAAD,CAAoBxC,YAAaA,EAAaF,aAAcA,IAC5DrC,EAAAC,EAAAC,cAACkF,EAAD,CAAmBlD,SAAUA,EAAUH,KAAMA,kDCX9B2D,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAnD,OAAAoD,EAAA,EAAApD,CAAAqD,KAAAJ,IACjBE,EAAAnD,OAAAsD,EAAA,EAAAtD,CAAAqD,KAAArD,OAAAuD,EAAA,EAAAvD,CAAAiD,GAAAO,KAAAH,KAAMH,KAORO,YAAc,SAAAlF,GACZ4E,EAAKD,MAAMQ,SATMP,EAYnBQ,SAAW,SAAAC,GACTA,EAAEC,kBACFV,EAAKD,MAAMS,YAdMR,EAiBnBW,mBAAqB,WACnBxF,EAAQ6E,EAAKD,MAAM3E,MAAMQ,KAAK,SAAAC,GAC5B,IAAMW,EAAUP,EAAiBJ,GACjCmE,EAAKY,SAAS,CAAExC,KAAM5B,OApBPwD,EAwBnBa,OAAS,WAAM,IACLzF,EAAS4E,EAAKD,MAAd3E,KACAgD,EAAS4B,EAAKc,MAAd1C,KACR,OACEhE,EAAAC,EAAAC,cAAA,OAAKO,UAAU,cAAckG,QAASf,EAAKM,aACzClG,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMC,MAAO,CAAEC,aAAc,WAC3B9G,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CACElH,MAAOmB,EACPgG,OACEhH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYI,aAAW,WAAWgG,QAASf,EAAKQ,UAC9CpG,EAAAC,EAAAC,cAAC+G,EAAAhH,EAAD,CAAYS,MAAM,iBAIxBV,EAAAC,EAAAC,cAACgH,EAAA,EAAD,KACGlD,EAAOhE,EAAAC,EAAAC,cAACuF,EAAD,CAAMzB,KAAMA,IAAWhE,EAAAC,EAAAC,cAAA,yBArCvC0F,EAAKc,MAAQ,CACb1C,KAAM,MAHW4B,6BADgBuB,0DCNtB,SAASC,EAAT5E,GAAiE,IAAzC6E,EAAyC7E,EAAzC6E,KAAMrG,EAAmCwB,EAAnCxB,KAAMsG,EAA6B9E,EAA7B8E,SAAUC,EAAmB/E,EAAnB+E,SAC3D,OACEvH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CACEC,KAAMJ,EACNK,QAASH,EACTI,kBAAgB,qBAChBC,mBAAiB,4BAEjB5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAaC,GAAG,sBACb,0CAEH9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACE/H,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAAmBF,GAAG,4BACnB9G,IAGLhB,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,KACEjI,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQ6F,QAASY,EAAU7G,MAAM,WAAjC,YAGAV,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQ6F,QAASW,EAAU5G,MAAM,UAAUwH,WAAS,GAApD,8CC/BK,SAASC,GAAsBxC,GAK5C,OACE3F,EAAAC,EAAAC,cAAA,OAAKO,UAAU,IACbT,EAAAC,EAAAC,cAACkI,GAAA,EAAD,CAAK1H,MAAM,UAAUG,QAAQ,WAAWF,aAAW,MAAMgG,QALxC,WACjBhB,EAAM0C,cAKJrI,EAAAC,EAAAC,cAACoI,GAAArI,EAAD,MADF,aCPesI,8MAEnB7B,MAAM,CACJ2B,WAAU,EACVG,WAAW,QAEbC,YAAY,WACV7C,EAAKY,SAAS,CAAC6B,WAAU,IACzBzC,EAAKD,MAAM+C,WAAW9C,EAAKc,MAAM8B,eAGnCG,YAAY,WACVzF,QAAQC,IAAI,aACZyC,EAAKY,SAAS,CAAC6B,WAAU,EAAOG,YAAW,OAG7CI,cAAc,SAACC,GACbjD,EAAKY,SAAS,CAACgC,WAAWK,EAAOR,WAAU,6EAIpC,IAAAS,EAAAhD,KACCiD,EAAWjD,KAAKH,MAAhBoD,OACR,OACE/I,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KAEAH,EAAAC,EAAAC,cAAA,OAAKO,UAAU,eACZsI,EAAOlF,IAAI,SAAC7C,EAAM6H,GAAP,OACV7I,EAAAC,EAAAC,cAAC8I,EAAD,CACEC,IAAKjI,EAAO6H,EACZ7H,KAAMA,EACNmF,MAAO,kBAAM2C,EAAKnD,MAAMuD,WAAWlI,IACnCoF,SAAU,kBAAK0C,EAAKF,cAAcC,QAGtC7I,EAAAC,EAAAC,cAACiI,GAAD,CAAuBE,UAAYvC,KAAKH,MAAM0C,aAEhDrI,EAAAC,EAAAC,cAACkH,EAAD,CAAcC,KAAMvB,KAAKY,MAAM2B,UAAWf,SAAUxB,KAAK2C,YAAalB,SAAUzB,KAAK6C,YAAa3H,KAAM8E,KAAKY,MAAM8B,qBArChFrB,6FCsB1B,SAASgC,GAAYxD,GAClC,IAAMyD,EAAc,WAClBlG,QAAQC,IAAI,UAed,OACEnD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACC+C,QAAQC,IAAIwC,EAAM0D,eACjBrJ,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAQC,KAAM9B,EAAM8B,KAAME,kBAAgB,qBACxC3H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAaC,GAAG,qBAAhB,gBACA9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACE/H,EAAAC,EAAAC,cAACoJ,GAAA,EAAD,CACEpB,WAAS,EACTqB,OAAO,QACPzB,GAAG,OACH0B,MAAM,OACNvI,KAAK,OACLwI,SAzBiB,SAAAC,GACzB,IAAIC,EAAQD,EAAME,OAAOD,MACzB,GAAIA,EAAME,OAAO1I,OAAS,EACxB,OAAO,KAET2I,WAAW,WACTnE,EAAMxB,WAAWwF,IAChB,MAmBKI,WAAS,IAEVpE,EAAMqE,WAAahK,EAAAC,EAAAC,cAAC+J,GAAA,EAAD,MACnBtE,EAAM0D,eACLrJ,EAAAC,EAAAC,cAACgK,GAAA,EAAD,CAAMC,UAAU,MAAMxJ,aAAW,wBAC9BgF,EAAM0D,cAAcxF,IAAI,SAACuG,EAAQvB,GAChC,OACE7I,EAAAC,EAAAC,cAACmK,GAAA,EAAD,CAAUC,QAAM,EAAC3D,QAAS,kBAvBrB,SAACkC,GACpBlD,EAAMzB,QAAQyB,EAAM0D,cAAcR,IAsBW0B,CAAa1B,IAAQI,IAAKmB,EAAOvB,GAC9D7I,EAAAC,EAAAC,cAACsK,GAAA,EAAD,KACAxK,EAAAC,EAAAC,cAACoI,GAAArI,EAAD,OAEAD,EAAAC,EAAAC,cAACuK,GAAA,EAAD,CAAcC,QAASN,SAOnCpK,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,KACEjI,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAQ6F,QAASyC,EAAa1I,MAAM,WAApC,UAIAV,EAAAC,EAAAC,cAACkI,GAAA,EAAD,CAAK1H,MAAM,UAAUiG,QAASyC,EAAazI,aAAW,OACpDX,EAAAC,EAAAC,cAACyK,GAAA1K,EAAD,cCxEN2K,8MAMJC,wBAA0B,SAAA7J,GACxB4E,EAAKD,MAAMmF,gBAAgB9J,uFAI3BkC,QAAQC,IAAI,uBACZ2C,KAAKH,MAAMoF,mDAIX,OACE/K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8K,GAAD,CACEjC,OAAQjD,KAAKH,MAAMoD,OACnBG,WAAYpD,KAAK+E,wBACjBxC,UAAWvC,KAAKH,MAAMsF,YACtBvC,WAAY5C,KAAKH,MAAMuF,eAEzBlL,EAAAC,EAAAC,cAACiJ,GAAD,CAAa1B,KAAM3B,KAAKH,MAAM0C,UAC9BlE,WAAY2B,KAAKH,MAAMxB,WACvB6F,UAAWlE,KAAKH,MAAMqE,UACtBX,cAAgBvD,KAAKH,MAAM0D,cAC3BnF,QAAS4B,KAAKH,MAAMzB,kBA5BQiD,aAkCpCyD,GAAsBO,UAAY,CAChCnI,QAASoI,IAAUC,KAAKC,YAG1B,IAiBeC,eAPS,SAAA/I,GAAA,IAAGgJ,EAAHhJ,EAAGgJ,YAAH,MAAsB,CAC5CzC,OAAQyC,EAAYzC,OACpBiB,UAAWwB,EAAYxB,UACvBX,cAAemC,EAAYnC,cAC3BhB,UAAWmD,EAAYnD,YAdE,SAAAtF,GAAQ,MAAK,CACtC+H,gBAAiB,SAAA9J,GAAI,OAAI+B,EAASF,EAAgB7B,KAClD+J,gBAAiB,kBAAMhI,EXRhB,SAAAA,GACLxB,MAFgB,gCAGbC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAgB,GAA0B,IAEpBiJ,EAAmB,CAFCjJ,EAAxBxB,KAAwBwB,EAAlBkJ,cAEsCC,KAAK,KACjD5I,EAASmB,EAAQuH,IACjB1I,EAASF,EAAgB4I,MAE3B9J,MAAO,SAAAC,GAAG,OAAIsB,QAAQC,IAAIvB,QWDhCuC,WAAY,SAACC,GAAD,OAAarB,EAASoB,EAAWC,KAC7C6G,YAAa,kBAAKlI,EXuCX,CACL9B,KCnF4B,uBU4C9B2K,YAAa,kBAAM7I,EX4CZ,CACL9B,KCxF4B,uBU4C9BiD,QAAS,SAAClD,GAAD,OAAS+B,EAASmB,EAAQlD,KACnCkK,aAAc,SAAClK,GAAD,OAAS+B,EX+CC,SAAC/B,GACzB,MAAM,CACJC,KClGsB,cDmGtB6B,QAAQ9B,GWlDsB0H,CAAW1H,OAU9BuK,CAA6CX,ICzDtDiB,GAAWvM,YAAY,SAAAC,GAC3B,MAAQ,CAACC,KAAK,CACZ+J,OAAO,WAIXuC,GAAA,SAAetJ,GAA2B,IAAzBsB,EAAyBtB,EAAzBsB,QAASF,EAAgBpB,EAAhBoB,KAAMI,EAAUxB,EAAVwB,KACxBjE,EAAU8L,KAEd,OACE7L,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAMnG,UAAWV,EAAQP,MACvBQ,EAAAC,EAAAC,cAAC6G,EAAA,EAAD,CAAYlH,MAAOiE,EAASiI,UAAWnI,IACvC5D,EAAAC,EAAAC,cAACgH,EAAA,EAAD,KACElH,EAAAC,EAAAC,cAACuF,EAAD,CAAazB,KAAMA,QCSlBgI,GAzBU,SAAAxJ,GAAoC,IAAjCxB,EAAiCwB,EAAjCxB,KAAMiL,EAA2BzJ,EAA3ByJ,qBAC5BC,EAAWlM,EAAAC,EAAAC,cAAC+J,GAAA,EAAD,MAaf,OAXIgC,GAAwBA,EAAqBjL,KAC/CkL,EAAWD,EAAqBjL,GAAM6C,IAAI,SAACsI,EAAKtD,GAAN,OACxC7I,EAAAC,EAAAC,cAAC4L,GAAD,CACEhI,QAASqI,EAAIrI,QACbF,KAAMuI,EAAIvI,KACVI,KAAMmI,EAAInI,KACViF,IAAKJ,OAMT7I,EAAAC,EAAAC,cAAA,OAAKO,UAAU,wBACZO,GAAQhB,EAAAC,EAAAC,cAAA,UAAKc,GACbkL,ICjBDE,oLAMF,OACEpM,EAAAC,EAAAC,cAAA,WACG4F,KAAKH,MAAM3E,KACVhB,EAAAC,EAAAC,cAACmM,GAAD,CAAkBrL,KAAM8E,KAAKH,MAAM3E,KAAMiL,qBAAsBnG,KAAKH,MAAMsG,uBAE1EjM,EAAAC,EAAAC,cAAA,qDAX8BiH,aAuBzBoE,eANU,SAAA/I,GAA8C,IAA3CgJ,EAA2ChJ,EAA3CgJ,YAAac,EAA8B9J,EAA9B8J,wBACvC,MAAO,CACLtL,KAAMwK,EAAYe,aAClBN,qBAAsBK,IAGe,KAA1Bf,CAAgCa,ICfzC/M,WAAYC,YAAW,SAAAC,GAC3B,MAAO,CACLC,KAAM,CACJC,SAAU,GAEZ+M,MAAO,CACLC,QAAS,OACTC,UAAW,UAEbC,UAAU,CACRC,UAAU,YCXIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4GCPAC,GAAe,CACnBX,aAAc,KACdxD,OAAQ,GACRM,cAAe,GACfW,WAAW,EACX3B,WAAW,GCZE8E,gBAAgB,CAC3B3B,YDcuB,WAAkC,IAAjC9E,EAAiCxF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBgM,GAAclG,EAAW9F,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQ4F,EAAO/F,MACb,IhBrBoB,YgBsBlB,OAAOwB,OAAA2K,GAAA,EAAA3K,CAAA,GAAKiE,EAAZ,CAAmB6F,aAAcvF,EAAOlE,UAC1C,IhBpBoB,WgBqBlB,IAAIuK,EAAa,GAAA/L,OAAAmB,OAAA6K,GAAA,EAAA7K,CAAOiE,EAAMqC,QAAb,CAAqB/B,EAAOlE,UAC7C,OAAOL,OAAA2K,GAAA,EAAA3K,CAAA,GAAKiE,EAAZ,CAAmBqC,OAAQsE,EAAehF,WAAU,IACtD,IhBf6B,oBgBgB3B,OAAO5F,OAAA2K,GAAA,EAAA3K,CAAA,GAAKiE,EAAZ,CAAmBsD,WAAW,IAChC,IhBf4B,mBgBgB1B,OAAOvH,OAAA2K,GAAA,EAAA3K,CAAA,GAAKiE,EAAZ,CAAmBsD,WAAW,IAChC,IhBlB+B,sBgBmB7B,OAAOvH,OAAA2K,GAAA,EAAA3K,CAAA,GAAKiE,EAAZ,CAAmBsD,WAAW,EAAOX,cAAerC,EAAOlE,UAC7D,IhBxB4B,oBgByB1B,OAAOL,OAAA2K,GAAA,EAAA3K,CAAA,GAAKiE,EAAZ,CAAmB2B,WAAW,EAAMgB,cAAc,KACpD,IhBzB4B,oBgB0B1B,OAAO5G,OAAA2K,GAAA,EAAA3K,CAAA,GAAKiE,EAAZ,CAAmB2B,WAAW,EAAOgB,cAAc,KACrD,IhB/BsB,cgBiCpB,OADAgE,EAAe3G,EAAMqC,OAAOzF,OAAO,SAACtC,EAAMuM,GAAP,OAAYA,IAAMvG,EAAOlE,UACzD4D,EAAM6F,eAAiB7F,EAAMqC,OAAO/B,EAAOlE,SACrCL,OAAA2K,GAAA,EAAA3K,CAAA,GAAKiE,EAAZ,CAAmBqC,OAAQsE,EAAed,aAAa7F,EAAMqC,OAAO,KACrC,IAAxBrC,EAAMqC,OAAO5H,QACpB+B,QAAQC,IAAI,aACLV,OAAA2K,GAAA,EAAA3K,CAAA,GAAKiE,EAAZ,CAAmBqC,OAAQsE,EAAed,aAAa,QAElD9J,OAAA2K,GAAA,EAAA3K,CAAA,GAAKiE,EAAZ,CAAmBqC,OAAQsE,IAC7B,QACE,OAAO3G,ICzCI4F,wBCCuB,WAAyB,IAAxB5F,EAAwBxF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAM8F,EAAW9F,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQ4F,EAAO/F,MACX,IlBNyB,oBkBMzB,IAAAuM,EACkCxG,EAAOlE,QAA9B9B,EADXwM,EACWxM,KAAMoC,EADjBoK,EACiBpK,eACb,OAAOX,OAAA2K,GAAA,EAAA3K,CAAA,GAAIiE,EAAXjE,OAAAgL,GAAA,EAAAhL,CAAA,GAAmBzB,EAAOoC,IAC9B,QACI,OAAOsD,MCRbgH,GAAkBZ,OAAOa,sCAAwCC,KAC1DC,GAAOC,aAAaC,GAAUL,GAAiBM,aAAgBC,QCI5EC,IAASzH,OACLzG,EAAAC,EAAAC,cAACiO,EAAA,EAAD,CAAUN,MAAOA,IACb7N,EAAAC,EAAAC,cNiBR,WACE,IAAMH,EAAUV,KAEhB,OACEW,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQP,MACtBQ,EAAAC,EAAAC,cAACJ,EAAD,MACAE,EAAAC,EAAAC,cAACkO,EAAA,EAAD,CAAW3N,UAAWV,EAAQ4M,UAAW0B,SAAS,MAChDrO,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAM3B,WAAS,EAAC/M,QAAS,GACvBI,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAM/K,MAAI,EAACgL,GAAI,GAAIC,GAAI,GACrBxO,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOhO,UAAWV,EAAQyM,OACxBxM,EAAAC,EAAAC,cAACwO,GAAD,QAGJ1O,EAAAC,EAAAC,cAACoO,EAAA,EAAD,CAAM/K,MAAI,EAACgL,GAAI,GAAIC,GAAI,GACrBxO,EAAAC,EAAAC,cAACuO,EAAA,EAAD,CAAOhO,UAAWV,EAAQyM,OACxBxM,EAAAC,EAAAC,cAACyO,GAAD,YMhCN,OACSC,SAASC,eAAe,SLqHnC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxN,KAAK,SAAAyN,GACjCA,EAAaC","file":"static/js/main.cc1892bf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {AppBar, Toolbar, IconButton, Typography, Button} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            WeatherApp\r\n          </Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n","import moment from 'moment';\r\n\r\n // fetch from API\r\nexport const getData = (city, type=\"weather\") => {\r\nconst apiKey = \"ea0b23131c72bacfe9c361211bb6ea7f\";\r\nconst api_weather = `http://api.openweathermap.org/data/2.5/${type}?q=${city}&units=metric&APPID=${apiKey}`;\r\n   return fetch(api_weather)\r\n    .then( res => {\r\n       return res.json();\r\n    })\r\n    .then( res => {\r\n        return res;\r\n    })\r\n    .catch( err => {\r\n        throw err;\r\n    }) ;\r\n};\r\n\r\n// transform API response into an \"data\" object for simple forecast\r\n  export const  transformWeather = (res) => {\r\n        const {speed} = res.wind;\r\n        const {humidity, temp} = res.main;\r\n        const {weather} = res;\r\n        const weatherState = getWeatherState(weather);\r\n        return  {\r\n          humidity,\r\n          weatherState,\r\n          temperature:temp,\r\n          wind: `${speed}m/s`\r\n        }\r\n      };\r\n      \r\n // get Wheather from response object\r\n const  getWeatherState = ([weather]) =>{\r\n     const {main, description, icon} = weather;\r\n     const weatherState={\r\n            main,\r\n            description,\r\n            icon\r\n     }\r\n    return (weatherState);\r\n  };\r\n\r\n  // transform API response into an \"data\" object for Extended Forecast\r\n  export const transformForecastExtend = ({list}) => {\r\n    \r\n        return (list.filter( item => \r\n        moment.unix(item.dt).utc().hour() === 6 ||\r\n        moment.unix(item.dt).utc().hour() === 12 ||\r\n        moment.unix(item.dt).utc().hour() === 18  ))\r\n        .map( item => {\r\n            return  {\r\n                weekDay:moment.unix(item.dt).format('ddd'),\r\n                hour:moment.unix(item.dt).hour(),\r\n                data:{\r\n                  temperature:item.main.temp,\r\n                  wind:item.wind.speed,\r\n                  humidity:item.main.humidity,\r\n                  weatherState: getWeatherState(item.weather)\r\n                  }\r\n                }\r\n          });\r\n      \r\n      };\r\n\r\n  \r\n","import { getData, transformForecastExtend } from \"../services/TransformWeather\";\r\nimport { findCity } from \"../services/findCity\";\r\nimport {\r\n  SET_CITY,\r\n  SET_FORECAST_DATA,\r\n  ADD_CITY,\r\n  SET_USER_LOCATION,\r\n  SEARCH_CITY_START,\r\n  SEARCH_CITY_SUCCESS,\r\n  SEARCH_CITY_FAIL,\r\n  HIDE_SEARCH_MODAL,\r\n  SHOW_SEARCH_MODAL,\r\n  DELETE_CITY\r\n} from \"./ActionTypes\";\r\nconst setCity = payload => ({ type: SET_CITY, payload });\r\nconst setForecastData = payload => ({ type: SET_FORECAST_DATA, payload });\r\n\r\nexport const setSelectedCity = payload => {\r\n  return dispatch => {\r\n    //activar indicador de busqueda\r\n    dispatch(setCity(payload));\r\n    getData(payload, \"forecast\")\r\n      .then(forecastData => {\r\n        //modificar el estado con el resultado del fecht\r\n        console.log(forecastData);\r\n        const forecastExtend = transformForecastExtend(forecastData);\r\n        console.log(forecastExtend);\r\n        dispatch(setForecastData({ city: payload, forecastExtend }));\r\n      })\r\n      .catch(err => console.log(`${err}`));\r\n  };\r\n};\r\n\r\nexport const addCity = city => {\r\n  return {\r\n    type: ADD_CITY,\r\n    payload: city\r\n  };\r\n};\r\nexport const setUserLocation = () => {\r\n  let locationUrl = \"https://json.geoiplookup.io/\";\r\n  return dispatch => {\r\n    fetch(locationUrl)\r\n      .then(res => res.json())\r\n      .then(\r\n        ({city, country_code}) => {\r\n          // set city in correct format for wheather api ej ( \" rosario , ar \")\r\n          let formatedCityInfo = [city, country_code].join(\",\");\r\n          dispatch(addCity(formatedCityInfo));\r\n          dispatch(setSelectedCity(formatedCityInfo));\r\n        }\r\n      ).catch( err => console.log(err))\r\n  };\r\n};\r\n\r\nconst searchCityStart = () => {\r\n  return {\r\n    type: SEARCH_CITY_START\r\n  };\r\n};\r\n\r\nconst searchCityfail = error => {\r\n  return {\r\n    type: SEARCH_CITY_FAIL,\r\n    payload: error\r\n  };\r\n};\r\nconst searchCitySuccess = cities => {\r\n  return {\r\n    type: SEARCH_CITY_SUCCESS,\r\n    payload: cities\r\n  };\r\n};\r\n\r\nexport const searchCity = city => {\r\n  return dispatch => {\r\n    dispatch(searchCityStart());\r\n    findCity(city)\r\n      .then(({ data }) => {\r\n        let formatedCitiesList = data.map(\r\n          city => city.name + \",\" + city.country\r\n        );\r\n        console.log(formatedCitiesList);\r\n        dispatch(searchCitySuccess(formatedCitiesList));\r\n      })\r\n      .catch(err => dispatch(searchCityfail(err)));\r\n  };\r\n};\r\n\r\nexport const showModal = () => {\r\n  return {\r\n    type: SHOW_SEARCH_MODAL\r\n  };\r\n};\r\n\r\nexport const hideModal = () => {\r\n  return {\r\n    type: HIDE_SEARCH_MODAL\r\n  };\r\n};\r\n\r\nexport const deleteCity = (city) => {\r\n  return{\r\n    type:DELETE_CITY,\r\n    payload:city\r\n  }\r\n}\r\n","export const SET_CITY = \"SET_CITY!\";\r\nexport const GET_CITIES = \"GET_CITIES\";\r\nexport const SET_FORECAST_DATA = \"SET_FORECAST_DATA\";\r\nexport const ADD_CITY = \"ADD_CITY\";\r\nexport const SET_USER_LOCATION = \"SET_USER_LOCATION\";\r\nexport const DELETE_CITY =\"DELETE_CITY\"\r\n\r\n// for city search\r\nexport const SHOW_SEARCH_MODAL =\"SHOW_SEARCH_MODAL\";\r\nexport const HIDE_SEARCH_MODAL =\"HIDE_SEARCH_MODAL\"\r\n\r\nexport const SEARCH_CITY_START = \"SEARCH_CITY_START\";\r\nexport const SEARCH_CITY_SUCCESS = \"SEARCH_CITY_SUCCESS\";\r\nexport const SEARCH_CITY_FAIL = \"SEARCH_CITY_FAIL\";\r\n","export const findCity = (criterio) => {\r\n  const url = `http://geodb-free-service.wirefreethought.com/v1/geo/cities?limit=5&offset=0&namePrefix=${criterio}`;\r\n  return fetch(url)\r\n    .then(res => res.json())\r\n    .then(res => res)\r\n    .catch(err => console.log(err));\r\n};\r\n","import React from 'react';\r\n//  fa-rainbow  fa-cloud-moon fa-cloud-moon-rain cloud-sun-rain fa-cloud-sun\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst getWeatherIcon= ({icon}) => {\r\n    return (`http://openweathermap.org/img/w/${icon}.png`);\r\n};\r\n\r\nconst useStyles = makeStyles( theme => {\r\n  return ({\r\n    temperature:{\r\n      flexGrow:\"2\",\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\"\r\n    }}\r\n  )\r\n})\r\nexport default ({temperature, weatherState}) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.temperature}>\r\n      <img  src={getWeatherIcon(weatherState)}alt=\"\" className=\"icon-img\" />\r\n      <h3>{`  ${temperature}`}<span className=\"tempDegrees\">Cº</span></h3>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\n\r\nconst useStyles = makeStyles( theme => {\r\n    return ({\r\n    extraInfo:{\r\n      flexGrow:\"1\",\r\n      color:\"blue\",\r\n      display:\"flex\",\r\n      flexDirection:\"column\",\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\"\r\n    }\r\n    }\r\n    )\r\n  })\r\nexport default ({humidity: h, wind: w}) => {\r\n   const classes = useStyles()\r\n  \r\n  return (\r\n    <div className={classes.extraInfo}>\r\n      <span>{`Humidity: ${h}%`}</span>\r\n      <span>{`Wind: ${w}`}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n// components\r\nimport WeatherTemperature from './Temperature';\r\nimport WeatherExtraInfo from './ExtraInfo';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( theme =>{\r\n  return {\r\n    \r\n      root:{\r\n        display:'flex',\r\n        backgroundColor: \"rgba(240, 240, 240, .5)\",\r\n        boxSizing:\"border-box\"\r\n      }\r\n    \r\n  }\r\n})\r\n\r\n\r\n\r\n\r\nexport  default ({data}) => {\r\n\r\n  const classes = useStyles()\r\n  \r\n  const {temperature, weatherState, humidity, wind } = data; \r\n \r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <WeatherTemperature temperature={temperature} weatherState={weatherState}/>\r\n      <WeatherExtraInfo  humidity={humidity} wind={wind} />\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Data from \"../WeatherData\";\r\n// Services\r\nimport {\r\n  transformWeather,\r\n  getData\r\n} from \"../../../services/TransformWeather.js\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\r\n\r\n\r\ntype props ={\r\n  city:string,\r\n  click: ()=> void,\r\n  onDelete: ()=> void,\r\n}\r\n\r\ntype state = {\r\n  data:any\r\n}\r\n\r\nexport default class Weather extends Component <props, state> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    data: null\r\n  };\r\n  }\r\n  \r\n\r\n  headleClick = city => {\r\n    this.props.click();\r\n  };\r\n\r\n  onDelete = e => {\r\n    e.stopPropagation()\r\n    this.props.onDelete()\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    getData(this.props.city).then(res => {\r\n      const weather = transformWeather(res);\r\n      this.setState({ data: weather });\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    const { city } = this.props;\r\n    const { data } = this.state;\r\n    return (\r\n      <div className=\"weatherItem\" onClick={this.headleClick}>\r\n        <Card style={{ marginBottom: \"1.5rem\" }}>\r\n          <CardHeader\r\n            title={city}\r\n            action={\r\n              <IconButton aria-label=\"settings\" onClick={this.onDelete}>\r\n                <CancelIcon color=\"secondary\" />\r\n              </IconButton>\r\n            }\r\n          />\r\n          <CardContent>\r\n            {data ? <Data data={data} /> : <p>cargando</p>}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\ntype props = {\r\n  show: boolean,\r\n  city: string | null,\r\n  onSubmit: () => void;\r\n  onCancel: () => void;\r\n};\r\nexport default function weatherAlert({ show, city, onSubmit, onCancel }: props) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={show}\r\n        onClose={onCancel}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Are you sure to delete this location ?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {city}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onCancel} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport { Fab } from \"@material-ui/core\";\r\n\r\n\r\nexport default function WeatherListController(props) {\r\n\r\n  const clickHandler = () => {\r\n      props.showModal()\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      <Fab color=\"primary\" variant=\"extended\" aria-label=\"add\" onClick={clickHandler}>\r\n        <LocationOnIcon/> NEW\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport WeatherItem from \"../weatherItem/weatherItem.tsx\";\r\nimport WeatherAlert from \"../weatherAlert/weatherAlert.tsx\"\r\nimport WeatherListController from \"../weatherListController/weatherListController\";\r\n\r\nexport default class WeatherList extends Component {\r\n  \r\n  state={\r\n    showModal:false,\r\n    deleteItem:null\r\n  }\r\n  modalSubmit=()=>{\r\n    this.setState({showModal:false})\r\n    this.props.deleteCity(this.state.deleteItem)\r\n  }\r\n\r\n  modalCancel=()=>{\r\n    console.log(\"cancelado\")\r\n    this.setState({showModal:false, deleteItem:false})\r\n  }\r\n\r\n  setDeleteItem=(index)=>{\r\n    this.setState({deleteItem:index, showModal:true})\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { cities } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        \r\n      <div className=\"weatherList\">\r\n        {cities.map((city, index) => (\r\n          <WeatherItem\r\n            key={city + index}\r\n            city={city}\r\n            click={() => this.props.selectCity(city)}\r\n            onDelete={()=> this.setDeleteItem(index)}\r\n          />\r\n        ))}\r\n        <WeatherListController showModal ={this.props.showModal} />\r\n      </div>\r\n      <WeatherAlert show={this.state.showModal} onSubmit={this.modalSubmit} onCancel={this.modalCancel} city={this.state.deleteItem} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\n\r\n\r\n//lista\r\n\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { CircularProgress, Fab } from \"@material-ui/core/\";\r\n\r\n// redux\r\n\r\nimport * as actions from \"./../../actions/index\";\r\n\r\nexport default function SearchModal(props) {\r\n  const handleClose = () => {\r\n    console.log(\"close\");\r\n  };\r\n  const inputChangedHanler = event => {\r\n    let value = event.target.value;\r\n    if (value.trim().length < 3) {\r\n      return null;\r\n    }\r\n    setTimeout(() => {\r\n      props.searchCity(value);\r\n    }, 200);\r\n  };\r\n\r\n  const clickHandler = (index) => {\r\n    props.addCity(props.searchResults[index])\r\n  }\r\n  return (\r\n    <>\r\n    {console.log(props.searchResults)}\r\n      <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">New location</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"city\"\r\n            label=\"find\"\r\n            type=\"text\"\r\n            onChange={inputChangedHanler}\r\n            fullWidth\r\n          />\r\n          {props.isLoading && <CircularProgress />}\r\n          {props.searchResults && (\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n              {props.searchResults.map((result, index) => {\r\n                return (\r\n                  <ListItem button onClick={() =>clickHandler(index)} key={result+index}>\r\n                    <ListItemIcon>\r\n                    <LocationOnIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={result} />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n\r\n          <Fab color=\"primary\" onClick={handleClose} aria-label=\"add\">\r\n            <AddIcon />\r\n          </Fab>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport { setSelectedCity, setUserLocation, searchCity, showModal, hideModal, addCity, deleteCity } from \"../actions\";\r\n// components\r\nimport WeatherList from \"../Components/Weather/WeatherList/WeatherList\";\r\nimport SearchModal from \"../Components/modal/modal\";\r\n\r\nclass ForecastListContainer extends Component {\r\n \r\n  static propTypes = {\r\n    dispatchsetCity: PropTypes.func.isRequired\r\n  };\r\n\r\n  handleSelectionLocation = city => {\r\n    this.props.dispatchsetCity(city);\r\n  };\r\n\r\n  componentDidMount(){\r\n    console.log(\"component did mount\")\r\n    this.props.setUserLocation()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <WeatherList\r\n          cities={this.props.cities}\r\n          selectCity={this.handleSelectionLocation}\r\n          showModal={this.props.onShowModal}\r\n          deleteCity={this.props.onDeleteCity}\r\n        />\r\n        <SearchModal open={this.props.showModal} \r\n        searchCity={this.props.searchCity} \r\n        isLoading={this.props.isLoading}\r\n        searchResults ={this.props.searchResults}\r\n        addCity={this.props.addCity}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForecastListContainer.propsType = {\r\n  setCity: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatchsetCity: city => dispatch(setSelectedCity(city)),\r\n  setUserLocation: () => dispatch(setUserLocation()),\r\n  searchCity: (criterio)=> dispatch(searchCity(criterio)),\r\n  onShowModal: ()=> dispatch(showModal()),\r\n  onHideModal: () => dispatch(hideModal()),\r\n  addCity: (city)=> dispatch(addCity(city)),\r\n  onDeleteCity: (city)=> dispatch(deleteCity(city))\r\n});\r\n\r\nconst mapStateToProps = ({ cityReducer }) => ({\r\n  cities: cityReducer.cities,\r\n  isLoading: cityReducer.isLoading,\r\n  searchResults: cityReducer.searchResults,\r\n  showModal: cityReducer.showModal\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForecastListContainer);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// components\r\nimport WeatherData from '../WeatherData';\r\nimport {Card, CardHeader, CardContent} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStiles= makeStyles( theme => {\r\n  return ({root:{\r\n    margin:\"1rem\"\r\n  }})\r\n})\r\n\r\nexport default ({weekDay, hour, data })=> {\r\n  const classes = useStiles();\r\n\r\n    return (\r\n      <React.Fragment>\r\n          <Card className={classes.root}>\r\n            <CardHeader title={weekDay} subheader={hour} />\r\n            <CardContent>\r\n              <WeatherData data={data}></WeatherData>\r\n            </CardContent>\r\n            \r\n          </Card>\r\n      </React.Fragment> \r\n    )\r\n  \r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ForescastItem from \"../ForecastItem/ForecastItem\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst ForecastExtended = ({ city, forecastExtendedData }) => {\r\n  let forecast = <CircularProgress />;\r\n\r\n  if (forecastExtendedData && forecastExtendedData[city]) {\r\n    forecast = forecastExtendedData[city].map((day, index) => (\r\n      <ForescastItem\r\n        weekDay={day.weekDay}\r\n        hour={day.hour}\r\n        data={day.data}\r\n        key={index}\r\n      ></ForescastItem>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"forecastExtendedCont\">\r\n      {city && <h1>{city}</h1>}\r\n      {forecast}\r\n    </div>\r\n  );\r\n};\r\nForecastExtended.propTypes = {\r\n  city: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ForecastExtended;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ForecastExtended from \"../Components/Weather/ForecastExtended/ForecastExtended\";\r\n\r\nclass ForecastExtendedContainer extends Component {\r\n  static propTypes = {\r\n    city: PropTypes.string.isRequired\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.city ? (\r\n          <ForecastExtended city={this.props.city} forecastExtendedData={this.props.forecastExtendedData}/>\r\n        ) : (\r\n          <h1>no se selecciono ninguna ciudad</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapsStateToProps = ({ cityReducer, extendedForecastReducer }) => {\r\n  return { \r\n    city: cityReducer.selectedCity,\r\n    forecastExtendedData: extendedForecastReducer\r\n  };\r\n};\r\nexport default connect(mapsStateToProps, null)(ForecastExtendedContainer);\r\n","import React, { Component } from \"react\";\n// material\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\n\n// Components\nimport Header from \"./Components/Header/Header\";\nimport LocationListContainer from \"./Containers/LocationListContainer\";\nimport ForecastExtendedContainer from \"./Containers/ForecastExtendedContainer\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: \"1rem\",\n      textAlign: \"center\"\n    },\n    container:{\n      marginTop:'80px'\n    }\n  };\n});\n\nexport default () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Container className={classes.container} maxWidth=\"md\">\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <Paper className={classes.paper}>\n              <LocationListContainer />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Paper className={classes.paper}>\n              <ForecastExtendedContainer />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  SET_CITY,\r\n  ADD_CITY,\r\n  SEARCH_CITY_START,\r\n  SEARCH_CITY_FAIL,\r\n  SEARCH_CITY_SUCCESS,\r\n  SHOW_SEARCH_MODAL,\r\n  HIDE_SEARCH_MODAL,\r\n  DELETE_CITY\r\n} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  selectedCity: null,\r\n  cities: [],\r\n  searchResults: [],\r\n  isLoading: false,\r\n  showModal: false\r\n};\r\n\r\nexport const cityReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CITY:\r\n      return { ...state, selectedCity: action.payload };\r\n    case ADD_CITY:\r\n      let newCitiesList = [...state.cities, action.payload];\r\n      return { ...state, cities: newCitiesList, showModal:false };\r\n    case SEARCH_CITY_START:\r\n      return { ...state, isLoading: true };\r\n    case SEARCH_CITY_FAIL:\r\n      return { ...state, isLoading: false };\r\n    case SEARCH_CITY_SUCCESS:\r\n      return { ...state, isLoading: false, searchResults: action.payload };\r\n    case SHOW_SEARCH_MODAL:\r\n      return { ...state, showModal: true, searchResults:[] };\r\n    case HIDE_SEARCH_MODAL:\r\n      return { ...state, showModal: false, searchResults:[] };\r\n    case DELETE_CITY:\r\n      newCitiesList =state.cities.filter((city, i)=> i !== action.payload)\r\n      if(state.selectedCity === state.cities[action.payload]){\r\n        return { ...state, cities: newCitiesList, selectedCity:state.cities[0] }\r\n      }else if(state.cities.length === 0){\r\n        console.log(\"lentg = 0\")\r\n        return { ...state, cities: newCitiesList, selectedCity:null }\r\n      }\r\n      return { ...state, cities: newCitiesList }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {extendedForecastReducer} from './forecastExtendedReducer.js'\r\nimport {cityReducer} from './cityReducer.js';\r\n\r\nexport default combineReducers({\r\n    cityReducer, extendedForecastReducer\r\n})\r\n","import {SET_FORECAST_DATA} from  '../actions/ActionTypes';\r\n\r\nconst initialState={\r\n\r\n}\r\n\r\nexport  const extendedForecastReducer = (state =null, action) => {\r\n    switch (action.type) {\r\n        case SET_FORECAST_DATA:\r\n            const {city, forecastExtend} =action.payload;\r\n            return {...state, [city]: forecastExtend };\r\n        default:\r\n            return state ;\r\n    }\r\n}","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './../reducers/';\r\n\r\nconst composeEnhancers= window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store= createStore( reducers, composeEnhancers(applyMiddleware(thunk)) );\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from './store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}