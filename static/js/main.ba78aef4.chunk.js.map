{"version":3,"sources":["Components/Header/Header.js","services/TransformWeather.js","actions/index.js","actions/ActionTypes.js","services/findCity.js","Components/Weather/WeatherData/Temperature.js","Components/Weather/WeatherData/ExtraInfo.js","Components/Weather/WeatherData/index.js","Components/Weather/weatherItem/weatherItem.tsx","Components/Weather/weatherAlert/weatherAlert.tsx","Components/Weather/weatherListController/weatherListController.js","Components/Weather/WeatherList/WeatherList.js","Components/modal/modal.js","Containers/LocationListContainer.js","Components/Weather/ForecastItem/ForecastItem.js","Components/Weather/ForecastExtended/ForecastExtended.js","Containers/ForecastExtendedContainer.js","Components/user/userProfile.js","Containers/userContainer.js","App.js","serviceWorker.js","reducers/cityReducer.js","reducers/index.js","reducers/forecastExtendedReducer.js","store/index.js","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","handleClose","comingSoon","alert","classes","react_default","a","createElement","Fragment","AppBar","position","Toolbar","Typography","variant","className","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","getData","city","type","arguments","length","undefined","api_weather","concat","fetch","then","res","json","catch","err","transformWeather","speed","wind","_res$main","main","humidity","temp","weather","weatherState","getWeatherState","temperature","_ref","description","icon","getForecastData","payload","dispatch","forecastData","forecastExtend","list","filter","item","moment","unix","dt","utc","hour","map","weekDay","format","data","setForecastData","console","log","addCity","searchCity","criterio","googglePlaceApi","findCity","_ref2","formatedCitiesList","_embedded","cityNameArray","matching_full_name","split","cities","searchCitySuccess","getWeatherIcon","display","justifyContent","alignItems","Temperature","src","alt","extraInfo","flexDirection","ExtraInfo","h","w","backgroundColor","boxSizing","WeatherData","Weather","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","headleClick","path","history","replace","onDelete","e","stopPropagation","componentWillMount","setState","render","state","Card","style","marginBottom","CardHeader","action","IconButton","aria-label","Cancel_default","CardContent","Component","withRouter","weatherAlert","show","onSubmit","onCancel","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","WeatherListController","Fab","showModal","LocationOn_default","WeatherList","deleteItem","modalSubmit","deleteCity","modalCancel","setDeleteItem","index","_this2","_this$props","Grid","xs","md","Paper","paper","weatherItem","key","withStyles","padding","textAlign","SearchModal","searchResults","TextField","margin","label","onChange","value","target","trim","setTimeout","fullWidth","isLoading","CircularProgress","List","component","result","ListItem","button","clickHandler","ListItemIcon","ListItemText","primary","Add_default","ForecastListContainer","handleSelectionLocation","dispatchsetCity","setUserLocation","Weather_WeatherList_WeatherList","onShowModal","onDeleteCity","propsType","setCity","PropTypes","func","isRequired","connect","cityReducer","formatedCityInfo","country_name","join","onHideModal","useStiles","ForecastItem","expansionPanelDetail","ForecastExtended","forecastExtendedData","forecast","forecastGroups","reduce","toConsumableArray","groupArray","group","push","defineProperty","dayGroup","groupIndex","dayGroupName","name","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","day","sm","ForecastExtendedContainer","match","params","nextProps","nextState","getForecast","Weather_ForecastExtended_ForecastExtended","extendedForecastReducer","actions","height","large","width","userProfile","Avatar","gutterBottom","pos","CardActions","size","userContainer","container","marginTop","window","location","hostname","initialState","selectedCity","combineReducers","objectSpread","newCitiesList","i","_action$payload","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","routes","react_router","LocationListContainer","Containers_ForecastExtendedContainer","from","to","isAuth","exact","react_router_dom","Container","maxWidth","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iVAcMA,EAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAO,CACLJ,SAAU,MAIC,SAASK,IAAS,IAAAC,EACCC,IAAMC,SAAS,MADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACxBM,EADwBH,EAAA,GACdI,EADcJ,EAAA,GAOzBK,EAAc,WAClBD,EAAY,OAGRE,EAAW,WACfC,MAAM,eACNF,KAGIG,EAAUrB,IAEhB,OACEsB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,SAAS,UACfL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWV,EAAQb,OAA5C,cAGAc,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACEC,gBAAc,cACdC,gBAAc,OACdC,QAzBU,SAAAC,GAClBnB,EAAYmB,EAAMC,gBAyBVP,QAAQ,YAAYQ,MAAM,WAJ5B,QAQAhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEC,GAAG,cACHxB,SAAUA,EACVyB,aAAW,EACXC,KAAMC,QAAQ3B,GACd4B,QAAS1B,GAETI,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAUV,QAAShB,GAAnB,WACAG,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAUV,QAAShB,GAAnB,cACAG,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAUV,QAAShB,GAAnB,4FCjEC2B,EAAU,SAACC,GAAyB,IAAnBC,EAAmBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,UAE7BG,EAAW,2CAAAC,OAA8CL,EAA9C,OAAAK,OAAwDN,EAAxD,wBAAAM,OADF,oCAEZ,OAAOC,MAAMF,GACXG,KAAM,SAAAC,GACJ,OAAOA,EAAIC,SAEbF,KAAM,SAAAC,GACH,OAAOA,IAEVE,MAAO,SAAAC,GACJ,MAAMA,KAKEC,EAAmB,SAACJ,GAAQ,IAC7BK,EAASL,EAAIM,KAAbD,MAD6BE,EAEXP,EAAIQ,KAAtBC,EAF6BF,EAE7BE,SAAUC,EAFmBH,EAEnBG,KACVC,EAAWX,EAAXW,QAEP,MAAQ,CACNF,WACAG,aAHmBC,EAAgBF,GAInCG,YAAYJ,EACZJ,KAAI,GAAAT,OAAKQ,EAAL,SAKNQ,EAAkB,SAAAE,GAAc,IAAZJ,EAAYrD,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,MAOpC,MALoB,CACZP,KAF2BG,EAA3BH,KAGAQ,YAH2BL,EAArBK,YAINC,KAJ2BN,EAARM,OCjBlBC,EAAkB,SAAAC,GAC7B,OAAO,SAAAC,GACL9B,EAAQ6B,EAAS,YACdpB,KAAK,SAAAsB,GAEJ,IAAMC,EAAyCD,EDsBZE,KAEtBC,OAAQ,SAAAC,GAAI,OACa,IAAtCC,IAAOC,KAAKF,EAAKG,IAAIC,MAAMC,QACW,KAAtCJ,IAAOC,KAAKF,EAAKG,IAAIC,MAAMC,QACW,KAAtCJ,IAAOC,KAAKF,EAAKG,IAAIC,MAAMC,SAC1BC,IAAK,SAAAN,GACF,MAAQ,CACJO,QAAQN,IAAOC,KAAKF,EAAKG,IAAIK,OAAO,OACpCH,KAAKJ,IAAOC,KAAKF,EAAKG,IAAIE,OAC1BI,KAAK,CACHpB,YAAYW,EAAKjB,KAAKE,KACtBJ,KAAKmB,EAAKnB,KAAKD,MACfI,SAASgB,EAAKjB,KAAKC,SACnBG,aAAcC,EAAgBY,EAAKd,aCnC7CS,EARgB,SAAAD,GAAO,MAAK,CAAE3B,KCTL,oBDS8B2B,WAQ9CgB,CAAgB,CAAE5C,KAAM4B,EAASG,sBAE3CpB,MAAM,SAAAC,GAAG,OAAIiC,QAAQC,IAAR,GAAAxC,OAAeM,QAItBmC,EAAU,SAAA/C,GACrB,MAAO,CACLC,KC7BoB,WD8BpB2B,QAAS5B,IAsCAgD,EAAa,SAAAhD,GACxB,OAAO,SAAA6B,GACLA,EApBK,CACL5B,KCnC6B,sBClBT,SAACgD,GAEvB,IAAIC,EAAe,+CAAA5C,OAAgD2C,GACnE,OAAO1C,MAAM2C,GACV1C,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GAAG,OAAIA,IACZE,MAAM,SAAAC,GAAG,OAAIiC,QAAQC,IAAIlC,KFmE1BuC,CAASnD,GACNQ,KAAK,SAAA4C,GAAiB,IAEjBC,EAFiBD,EAAfE,UACmB,uBACOd,IAAK,SAAAxC,GAEnC,IAAIuD,EAAgBvD,EAAKwD,mBAAmBC,MAAM,KAKlD,OAJcF,EAAc,GAGA,IADdA,EAAcA,EAAcpD,OAAS,GAAGsD,MAAM,KAAK,KAKnE5B,EAvBkB,SAAA6B,GACxB,MAAO,CACLzD,KC9C+B,sBD+C/B2B,QAAS8B,GAoBIC,CAAkBN,MAE5B1C,MAAM,SAAAC,GAAG,OAAIiB,EA9BX,CACL5B,KCvC4B,mBDwC5B2B,QA4BwChB,QGpFtCgD,EAAgB,SAAApC,GAAY,IAAVE,EAAUF,EAAVE,KACpB,yCAAApB,OAA2CoB,EAA3C,SAGEzE,EAAYC,YAAY,SAAAC,GAC5B,MAAQ,CACNoE,YAAY,CACVlE,SAAS,IACTwG,QAAQ,OACRC,eAAe,SACfC,WAAW,aAIFC,EAAA,SAAAZ,GAAiC,IAA/B7B,EAA+B6B,EAA/B7B,YAAaF,EAAkB+B,EAAlB/B,aACtB/C,EAAUrB,IAChB,OACEsB,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQiD,aACtBhD,EAAAC,EAAAC,cAAA,OAAMwF,IAAKL,EAAevC,GAAc6C,IAAI,GAAGlF,UAAU,aACzDT,EAAAC,EAAAC,cAAA,eAAA6B,OAAUiB,GAAchD,EAAAC,EAAAC,cAAA,QAAMO,UAAU,eAAhB,YCnBxB/B,EAAYC,YAAY,SAAAC,GAC1B,MAAQ,CACRgH,UAAU,CACR9G,SAAS,IACTkC,MAAM,OACNsE,QAAQ,OACRO,cAAc,SACdN,eAAe,SACfC,WAAW,aAKFM,EAAA,SAAA7C,GAA4B,IAAhB8C,EAAgB9C,EAA1BN,SAAmBqD,EAAO/C,EAAbT,KACrBzC,EAAUrB,IAEjB,OACEsB,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQ6F,WACtB5F,EAAAC,EAAAC,cAAA,yBAAA6B,OAAoBgE,EAApB,MACA/F,EAAAC,EAAAC,cAAA,qBAAA6B,OAAgBiE,MChBhBtH,EAAYC,YAAY,SAAAC,GAC5B,MAAO,CAEHC,KAAK,CACHyG,QAAQ,OACRW,gBAAiB,0BACjBC,UAAU,iBASFC,EAAA,SAAAlD,GAAY,IAAVmB,EAAUnB,EAAVmB,KAEVrE,EAAUrB,IAETsE,EAA8CoB,EAA9CpB,YAAaF,EAAiCsB,EAAjCtB,aAAcH,EAAmByB,EAAnBzB,SAAUH,EAAS4B,EAAT5B,KAG5C,OACExC,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQlB,MACtBmB,EAAAC,EAAAC,cAACuF,EAAD,CAAoBzC,YAAaA,EAAaF,aAAcA,IAC5D9C,EAAAC,EAAAC,cAAC4F,EAAD,CAAmBnD,SAAUA,EAAUH,KAAMA,2DCX7C4D,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA9G,OAAA+G,EAAA,EAAA/G,CAAAgH,KAAAJ,IACjBE,EAAA9G,OAAAiH,EAAA,EAAAjH,CAAAgH,KAAAhH,OAAAkH,EAAA,EAAAlH,CAAA4G,GAAAO,KAAAH,KAAMH,KAORO,YAAe,WAEb,IAAIC,EAAI,YAAA9E,OAAeuE,EAAKD,MAAM5E,KAA1B,aACR6C,QAAQC,IAAI+B,EAAKD,MAAMS,QAAQC,QAAQF,KAXtBP,EAcnBU,SAAW,SAAAC,GACTA,EAAEC,kBACFZ,EAAKD,MAAMW,YAhBMV,EAmBnBa,mBAAqB,WACnB3F,EAAQ8E,EAAKD,MAAM5E,MAAMQ,KAAK,SAAAC,GAC5B,IAAMW,EAAUP,EAAiBJ,GACjCoE,EAAKc,SAAS,CAAEhD,KAAMvB,OAtBPyD,EA0BnBe,OAAS,WAAM,IACL5F,EAAS6E,EAAKD,MAAd5E,KACA2C,EAASkC,EAAKgB,MAAdlD,KACR,OACIpE,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAMC,MAAO,CAAEC,aAAc,UAAY5G,QAASyF,EAAKM,aACrD5G,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CACExI,MAAOuC,EACPkG,OACE3H,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAYC,aAAW,WAAWhH,QAASyF,EAAKU,UAC9ChH,EAAAC,EAAAC,cAAC4H,EAAA7H,EAAD,CAAYe,MAAM,iBAIxBhB,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACG3D,EAAOpE,EAAAC,EAAAC,cAACiG,EAAD,CAAM/B,KAAMA,IAAWpE,EAAAC,EAAAC,cAAA,wBAtCvCoG,EAAKgB,MAAQ,CACblD,KAAM,MAHWkC,6BADC0B,aAgDPC,cAAW7B,mDCtDX,SAAS8B,GAATjF,GAAiE,IAAzCkF,EAAyClF,EAAzCkF,KAAM1G,EAAmCwB,EAAnCxB,KAAM2G,EAA6BnF,EAA7BmF,SAAUC,EAAmBpF,EAAnBoF,SAC3D,OACErI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CACElH,KAAM+G,EACN7G,QAAS+G,EACTE,kBAAgB,qBAChBC,mBAAiB,4BAEjBxI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAavH,GAAG,sBACb,0CAEHlB,EAAAC,EAAAC,cAACwI,GAAA,EAAD,KACE1I,EAAAC,EAAAC,cAACyI,GAAA,EAAD,CAAmBzH,GAAG,4BACnBO,IAGLzB,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,KACE5I,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQG,QAASwH,EAAUrH,MAAM,WAAjC,YAGAhB,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQG,QAASuH,EAAUpH,MAAM,UAAU6H,WAAS,GAApD,8CC/BK,SAASC,GAAsBzC,GAK5C,OACErG,EAAAC,EAAAC,cAAA,OAAKO,UAAU,IACbT,EAAAC,EAAAC,cAAC6I,GAAA,EAAD,CAAK/H,MAAM,UAAUR,QAAQ,WAAWqH,aAAW,MAAMhH,QALxC,WACjBwF,EAAM2C,cAKJhJ,EAAAC,EAAAC,cAAC+I,GAAAhJ,EAAD,MADF,iCCGAiJ,8MACJ5B,MAAQ,CACN0B,WAAW,EACXG,WAAY,QAEdC,YAAc,WACZ9C,EAAKc,SAAS,CAAE4B,WAAW,IAC3B1C,EAAKD,MAAMgD,WAAW/C,EAAKgB,MAAM6B,eAGnCG,YAAc,WACZhF,QAAQC,IAAI,aACZ+B,EAAKc,SAAS,CAAE4B,WAAW,EAAOG,YAAY,OAGhDI,cAAgB,SAAAC,GACdlD,EAAKc,SAAS,CAAE+B,WAAYK,EAAOR,WAAW,6EAGvC,IAAAS,EAAAjD,KAAAkD,EACqBlD,KAAKH,MAAzBlB,EADDuE,EACCvE,OAAQpF,EADT2J,EACS3J,QAChB,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAMhG,MAAI,EAACiG,GAAI,GAAIC,GAAI,GACrB7J,EAAAC,EAAAC,cAAC4J,GAAA,EAAD,CAAOrJ,UAAWV,EAAQgK,OACvB5E,EAAOlB,IAAI,SAACxC,EAAM+H,GAAP,OACVxJ,EAAAC,EAAAC,cAAC8J,EAAD,CACEC,IAAKxI,EAAO+H,EACZ/H,KAAMA,EACNuF,SAAU,kBAAMyC,EAAKF,cAAcC,QAGvCxJ,EAAAC,EAAAC,cAAC4I,GAAD,CAAuBE,UAAWxC,KAAKH,MAAM2C,cAIjDhJ,EAAAC,EAAAC,cAACgI,GAAD,CACEC,KAAM3B,KAAKc,MAAM0B,UACjBZ,SAAU5B,KAAK4C,YACff,SAAU7B,KAAK8C,YACf7H,KAAM+E,KAAKc,MAAM6B,qBAxCDnB,aA+CXkC,gBAvDA,SAAAtL,GACb,MAAO,CACLmL,MAAO,CACLI,QAAS,OACTC,UAAW,YAmDFF,CAAmBhB,oFCnCnB,SAASmB,GAAYhE,GAClC,IAAMzG,EAAc,WAClB0E,QAAQC,IAAI,UAed,OACEvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACCmE,QAAQC,IAAI8B,EAAMiE,eACjBtK,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAQlH,KAAMiF,EAAMjF,KAAMmH,kBAAgB,qBACxCvI,EAAAC,EAAAC,cAACuI,GAAA,EAAD,CAAavH,GAAG,qBAAhB,gBACAlB,EAAAC,EAAAC,cAACwI,GAAA,EAAD,KACE1I,EAAAC,EAAAC,cAACqK,GAAA,EAAD,CACE1B,WAAS,EACT2B,OAAO,QACPtJ,GAAG,OACHuJ,MAAM,OACN/I,KAAK,OACLgJ,SAzBiB,SAAA5J,GACzB,IAAI6J,EAAQ7J,EAAM8J,OAAOD,MACzB,GAAIA,EAAME,OAAOjJ,OAAS,EACxB,OAAO,KAETkJ,WAAW,WACTzE,EAAM5B,WAAWkG,IAChB,MAmBKI,WAAS,IAEV1E,EAAM2E,WAAahL,EAAAC,EAAAC,cAAC+K,GAAA,EAAD,MACnB5E,EAAMiE,eACLtK,EAAAC,EAAAC,cAACgL,GAAA,EAAD,CAAMC,UAAU,MAAMtD,aAAW,wBAC9BxB,EAAMiE,cAAcrG,IAAI,SAACmH,EAAQ5B,GAChC,OACExJ,EAAAC,EAAAC,cAACmL,GAAA,EAAD,CAAUC,QAAM,EAACzK,QAAS,kBAvBrB,SAAC2I,GACpBnD,EAAM7B,QAAQ6B,EAAMiE,cAAcd,IAsBW+B,CAAa/B,IAAQS,IAAKmB,EAAO5B,GAC9DxJ,EAAAC,EAAAC,cAACsL,GAAA,EAAD,KACAxL,EAAAC,EAAAC,cAAC+I,GAAAhJ,EAAD,OAEAD,EAAAC,EAAAC,cAACuL,GAAA,EAAD,CAAcC,QAASN,SAOnCpL,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,KACE5I,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQG,QAASjB,EAAaoB,MAAM,WAApC,UAIAhB,EAAAC,EAAAC,cAAC6I,GAAA,EAAD,CAAK/H,MAAM,UAAUH,QAASjB,EAAaiI,aAAW,OACpD7H,EAAAC,EAAAC,cAACyL,GAAA1L,EAAD,cC/DN2L,8MAKJC,wBAA0B,SAAApK,GACxB6E,EAAKD,MAAMyF,gBAAgBrK,uFAI3B+E,KAAKH,MAAM0F,mDAIX,OACE/L,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAC8L,GAAD,CACE7G,OAAQqB,KAAKH,MAAMlB,OACnB6D,UAAWxC,KAAKH,MAAM4F,YACtB5C,WAAY7C,KAAKH,MAAM6F,eAEzBlM,EAAAC,EAAAC,cAACmK,GAAD,CACEjJ,KAAMoF,KAAKH,MAAM2C,UACjBvE,WAAY+B,KAAKH,MAAM5B,WACvBuG,UAAWxE,KAAKH,MAAM2E,UACtBV,cAAe9D,KAAKH,MAAMiE,cAC1B9F,QAASgC,KAAKH,MAAM7B,kBA1BMwD,aAiCpC4D,GAAsBO,UAAY,CAChCC,QAASC,IAAUC,KAAKC,YAG1B,IAgBeC,eAPS,SAAAvJ,GAAA,IAAGwJ,EAAHxJ,EAAGwJ,YAAH,MAAsB,CAC5CtH,OAAQsH,EAAYtH,OACpB6F,UAAWyB,EAAYzB,UACvBV,cAAemC,EAAYnC,cAC3BtB,UAAWyD,EAAYzD,YAbE,SAAA1F,GAAQ,MAAK,CACtCyI,gBAAiB,kBAAMzI,EXnBhB,SAAAA,GACLtB,MAFgB,0BAGbC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAAgB,GAA2B,IAErByJ,EAAmB,CAFEzJ,EAAxBxB,KAAwBwB,EAAlB0J,cAEqCC,KAAK,MACjDtJ,EAASkB,EAAQkI,IACjBpJ,EAASF,EAAgBsJ,SWYjCjI,WAAY,SAAAC,GAAQ,OAAIpB,EAASmB,EAAWC,KAC5CuH,YAAa,kBAAM3I,EXmCZ,CACL5B,KC/E4B,uBU4C9BmL,YAAa,kBAAMvJ,EXwCZ,CACL5B,KCpF4B,uBU4C9B8C,QAAS,SAAA/C,GAAI,OAAI6B,EAASkB,EAAQ/C,KAClCyK,aAAc,SAAAzK,GAAI,OAAI6B,EX2CE,SAAC7B,GACzB,MAAM,CACJC,KCtGsB,cDuGtB2B,QAAQ5B,GW9CqB4H,CAAW5H,OAU7B+K,CAGbZ,sBCnEIkB,GAAWnO,YAAY,SAAAC,GAC3B,MAAQ,CAACC,KAAK,CACZ2L,OAAO,WAIXuC,GAAA,SAAe9J,GAA2BA,EAAzBiB,QAAyB,IAAhBF,EAAgBf,EAAhBe,KAAMI,EAAUnB,EAAVmB,KACxBrE,EAAU+M,KAEd,OACE9M,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAM9G,UAAWV,EAAQlB,MACvBmB,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CAAYxI,MAAK,GAAA6C,OAAKiC,EAAL,SACjBhE,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACE/H,EAAAC,EAAAC,cAACiG,EAAD,CAAa/B,KAAMA,0DCN3B1F,GAAYC,YAAW,SAAAC,GAC3B,MAAO,CACLmL,MAAO,CACLI,QAAS,OACTC,UAAW,UAEb4C,qBAAqB,CACnBnH,cAAc,aAmELoH,GA9DU,SAAAhK,GAAoC,IAAjCxB,EAAiCwB,EAAjCxB,KAAMyL,EAA2BjK,EAA3BiK,qBAC1BnN,EAAUrB,KACZyO,EAAWnN,EAAAC,EAAAC,cAAC+K,GAAA,EAAD,MAEf,GAAIiC,GAAwBA,EAAqB,KAAOzL,EAAM,CAG5D,IAAI2L,EAAiBF,EAAqB,GAAGG,OAAO,SAACnJ,EAASjE,GAE5D,OADAiE,EAAQjE,EAAEiE,SAAV,GAAAnC,OAAAvC,OAAA8N,GAAA,EAAA9N,CAA0B0E,EAAQjE,EAAEiE,UAAY,IAAhD,CAAqDjE,IAC9CiE,GACN,IAGCqJ,EAAW,GACf,IAAI,IAAIC,KAASJ,EACfG,EAAWE,KAAXjO,OAAAkO,GAAA,EAAAlO,CAAA,GAAkBgO,EAAOJ,EAAeI,KAG1CL,EAAUI,EAAWtJ,IAAI,SAAC0J,EAAUC,GAClC,IAAIC,EACJ,IAAI,IAAIC,KAAQH,EACdE,EAAaC,EAEf,OACE9N,EAAAC,EAAAC,cAAC6N,GAAA,EAAD,CAAgB9D,IAAK4D,EAAeD,GAChC5N,EAAAC,EAAAC,cAAC8N,GAAA,EAAD,CACE/D,IAAK4D,EAAaD,EAClBK,WAAYjO,EAAAC,EAAAC,cAACgO,GAAAjO,EAAD,MACZU,gBAAekN,EACf3M,GAAI2M,GAEF7N,EAAAC,EAAAC,cAACK,EAAA,EAAD,KAAasN,IAEjB7N,EAAAC,EAAAC,cAACiO,GAAA,EAAD,CAAuB1N,UAAWV,EAAQiN,sBACvCW,EAASE,GAAc5J,IAAK,SAACmK,EAAK5E,GACjC,OACExJ,EAAAC,EAAAC,cAAC6M,GAAD,CACA7I,QAASkK,EAAIlK,QACbF,KAAMoK,EAAIpK,KACVI,KAAMgK,EAAIhK,KACV6F,IAAKmE,EAAI5E,UAUzB,OACExJ,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAMhG,MAAI,EAAC0K,GAAI,GAAIxE,GAAI,GACrB7J,EAAAC,EAAAC,cAAC4J,GAAA,EAAD,CAAOrJ,UAAWV,EAAQgK,OACxB/J,EAAAC,EAAAC,cAAA,UAAKuB,GACJ0L,GACCA,KC3EJmB,+LAMS9H,KAAKH,MAAMkI,MAAMC,OAAO/M,mDAGfgN,EAAWC,GAE/B,OADApK,QAAQC,IAAI,WACL,+CAIP,GAAGiC,KAAKH,MAAM6G,qBAAqB,KAAO1G,KAAKH,MAAMkI,MAAMC,OAAO/M,KAAK,CAEvE,IAAIA,EAAO+E,KAAKH,MAAMkI,MAAMC,OAAO/M,KACnC+E,KAAKH,MAAMsI,YAAYlN,qCAMvB,IAAIA,EAAO+E,KAAKH,MAAMkI,MAAMC,OAAO/M,KACnC,OACMzB,EAAAC,EAAAC,cAAC0O,GAAD,CAAkBnN,KAAMA,EAAMyL,qBAAsB1G,KAAKH,MAAM6G,8BA1BjClF,aAyCzBwE,eAXU,SAAAvJ,GACvB,MAAO,CACLiK,qBAFqDjK,EAA9B4L,0BAMA,SAAAvL,GACzB,MAAO,CACLqL,YAAa,SAAClN,GAAD,OAAU6B,EAASwL,EAAwBrN,OAG7C+K,CAA8CvE,YAAWqG,kCC1ClE5P,GAAYC,YAAW,SAAAC,GAC3B,MAAO,CACLC,KAAM,GAGNM,OAAQ,CACN4P,OAAQ,QACRzJ,QAAS,OACTC,eAAgB,UAElByJ,MAAO,CACLC,MAAOrQ,EAAMK,QAAQ,IACrB8P,OAAQnQ,EAAMK,QAAQ,QAKb,SAASiQ,KACtB,IAAMnP,EAAUrB,KAChB,OACEsB,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQlB,MACtBmB,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQZ,QACtBa,EAAAC,EAAAC,cAACiP,GAAA,EAAD,CACExJ,IAAI,aACJD,IAAI,sHACJjF,UAAWV,EAAQiP,SAGvBhP,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACEvH,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACE/H,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEE,UAAWV,EAAQb,MACnB8B,MAAM,gBACNoO,cAAY,GAHd,mBAQApP,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYE,UAAWV,EAAQsP,IAAKrO,MAAM,iBAA1C,aAGAhB,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAYC,QAAQ,QAAQ2K,UAAU,KAAtC,2BAEEnL,EAAAC,EAAAC,cAAA,WACC,yBAGLF,EAAAC,EAAAC,cAACoP,GAAA,EAAD,KACEtP,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAQ6O,KAAK,SAAb,iBCnDK,SAASC,KACpB,OACIxP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACgP,GAAD,OCUZ,IAAMxQ,GAAYC,YAAW,SAAAC,GAC3B,MAAO,CACLC,KAAM,CACJC,SAAU,GAEZ2Q,UAAW,CACTC,UAAW,WCVGrO,QACW,cAA7BsO,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStB,MACvB,2FCPAuB,GAAe,CACnBC,aAAc,KACd5K,OAAQ,GACRmF,cAAe,GACfU,WAAW,EACXhC,WAAW,GCZEgH,gBAAgB,CAC3BvD,YDcuB,WAAkC,IAAjCnF,EAAiC3F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBmO,GAAcnI,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQ8F,EAAOjG,MACb,IlBrBoB,YkBsBlB,OAAOlC,OAAAyQ,GAAA,EAAAzQ,CAAA,GAAK8H,EAAZ,CAAmByI,aAAcpI,EAAOtE,UAC1C,IlBrBoB,WkBsBlB,IAAI6M,EAAa,GAAAnO,OAAAvC,OAAA8N,GAAA,EAAA9N,CAAO8H,EAAMnC,QAAb,CAAqBwC,EAAOtE,UAC7C,OAAO7D,OAAAyQ,GAAA,EAAAzQ,CAAA,GAAK8H,EAAZ,CAAmBnC,OAAQ+K,EAAelH,WAAU,IACtD,IlBR6B,oBkBS3B,OAAOxJ,OAAAyQ,GAAA,EAAAzQ,CAAA,GAAK8H,EAAZ,CAAmB0D,WAAW,IAChC,IlBR4B,mBkBS1B,OAAOxL,OAAAyQ,GAAA,EAAAzQ,CAAA,GAAK8H,EAAZ,CAAmB0D,WAAW,IAChC,IlBX+B,sBkBY7B,OAAOxL,OAAAyQ,GAAA,EAAAzQ,CAAA,GAAK8H,EAAZ,CAAmB0D,WAAW,EAAOV,cAAe3C,EAAOtE,UAC7D,IlBjB4B,oBkBkB1B,OAAO7D,OAAAyQ,GAAA,EAAAzQ,CAAA,GAAK8H,EAAZ,CAAmB0B,WAAW,EAAMsB,cAAc,KACpD,IlBlB4B,oBkBmB1B,OAAO9K,OAAAyQ,GAAA,EAAAzQ,CAAA,GAAK8H,EAAZ,CAAmB0B,WAAW,EAAOsB,cAAc,KACrD,IlBhCsB,ckBkCpB,OADA4F,EAAe5I,EAAMnC,OAAOzB,OAAO,SAACjC,EAAM0O,GAAP,OAAYA,IAAMxI,EAAOtE,UACzDiE,EAAMyI,eAAiBzI,EAAMnC,OAAOwC,EAAOtE,SACrC7D,OAAAyQ,GAAA,EAAAzQ,CAAA,GAAK8H,EAAZ,CAAmBnC,OAAQ+K,EAAeH,aAAazI,EAAMnC,OAAO,KACrC,IAAxBmC,EAAMnC,OAAOvD,OACbpC,OAAAyQ,GAAA,EAAAzQ,CAAA,GAAK8H,EAAZ,CAAmBnC,OAAQ+K,EAAeH,aAAa,OAElDvQ,OAAAyQ,GAAA,EAAAzQ,CAAA,GAAK8H,EAAZ,CAAmBnC,OAAQ+K,IAC7B,QACE,OAAO5I,ICxCIuH,wBCCuB,WAAyB,IAAxBvH,EAAwB3F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMgG,EAAWhG,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQ8F,EAAOjG,MACX,IpBFyB,oBoBEzB,IAAA0O,EACkCzI,EAAOtE,QACrC,MAAO,CAFX+M,EACW3O,KADX2O,EACiB5M,gBAEjB,QACI,OAAO8D,MCRb+I,GAAkBV,OAAOW,sCAAwCC,KAC1DC,GAAOC,aAAaC,GAAUL,GAAiBM,aAAgBC,QCI5EC,IAASxJ,OACLrH,EAAAC,EAAAC,cAAC4Q,EAAA,EAAD,CAAUN,MAAOA,IACbxQ,EAAAC,EAAAC,cNgBO,SAAAmG,GACb,IAAMtG,EAAUrB,KAEZqS,EACF/Q,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KAEEH,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAOnK,KAAK,YACV7G,EAAAC,EAAAC,cAAC+Q,GAAD,OAEFjR,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAOnK,KAAK,2BACV7G,EAAAC,EAAAC,cAACgR,GAAD,OAEFlR,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAOnK,KAAK,SACV7G,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAUG,KAAK,QAAQC,GAAG,cAE5BpR,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAOnK,KAAK,KACV7G,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAUG,KAAK,IAAIC,GAAG,eAsB5B,OAjBI/K,EAAMgL,SACRN,EACE/Q,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACEH,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAOnK,KAAK,YACV7G,EAAAC,EAAAC,cAAC+Q,GAAD,OAEFjR,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAOnK,KAAK,2BACV7G,EAAAC,EAAAC,cAACgR,GAAD,OAEFlR,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAOnK,KAAK,QAAQyK,OAAK,GACvBtR,EAAAC,EAAAC,cAACsP,GAAD,OAEJxP,EAAAC,EAAAC,cAAC8Q,EAAA,EAAD,CAAUG,KAAK,IAAIC,GAAG,eAMxBpR,EAAAC,EAAAC,cAACqR,EAAA,EAAD,KACEvR,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQlB,MACtBmB,EAAAC,EAAAC,cAACf,EAAD,MACAa,EAAAC,EAAAC,cAACsR,EAAA,EAAD,CAAW/Q,UAAWV,EAAQ0P,UAAWgC,SAAS,MAChDzR,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAM8F,WAAS,EAACxQ,QAAS,GACtB8R,OM5DL,OACSW,SAASC,eAAe,SLqHnC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7P,KAAK,SAAA8P,GACjCA,EAAaC","file":"static/js/main.ba78aef4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  Menu,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nexport default function Header() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const comingSoon=()=>{\r\n    alert(\"Coming Soon\")\r\n    handleClose();\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            WeatherApp\r\n          </Typography>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n            variant=\"contained\" color=\"primary\"\r\n          >\r\n            Menu\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={comingSoon}>Profile</MenuItem>\r\n            <MenuItem onClick={comingSoon}>My account</MenuItem>\r\n            <MenuItem onClick={comingSoon}>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n","import moment from 'moment';\r\n\r\n // fetch from API\r\nexport const getData = (city, type=\"weather\") => {\r\nconst apiKey = \"ea0b23131c72bacfe9c361211bb6ea7f\";\r\nconst api_weather = `https://api.openweathermap.org/data/2.5/${type}?q=${city}&units=metric&APPID=${apiKey}`;\r\n   return fetch(api_weather)\r\n    .then( res => {\r\n       return res.json();\r\n    })\r\n    .then( res => {\r\n        return res;\r\n    })\r\n    .catch( err => {\r\n        throw err;\r\n    }) ;\r\n};\r\n\r\n// transform API response into an \"data\" object for simple forecast\r\n  export const  transformWeather = (res) => {\r\n        const {speed} = res.wind;\r\n        const {humidity, temp} = res.main;\r\n        const {weather} = res;\r\n        const weatherState = getWeatherState(weather);\r\n        return  {\r\n          humidity,\r\n          weatherState,\r\n          temperature:temp,\r\n          wind: `${speed}m/s`\r\n        }\r\n      };\r\n      \r\n // get Wheather from response object\r\n const  getWeatherState = ([weather]) =>{\r\n     const {main, description, icon} = weather;\r\n     const weatherState={\r\n            main,\r\n            description,\r\n            icon\r\n     }\r\n    return (weatherState);\r\n  };\r\n\r\n  // transform API response into an \"data\" object for Extended Forecast\r\n  export const transformForecastExtend = ({list}) => {\r\n    \r\n        return (list.filter( item => \r\n        moment.unix(item.dt).utc().hour() === 6 ||\r\n        moment.unix(item.dt).utc().hour() === 12 ||\r\n        moment.unix(item.dt).utc().hour() === 18  ))\r\n        .map( item => {\r\n            return  {\r\n                weekDay:moment.unix(item.dt).format('ddd'),\r\n                hour:moment.unix(item.dt).hour(),\r\n                data:{\r\n                  temperature:item.main.temp,\r\n                  wind:item.wind.speed,\r\n                  humidity:item.main.humidity,\r\n                  weatherState: getWeatherState(item.weather)\r\n                  }\r\n                }\r\n          });\r\n      \r\n      };\r\n\r\n  \r\n","import { getData, transformForecastExtend } from \"../services/TransformWeather\";\r\nimport { findCity } from \"../services/findCity\";\r\nimport {\r\n  SET_CITY,\r\n  SET_FORECAST_DATA,\r\n  ADD_CITY,\r\n  SET_USER_LOCATION,\r\n  SEARCH_CITY_START,\r\n  SEARCH_CITY_SUCCESS,\r\n  SEARCH_CITY_FAIL,\r\n  HIDE_SEARCH_MODAL,\r\n  SHOW_SEARCH_MODAL,\r\n  DELETE_CITY\r\n} from \"./ActionTypes\";\r\nconst setCity = payload => ({ type: SET_CITY, payload });\r\nconst setForecastData = payload => ({ type: SET_FORECAST_DATA, payload });\r\n\r\nexport const getForecastData = payload => {\r\n  return dispatch => {\r\n    getData(payload, \"forecast\")\r\n      .then(forecastData => {\r\n        //modificar el estado con el resultado del fecht\r\n        const forecastExtend = transformForecastExtend(forecastData);\r\n        dispatch(setForecastData({ city: payload, forecastExtend }));\r\n      })\r\n      .catch(err => console.log(`${err}`));\r\n  };\r\n};\r\n\r\nexport const addCity = city => {\r\n  return {\r\n    type: ADD_CITY,\r\n    payload: city\r\n  };\r\n};\r\nexport const setUserLocation = () => {\r\n  let locationUrl = \"https://ipapi.co/json/\";\r\n  return dispatch => {\r\n    fetch(locationUrl)\r\n      .then(res => res.json())\r\n      .then(\r\n        ({ city, country_name}) => {\r\n          // set city in correct format for wheather api ej ( \" rosario , ar \")\r\n          let formatedCityInfo = [city, country_name].join(\", \");\r\n          dispatch(addCity(formatedCityInfo));\r\n          dispatch(getForecastData(formatedCityInfo));\r\n        }\r\n      );\r\n  };\r\n};\r\n\r\nconst searchCityStart = () => {\r\n  return {\r\n    type: SEARCH_CITY_START\r\n  };\r\n};\r\n\r\nconst searchCityfail = error => {\r\n  return {\r\n    type: SEARCH_CITY_FAIL,\r\n    payload: error\r\n  };\r\n};\r\nconst searchCitySuccess = cities => {\r\n  return {\r\n    type: SEARCH_CITY_SUCCESS,\r\n    payload: cities\r\n  };\r\n};\r\n\r\nexport const searchCity = city => {\r\n  return dispatch => {\r\n    dispatch(searchCityStart());\r\n    findCity(city)\r\n      .then(({_embedded}) => {\r\n        const cities = _embedded['city:search-results'];\r\n        let formatedCitiesList = cities.map( city => {\r\n          // city name is the firts element on the array\r\n          let cityNameArray = city.matching_full_name.split(\",\")\r\n          let cityName= cityNameArray[0]\r\n          // remove parentesis from the last statement\r\n          let country = cityNameArray[cityNameArray.length - 1].split(\"(\")[0]\r\n          let formatedName = cityName+\",\"+country;\r\n          return formatedName\r\n        }\r\n        );\r\n        dispatch(searchCitySuccess(formatedCitiesList));\r\n      })\r\n      .catch(err => dispatch(searchCityfail(err)));\r\n  };\r\n};\r\n\r\nexport const showModal = () => {\r\n  return {\r\n    type: SHOW_SEARCH_MODAL\r\n  };\r\n};\r\n\r\nexport const hideModal = () => {\r\n  return {\r\n    type: HIDE_SEARCH_MODAL\r\n  };\r\n};\r\n\r\nexport const deleteCity = (city) => {\r\n  return{\r\n    type:DELETE_CITY,\r\n    payload:city\r\n  }\r\n}\r\n","export const SET_CITY = \"SET_CITY!\";\r\nexport const GET_CITIES = \"GET_CITIES\";\r\nexport const ADD_CITY = \"ADD_CITY\";\r\nexport const SET_USER_LOCATION = \"SET_USER_LOCATION\";\r\nexport const DELETE_CITY =\"DELETE_CITY\"\r\n\r\nexport const SET_FORECAST_DATA = \"SET_FORECAST_DATA\";\r\nexport const GET_FORECAST_DATA = \"SET_FORECAST_DATA\";\r\nexport const GET_FORECAST_DATA_START=\"SET_FORECAST_DATA_START\";\r\nexport const GET_FORECAST_DATA_FAIL=\"SET_FORECAST_DATA_FAIL\";\r\nexport const GET_FORECAST_DATA_SUCCESS=\"SET_FORECAST_DATA_SUCCES\";\r\n\r\n\r\n\r\n// for city search\r\nexport const SHOW_SEARCH_MODAL =\"SHOW_SEARCH_MODAL\";\r\nexport const HIDE_SEARCH_MODAL =\"HIDE_SEARCH_MODAL\"\r\n\r\nexport const SEARCH_CITY_START = \"SEARCH_CITY_START\";\r\nexport const SEARCH_CITY_SUCCESS = \"SEARCH_CITY_SUCCESS\";\r\nexport const SEARCH_CITY_FAIL = \"SEARCH_CITY_FAIL\";\r\n","export const findCity = (criterio) => {\r\n  \r\n  let googglePlaceApi=`https://api.teleport.org/api/cities/?search=${criterio}`;\r\n  return fetch(googglePlaceApi)\r\n    .then(res => res.json())\r\n    .then(res => res)\r\n    .catch(err => console.log(err));\r\n};\r\n","import React from 'react';\r\n//  fa-rainbow  fa-cloud-moon fa-cloud-moon-rain cloud-sun-rain fa-cloud-sun\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst getWeatherIcon= ({icon}) => {\r\n    return (`http://openweathermap.org/img/w/${icon}.png`);\r\n};\r\n\r\nconst useStyles = makeStyles( theme => {\r\n  return ({\r\n    temperature:{\r\n      flexGrow:\"2\",\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\"\r\n    }}\r\n  )\r\n})\r\nexport default ({temperature, weatherState}) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.temperature}>\r\n      <img  src={getWeatherIcon(weatherState)}alt=\"\" className=\"icon-img\" />\r\n      <h3>{`  ${temperature}`}<span className=\"tempDegrees\">Cº</span></h3>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\n\r\nconst useStyles = makeStyles( theme => {\r\n    return ({\r\n    extraInfo:{\r\n      flexGrow:\"1\",\r\n      color:\"blue\",\r\n      display:\"flex\",\r\n      flexDirection:\"column\",\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\"\r\n    }\r\n    }\r\n    )\r\n  })\r\nexport default ({humidity: h, wind: w}) => {\r\n   const classes = useStyles()\r\n  \r\n  return (\r\n    <div className={classes.extraInfo}>\r\n      <span>{`Humidity: ${h}%`}</span>\r\n      <span>{`Wind: ${w}`}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n// components\r\nimport WeatherTemperature from './Temperature';\r\nimport WeatherExtraInfo from './ExtraInfo';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( theme =>{\r\n  return {\r\n    \r\n      root:{\r\n        display:'flex',\r\n        backgroundColor: \"rgba(240, 240, 240, .5)\",\r\n        boxSizing:\"border-box\"\r\n      }\r\n    \r\n  }\r\n})\r\n\r\n\r\n\r\n\r\nexport  default ({data}) => {\r\n\r\n  const classes = useStyles()\r\n  \r\n  const {temperature, weatherState, humidity, wind } = data; \r\n \r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <WeatherTemperature temperature={temperature} weatherState={weatherState}/>\r\n      <WeatherExtraInfo  humidity={humidity} wind={wind} />\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Data from \"../WeatherData\";\r\n//Router\r\nimport {withRouter ,RouteComponentProps} from 'react-router-dom'\r\n// Services\r\nimport {\r\n  transformWeather,\r\n  getData\r\n} from \"../../../services/TransformWeather.js\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\r\n\r\ninterface props extends RouteComponentProps{\r\n  city:string,\r\n  onDelete: ()=>void\r\n}\r\n\r\ntype state= {\r\n  data:any\r\n}\r\n\r\nclass Weather extends Component<props, state> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    data: null\r\n  };\r\n  }\r\n  \r\n\r\n  headleClick =  () => {\r\n\r\n    let path = `/weather/${this.props.city}/forecast`;\r\n    console.log(this.props.history.replace(path))\r\n  };\r\n\r\n  onDelete = e => {\r\n    e.stopPropagation()\r\n    this.props.onDelete()\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    getData(this.props.city).then(res => {\r\n      const weather = transformWeather(res);\r\n      this.setState({ data: weather });\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    const { city } = this.props;\r\n    const { data } = this.state;\r\n    return (\r\n        <Card style={{ marginBottom: \"1.5rem\" }} onClick={this.headleClick}>\r\n          <CardHeader\r\n            title={city}\r\n            action={\r\n              <IconButton aria-label=\"settings\" onClick={this.onDelete}>\r\n                <CancelIcon color=\"secondary\" />\r\n              </IconButton>\r\n            }\r\n          />\r\n          <CardContent>\r\n            {data ? <Data data={data} /> : <p>cargando</p>}\r\n          </CardContent>\r\n        </Card>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(Weather )\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\ntype props = {\r\n  show: boolean,\r\n  city: string | null,\r\n  onSubmit: () => void;\r\n  onCancel: () => void;\r\n};\r\nexport default function weatherAlert({ show, city, onSubmit, onCancel }: props) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={show}\r\n        onClose={onCancel}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Are you sure to delete this location ?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {city}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onCancel} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport { Fab } from \"@material-ui/core\";\r\n\r\n\r\nexport default function WeatherListController(props) {\r\n\r\n  const clickHandler = () => {\r\n      props.showModal()\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      <Fab color=\"primary\" variant=\"extended\" aria-label=\"add\" onClick={clickHandler}>\r\n        <LocationOnIcon/> NEW\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport WeatherItem from \"../weatherItem/weatherItem.tsx\";\r\nimport WeatherAlert from \"../weatherAlert/weatherAlert.tsx\";\r\nimport WeatherListController from \"../weatherListController/weatherListController\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = theme => {\r\n  return {\r\n    paper: {\r\n      padding: \"1rem\",\r\n      textAlign: \"center\"\r\n    }\r\n  };\r\n};\r\nclass WeatherList extends Component {\r\n  state = {\r\n    showModal: false,\r\n    deleteItem: null\r\n  };\r\n  modalSubmit = () => {\r\n    this.setState({ showModal: false });\r\n    this.props.deleteCity(this.state.deleteItem);\r\n  };\r\n\r\n  modalCancel = () => {\r\n    console.log(\"cancelado\");\r\n    this.setState({ showModal: false, deleteItem: false });\r\n  };\r\n\r\n  setDeleteItem = index => {\r\n    this.setState({ deleteItem: index, showModal: true });\r\n  };\r\n\r\n  render() {\r\n    const { cities, classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.paper}>\r\n            {cities.map((city, index) => (\r\n              <WeatherItem\r\n                key={city + index}\r\n                city={city}\r\n                onDelete={() => this.setDeleteItem(index)}\r\n              />\r\n            ))}\r\n            <WeatherListController showModal={this.props.showModal} />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <WeatherAlert\r\n          show={this.state.showModal}\r\n          onSubmit={this.modalSubmit}\r\n          onCancel={this.modalCancel}\r\n          city={this.state.deleteItem}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(WeatherList);\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\n\r\n\r\n//lista\r\n\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { CircularProgress, Fab } from \"@material-ui/core/\";\r\n\r\n// redux\r\n\r\nimport * as actions from \"./../../actions/index\";\r\n\r\nexport default function SearchModal(props) {\r\n  const handleClose = () => {\r\n    console.log(\"close\");\r\n  };\r\n  const inputChangedHanler = event => {\r\n    let value = event.target.value;\r\n    if (value.trim().length < 3) {\r\n      return null;\r\n    }\r\n    setTimeout(() => {\r\n      props.searchCity(value);\r\n    }, 200);\r\n  };\r\n\r\n  const clickHandler = (index) => {\r\n    props.addCity(props.searchResults[index])\r\n  }\r\n  return (\r\n    <>\r\n    {console.log(props.searchResults)}\r\n      <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">New location</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"city\"\r\n            label=\"find\"\r\n            type=\"text\"\r\n            onChange={inputChangedHanler}\r\n            fullWidth\r\n          />\r\n          {props.isLoading && <CircularProgress />}\r\n          {props.searchResults && (\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n              {props.searchResults.map((result, index) => {\r\n                return (\r\n                  <ListItem button onClick={() =>clickHandler(index)} key={result+index}>\r\n                    <ListItemIcon>\r\n                    <LocationOnIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={result} />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n\r\n          <Fab color=\"primary\" onClick={handleClose} aria-label=\"add\">\r\n            <AddIcon />\r\n          </Fab>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//router\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setSelectedCity,\r\n  setUserLocation,\r\n  searchCity,\r\n  showModal,\r\n  hideModal,\r\n  addCity,\r\n  deleteCity\r\n} from \"../actions\";\r\n// components\r\nimport WeatherList from \"../Components/Weather/WeatherList/WeatherList\";\r\nimport SearchModal from \"../Components/modal/modal\";\r\n\r\nclass ForecastListContainer extends Component {\r\n  static propTypes = {\r\n    dispatchsetCity: PropTypes.func.isRequired\r\n  };\r\n\r\n  handleSelectionLocation = city => {\r\n    this.props.dispatchsetCity(city);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.setUserLocation();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <WeatherList\r\n          cities={this.props.cities}\r\n          showModal={this.props.onShowModal}\r\n          deleteCity={this.props.onDeleteCity}\r\n        />\r\n        <SearchModal\r\n          open={this.props.showModal}\r\n          searchCity={this.props.searchCity}\r\n          isLoading={this.props.isLoading}\r\n          searchResults={this.props.searchResults}\r\n          addCity={this.props.addCity}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nForecastListContainer.propsType = {\r\n  setCity: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUserLocation: () => dispatch(setUserLocation()),\r\n  searchCity: criterio => dispatch(searchCity(criterio)),\r\n  onShowModal: () => dispatch(showModal()),\r\n  onHideModal: () => dispatch(hideModal()),\r\n  addCity: city => dispatch(addCity(city)),\r\n  onDeleteCity: city => dispatch(deleteCity(city))\r\n});\r\n\r\nconst mapStateToProps = ({ cityReducer }) => ({\r\n  cities: cityReducer.cities,\r\n  isLoading: cityReducer.isLoading,\r\n  searchResults: cityReducer.searchResults,\r\n  showModal: cityReducer.showModal\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ForecastListContainer);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// components\r\nimport WeatherData from '../WeatherData';\r\nimport {Card, CardHeader, CardContent} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStiles= makeStyles( theme => {\r\n  return ({root:{\r\n    margin:\"1rem\"\r\n  }})\r\n})\r\n\r\nexport default ({weekDay, hour, data })=> {\r\n  const classes = useStiles();\r\n\r\n    return (\r\n      <React.Fragment>\r\n          <Card className={classes.root}>\r\n            <CardHeader title={`${hour}:00`} />\r\n            <CardContent>\r\n              <WeatherData data={data}></WeatherData>\r\n            </CardContent>\r\n            \r\n          </Card>\r\n      </React.Fragment> \r\n    )\r\n  \r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ForescastItem from \"../ForecastItem/ForecastItem\";\r\nimport {\r\n  CircularProgress,\r\n  Grid,\r\n  Paper,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    paper: {\r\n      padding: \"1rem\",\r\n      textAlign: \"center\"\r\n    },\r\n    expansionPanelDetail:{\r\n      flexDirection:'column'\r\n    }\r\n  };\r\n});\r\n\r\nconst ForecastExtended = ({ city, forecastExtendedData }) => {\r\n  const classes = useStyles();\r\n  let forecast = <CircularProgress />;\r\n\r\n  if (forecastExtendedData && forecastExtendedData[0] === city) {\r\n\r\n    // it's an object\r\n    let forecastGroups = forecastExtendedData[1].reduce((weekDay, a) => {\r\n      weekDay[a.weekDay] = [...(weekDay[a.weekDay] || []), a];\r\n      return weekDay;\r\n    }, {});\r\n\r\n    // converting into an array of groups objects\r\n    let groupArray=[]\r\n    for(let group in forecastGroups){\r\n      groupArray.push({[group]:forecastGroups[group]})\r\n    } \r\n\r\n    forecast= groupArray.map((dayGroup, groupIndex) => {\r\n      let dayGroupName;\r\n      for(let name in dayGroup){\r\n        dayGroupName=name\r\n      }\r\n      return (\r\n        <ExpansionPanel key={dayGroupName + groupIndex}>\r\n            <ExpansionPanelSummary\r\n              key={dayGroupName+groupIndex}\r\n              expandIcon={<ExpandMoreIcon />}\r\n              aria-controls={dayGroupName}\r\n              id={dayGroupName}\r\n            >\r\n                <Typography>{dayGroupName}</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails className={classes.expansionPanelDetail}>\r\n              {dayGroup[dayGroupName].map( (day, index)=>{\r\n                return(\r\n                  <ForescastItem\r\n                  weekDay={day.weekDay}\r\n                  hour={day.hour}\r\n                  data={day.data}\r\n                  key={day+index}\r\n                ></ForescastItem>\r\n                )\r\n              })}\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n        )\r\n    });\r\n   }\r\n\r\n  return (\r\n    <Grid item sm={12} md={6}>\r\n      <Paper className={classes.paper}>\r\n        <h1>{city}</h1>\r\n        {forecast && \r\n          forecast\r\n          }\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ForecastExtended;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\nimport ForecastExtended from \"../Components/Weather/ForecastExtended/ForecastExtended\";\r\nimport * as actions from \"../actions/index\";\r\n\r\nclass ForecastExtendedContainer extends Component {\r\n  static propTypes = {\r\n    city: PropTypes.string.isRequired\r\n  };\r\n\r\n  componentDidMount(){\r\n    let city = this.props.match.params.city;\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    console.log(\"update\")\r\n    return true\r\n\r\n  }\r\n  componentDidUpdate(){\r\n    if(this.props.forecastExtendedData[0] !== this.props.match.params.city){\r\n      \r\n    let city = this.props.match.params.city;\r\n    this.props.getForecast(city)\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    let city = this.props.match.params.city;\r\n    return ( \r\n          <ForecastExtended city={city} forecastExtendedData={this.props.forecastExtendedData}/>\r\n    );\r\n  }\r\n}\r\nconst mapsStateToProps = ({extendedForecastReducer }) => {\r\n  return { \r\n    forecastExtendedData: extendedForecastReducer\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    getForecast :(city) => dispatch(actions.getForecastData(city))\r\n  }\r\n}\r\nexport default connect(mapsStateToProps, mapDispatchToProps)(withRouter(ForecastExtendedContainer));\r\n","import React from \"react\";\r\nimport { Paper, Avatar, Card, CardActions,CardContent, Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    root: {\r\n        \r\n    },\r\n    Header: {\r\n      height: \"100px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\"\r\n    },\r\n    large: {\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n    }\r\n  };\r\n});\r\n\r\nexport default function userProfile() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.Header}>\r\n        <Avatar\r\n          alt=\"Remy Sharp\"\r\n          src=\"https://cdn5.vectorstock.com/i/1000x1000/66/14/default-avatar-photo-placeholder-profile-picture-vector-21806614.jpg\"\r\n          className={classes.large}\r\n        />\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            Word of the Day\r\n          </Typography>\r\n          \r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            adjective\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            well meaning and kindly.\r\n            <br />\r\n            {'\"a benevolent smile\"'}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\">Learn More</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport UserProfile from '../Components/user/userProfile'\r\n\r\nexport default function userContainer() {\r\n    return (\r\n        <div>\r\n            <UserProfile />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\n// Router\r\nimport { Route, Redirect, BrowserRouter as Router } from \"react-router-dom\";\r\n// material\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n// Components\r\nimport Header from \"./Components/Header/Header\";\r\nimport LocationListContainer from \"./Containers/LocationListContainer\";\r\nimport ForecastExtendedContainer from \"./Containers/ForecastExtendedContainer\";\r\nimport \"./App.css\";\r\nimport UserContainer from \"./Containers/userContainer\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    container: {\r\n      marginTop: \"80px\"\r\n    }\r\n  };\r\n});\r\n\r\nexport default props => {\r\n  const classes = useStyles();\r\n\r\n  let routes = (\r\n    <React.Fragment>\r\n      \r\n      <Route path=\"/weather\">\r\n        <LocationListContainer />\r\n      </Route>\r\n      <Route path='/weather/:city/forecast'>\r\n        <ForecastExtendedContainer />\r\n      </Route>\r\n      <Route path='/user'>\r\n        <Redirect from=\"/user\" to=\"/weather\"/>\r\n      </Route>\r\n      <Route path='/'>\r\n        <Redirect from=\"/\" to=\"/weather\"/>\r\n      </Route>\r\n      \r\n    </React.Fragment>\r\n  );\r\n  if (props.isAuth) {\r\n    routes = (\r\n      <React.Fragment>\r\n        <Route path=\"/weather\">\r\n          <LocationListContainer />\r\n        </Route>\r\n        <Route path='/weather/:city/forecast'>\r\n          <ForecastExtendedContainer />\r\n        </Route>\r\n        <Route path=\"/user\" exact>\r\n          <UserContainer />\r\n        </Route>\r\n      <Redirect from=\"/\" to=\"/weather\"/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <Header />\r\n        <Container className={classes.container} maxWidth=\"md\">\r\n          <Grid container spacing={3}>\r\n            {routes}\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  SET_CITY,\r\n  ADD_CITY,\r\n  SEARCH_CITY_START,\r\n  SEARCH_CITY_FAIL,\r\n  SEARCH_CITY_SUCCESS,\r\n  SHOW_SEARCH_MODAL,\r\n  HIDE_SEARCH_MODAL,\r\n  DELETE_CITY\r\n} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  selectedCity: null,\r\n  cities: [],\r\n  searchResults: [],\r\n  isLoading: false,\r\n  showModal: false\r\n};\r\n\r\nexport const cityReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CITY:\r\n      return { ...state, selectedCity: action.payload };\r\n    case ADD_CITY:\r\n      let newCitiesList = [...state.cities, action.payload];\r\n      return { ...state, cities: newCitiesList, showModal:false };\r\n    case SEARCH_CITY_START:\r\n      return { ...state, isLoading: true };\r\n    case SEARCH_CITY_FAIL:\r\n      return { ...state, isLoading: false };\r\n    case SEARCH_CITY_SUCCESS:\r\n      return { ...state, isLoading: false, searchResults: action.payload };\r\n    case SHOW_SEARCH_MODAL:\r\n      return { ...state, showModal: true, searchResults:[] };\r\n    case HIDE_SEARCH_MODAL:\r\n      return { ...state, showModal: false, searchResults:[] };\r\n    case DELETE_CITY:\r\n      newCitiesList =state.cities.filter((city, i)=> i !== action.payload)\r\n      if(state.selectedCity === state.cities[action.payload]){\r\n        return { ...state, cities: newCitiesList, selectedCity:state.cities[0] }\r\n      }else if(state.cities.length === 0){\r\n        return { ...state, cities: newCitiesList, selectedCity:null }\r\n      }\r\n      return { ...state, cities: newCitiesList }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {extendedForecastReducer} from './forecastExtendedReducer.js'\r\nimport {cityReducer} from './cityReducer.js';\r\n\r\nexport default combineReducers({\r\n    cityReducer, extendedForecastReducer\r\n})\r\n","import {SET_FORECAST_DATA} from  '../actions/ActionTypes';\r\n\r\nconst initialState={\r\n\r\n}\r\n\r\nexport  const extendedForecastReducer = (state =null, action) => {\r\n    switch (action.type) {\r\n        case SET_FORECAST_DATA:\r\n            const {city, forecastExtend} =action.payload;\r\n            return [city, forecastExtend ]\r\n        default:\r\n            return state ;\r\n    }\r\n}","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './../reducers/';\r\n\r\nconst composeEnhancers= window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store= createStore( reducers, composeEnhancers(applyMiddleware(thunk)) );\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from './store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}