{"version":3,"sources":["Components/Weather/WeatherData/Temperature.js","Components/Weather/WeatherData/ExtraInfo.js","Components/Weather/WeatherData/index.js","Components/Weather/ForecastItem/ForecastItem.js","Components/Weather/ForecastExtended/ForecastExtended.js","services/TransformWeather.js","actions/index.js","actions/ActionTypes.js","services/findCity.js","Containers/ForecastExtendedContainer.js","Components/forecast/forecastPlaceholder.js","Containers/routes/forecastRoutes.js","Components/Weather/weatherItem/weatherItem.tsx","Components/Weather/weatherAlert/weatherAlert.tsx","Components/Weather/weatherListController/weatherListController.js","Components/Weather/WeatherList/WeatherList.js","Components/modal/modal.js","Containers/LocationListContainer.js","Components/user/userProfile.js","Containers/userContainer.js","Containers/routes/userRoutes.js","Containers/routes/routes.js","Components/Header/Header.js","App.js","serviceWorker.js","reducers/cityReducer.js","reducers/index.js","reducers/forecastExtendedReducer.js","store/index.js","index.tsx"],"names":["getWeatherIcon","_ref","icon","concat","useStyles","makeStyles","theme","temperature","flexGrow","display","justifyContent","alignItems","Temperature","_ref2","weatherState","classes","react_default","a","createElement","className","src","alt","extraInfo","color","flexDirection","ExtraInfo","h","humidity","w","wind","root","backgroundColor","boxSizing","WeatherData","data","useStiles","margin","ForecastItem","weekDay","hour","Fragment","Card","CardHeader","title","CardContent","paper","padding","textAlign","expansionPanelDetail","actions","ForecastExtended","city","forecastExtendedData","history","useHistory","forecast","CircularProgress","forecastGroups","reduce","Object","toConsumableArray","groupArray","group","push","defineProperty","map","dayGroup","groupIndex","dayGroupName","name","ExpansionPanel","key","ExpansionPanelSummary","expandIcon","ExpandMore_default","aria-controls","id","Typography","ExpansionPanelDetails","day","index","Grid","item","sm","md","Paper","IconButton","onClick","ArrowBack_default","getData","type","arguments","length","undefined","api_weather","fetch","then","res","json","catch","err","transformWeather","speed","_res$main","main","temp","weather","getWeatherState","slicedToArray","description","getForecastData","payload","dispatch","console","log","forecastData","forecastExtend","list","filter","moment","unix","dt","utc","format","setForecastData","addCity","searchCity","criterio","googglePlaceApi","findCity","formatedCitiesList","_embedded","cityNameArray","matching_full_name","split","cities","searchCitySuccess","ForecastExtendedContainer","this","props","match","params","availableCities","indexOf","getForecast","replace","Weather_ForecastExtended_ForecastExtended","Component","connect","extendedForecastReducer","cityReducer","withRouter","width","message","forecastPlaceholder","query","URLSearchParams","useLocation","search","get","placeHolder","react_router","to","Button","variant","forecastRoutes","path","exact","Containers_ForecastExtendedContainer","Weather","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","headleClick","onDelete","e","stopPropagation","componentWillMount","setState","render","state","style","marginBottom","action","aria-label","Cancel_default","weatherAlert","show","onSubmit","onCancel","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","WeatherListController","Fab","showModal","LocationOn_default","WeatherList","deleteItem","modalSubmit","deleteCity","modalCancel","setDeleteItem","_this2","_this$props","xs","weatherItem","withStyles","spinner","SearchModal","TextField","defaultValue","findValue","placeholder","label","onChange","event","value","target","trim","setTimeout","fullWidth","isLoading","searchResults","List","component","result","ListItem","button","hide","clickHandler","ListItemIcon","ListItemText","primary","window","pushState","ForecastListContainer","handleSelectionLocation","dispatchsetCity","setUserLocation","location","onShowModal","Weather_WeatherList_WeatherList","onDeleteCity","onHideModal","propsType","setCity","PropTypes","func","isRequired","formatedCityInfo","country_name","join","Header","height","large","spacing","userProfile","Avatar","gutterBottom","pos","CardActions","size","userContainer","UserRoutes","WeatherRoutes","LocationListContainer","NotFound","Routes","routes","routes_WeatherRoutes","routes_forecastRoutes","routes_NotFound","isAuth","from","menuButton","marginRight","_React$useState","React","useState","_React$useState2","anchorEl","setAnchorEl","handleClose","comingSoon","alert","AppBar","position","Toolbar","aria-haspopup","currentTarget","Menu","keepMounted","Boolean","MenuItem","container","marginTop","hostname","initialState","selectedCity","combineReducers","objectSpread","newCitiesList","i","_action$payload","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","react_router_dom","Container","maxWidth","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2VAIMA,EAAgB,SAAAC,GAAY,IAAVC,EAAUD,EAAVC,KACpB,yCAAAC,OAA2CD,EAA3C,SAGEE,EAAYC,YAAY,SAAAC,GAC5B,MAAQ,CACNC,YAAY,CACVC,SAAS,IACTC,QAAQ,OACRC,eAAe,SACfC,WAAW,aAIFC,EAAA,SAAAC,GAAiC,IAA/BN,EAA+BM,EAA/BN,YAAaO,EAAkBD,EAAlBC,aACtBC,EAAUX,IAChB,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQR,aACtBS,EAAAC,EAAAC,cAAA,OAAME,IAAKpB,EAAec,GAAcO,IAAI,GAAGF,UAAU,aACzDH,EAAAC,EAAAC,cAAA,eAAAf,OAAUI,GAAcS,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,YCnBxBf,EAAYC,YAAY,SAAAC,GAC1B,MAAQ,CACRgB,UAAU,CACRd,SAAS,IACTe,MAAM,OACNd,QAAQ,OACRe,cAAc,SACdd,eAAe,SACfC,WAAW,aAKFc,EAAA,SAAAxB,GAA4B,IAAhByB,EAAgBzB,EAA1B0B,SAAmBC,EAAO3B,EAAb4B,KACrBd,EAAUX,IAEjB,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQO,WACtBN,EAAAC,EAAAC,cAAA,yBAAAf,OAAoBuB,EAApB,MACAV,EAAAC,EAAAC,cAAA,qBAAAf,OAAgByB,MChBhBxB,EAAYC,YAAY,SAAAC,GAC5B,MAAO,CAEHwB,KAAK,CACHrB,QAAQ,OACRsB,gBAAiB,0BACjBC,UAAU,iBASFC,EAAA,SAAAhC,GAAY,IAAViC,EAAUjC,EAAViC,KAEVnB,EAAUX,IAETG,EAA8C2B,EAA9C3B,YAAaO,EAAiCoB,EAAjCpB,aAAca,EAAmBO,EAAnBP,SAAUE,EAASK,EAATL,KAG5C,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQe,MACtBd,EAAAC,EAAAC,cAACN,EAAD,CAAoBL,YAAaA,EAAaO,aAAcA,IAC5DE,EAAAC,EAAAC,cAACO,EAAD,CAAmBE,SAAUA,EAAUE,KAAMA,iCCzB7CM,EAAW9B,YAAY,SAAAC,GAC3B,MAAQ,CAACwB,KAAK,CACZM,OAAO,WAIXC,EAAA,SAAepC,GAA2BA,EAAzBqC,QAAyB,IAAhBC,EAAgBtC,EAAhBsC,KAAML,EAAUjC,EAAViC,KACxBnB,EAAUoB,IAEd,OACEnB,EAAAC,EAAAC,cAACF,EAAAC,EAAMuB,SAAP,KACIxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMtB,UAAWJ,EAAQe,MACvBd,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAYC,MAAK,GAAAxC,OAAKoC,EAAL,SACjBvB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAACe,EAAD,CAAaC,KAAMA,gFCJ3B9B,EAAYC,YAAW,SAAAC,GAC3B,MAAO,CACLuC,MAAO,CACLC,QAAS,OACTC,UAAW,UAEbC,qBAAsB,CACpBxB,cAAe,UAEjByB,QAAQ,CACNF,UAAU,WA0EDG,EArEU,SAAAjD,GAAoC,IAAjCkD,EAAiClD,EAAjCkD,KAAMC,EAA2BnD,EAA3BmD,qBAC1BrC,EAAUX,IACZiD,EAAUC,cACVC,EAAWvC,EAAAC,EAAAC,cAACsC,EAAA,EAAD,MAMf,GAAIJ,GAAwBA,EAAqB,KAAOD,EAAM,CAE5D,IAAIM,EAAiBL,EAAqB,GAAGM,OAAO,SAACpB,EAASrB,GAE5D,OADAqB,EAAQrB,EAAEqB,SAAV,GAAAnC,OAAAwD,OAAAC,EAAA,EAAAD,CAA0BrB,EAAQrB,EAAEqB,UAAY,IAAhD,CAAqDrB,IAC9CqB,GACN,IAGCuB,EAAa,GACjB,IAAK,IAAIC,KAASL,EAChBI,EAAWE,KAAXJ,OAAAK,EAAA,EAAAL,CAAA,GAAmBG,EAAQL,EAAeK,KAG5CP,EAAWM,EAAWI,IAAI,SAACC,EAAUC,GACnC,IAAIC,EACJ,IAAK,IAAIC,KAAQH,EACfE,EAAeC,EAEjB,OACErD,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAgBC,IAAKH,EAAeD,GAClCnD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACED,IAAKH,EAAeD,EACpBM,WAAYzD,EAAAC,EAAAC,cAACwD,EAAAzD,EAAD,MACZ0D,gBAAeP,EACfQ,GAAIR,GAEJpD,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,KAAaT,IAEfpD,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAuB3D,UAAWJ,EAAQiC,sBACvCkB,EAASE,GAAcH,IAAI,SAACc,EAAKC,GAChC,OACEhE,EAAAC,EAAAC,cAACmB,EAAD,CACEC,QAASyC,EAAIzC,QACbC,KAAMwC,EAAIxC,KACVL,KAAM6C,EAAI7C,KACVqC,IAAKQ,EAAMC,UAU3B,OACEhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOlE,UAAWJ,EAAQ8B,OACxB7B,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQkC,SACtBjC,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAYC,QArDL,WACblC,EAAQU,KAAK,cAqDL/C,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,QAGJD,EAAAC,EAAAC,cAAA,UAAKiC,GACJI,GAAYA,8BC5FRkC,EAAU,SAACtC,GAAyB,IAAnBuC,EAAmBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,UAE7BG,EAAW,2CAAA3F,OAA8CuF,EAA9C,OAAAvF,OAAwDgD,EAAxD,wBAAAhD,OADF,oCAEZ,OAAO4F,MAAMD,GACXE,KAAM,SAAAC,GACJ,OAAOA,EAAIC,SAEbF,KAAM,SAAAC,GACH,OAAOA,IAEVE,MAAO,SAAAC,GACJ,MAAMA,KAKEC,EAAmB,SAACJ,GAAQ,IAC7BK,EAASL,EAAIpE,KAAbyE,MAD6BC,EAEXN,EAAIO,KAAtB7E,EAF6B4E,EAE7B5E,SAAU8E,EAFmBF,EAEnBE,KACVC,EAAWT,EAAXS,QAEP,MAAQ,CACN/E,WACAb,aAHmB6F,EAAgBD,GAInCnG,YAAYkG,EACZ5E,KAAI,GAAA1B,OAAKmG,EAAL,SAKNK,EAAkB,SAAA1G,GAAc,IAAZyG,EAAY/C,OAAAiD,EAAA,EAAAjD,CAAA1D,EAAA,MAOpC,MALoB,CACZuG,KAF2BE,EAA3BF,KAGAK,YAH2BH,EAArBG,YAIN3G,KAJ2BwG,EAARxG,OCjBlB4G,EAAkB,SAAAC,GAC7B,OAAO,SAAAC,GACLC,QAAQC,IAAIH,GACZtB,EAAQsB,EAAS,YACdf,KAAK,SAAAmB,GAEJ,IAAMC,EAAyCD,EDqBZE,KAEtBC,OAAQ,SAAApC,GAAI,OACa,IAAtCqC,IAAOC,KAAKtC,EAAKuC,IAAIC,MAAMnF,QACW,KAAtCgF,IAAOC,KAAKtC,EAAKuC,IAAIC,MAAMnF,QACW,KAAtCgF,IAAOC,KAAKtC,EAAKuC,IAAIC,MAAMnF,SAC1B0B,IAAK,SAAAiB,GACF,MAAQ,CACJ5C,QAAQiF,IAAOC,KAAKtC,EAAKuC,IAAIE,OAAO,OACpCpF,KAAKgF,IAAOC,KAAKtC,EAAKuC,IAAIlF,OAC1BL,KAAK,CACH3B,YAAY2E,EAAKsB,KAAKC,KACtB5E,KAAKqD,EAAKrD,KAAKyE,MACf3E,SAASuD,EAAKsB,KAAK7E,SACnBb,aAAc6F,EAAgBzB,EAAKwB,aClC7CM,EATgB,SAAAD,GAAO,MAAK,CAAErB,KCTL,oBDS8BqB,WAS9Ca,CAAgB,CAAEzE,KAAM4D,EAASK,sBAE3CjB,MAAM,SAAAC,GAAG,OAAIa,QAAQC,IAAR,GAAA/G,OAAeiG,QAItByB,EAAU,SAAA1E,GACrB,MAAO,CACLuC,KC9BoB,WD+BpBqB,QAAS5D,IAsCA2E,EAAa,SAAA3E,GACxB,OAAO,SAAA6D,GACLA,EApBK,CACLtB,KCpC6B,sBClBT,SAACqC,GAEvB,IAAIC,EAAe,+CAAA7H,OAAgD4H,GACnE,OAAOhC,MAAMiC,GACVhC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAC,GAAG,OAAIA,IACZE,MAAM,SAAAC,GAAG,OAAIa,QAAQC,IAAId,KFoE1B6B,CAAS9E,GACN6C,KAAK,SAAAnF,GAAiB,IAEjBqH,EAFiBrH,EAAfsH,UACmB,uBACOlE,IAAK,SAAAd,GAEnC,IAAIiF,EAAgBjF,EAAKkF,mBAAmBC,MAAM,KAKlD,OAJcF,EAAc,GAGA,IADdA,EAAcA,EAAcxC,OAAS,GAAG0C,MAAM,KAAK,KAKnEtB,EAvBkB,SAAAuB,GACxB,MAAO,CACL7C,KC/C+B,sBDgD/BqB,QAASwB,GAoBIC,CAAkBN,MAE5B/B,MAAM,SAAAC,GAAG,OAAIY,EA9BX,CACLtB,KCxC4B,mBDyC5BqB,QA4BwCX,QGlFtCqC,8LAMF,IAAItF,EAAOuF,KAAKC,MAAMC,MAAMC,OAAO1F,KACpBuF,KAAKC,MAAMG,gBAAgBC,QAAQ5F,IAElC,EACduF,KAAKC,MAAMK,YAAY7F,GAGvBuF,KAAKC,MAAMtF,QAAQ4F,QAAnB,kBAAA9I,OAA6CgD,iDAQ/C,GAAGuF,KAAKC,MAAMvF,qBAAqB,KAAOsF,KAAKC,MAAMC,MAAMC,OAAO1F,KAAK,CACrE8D,QAAQC,IAAI,sBACd,IAAI/D,EAAOuF,KAAKC,MAAMC,MAAMC,OAAO1F,KACnCuF,KAAKC,MAAMK,YAAY7F,qCAMvB,IAAIA,EAAOuF,KAAKC,MAAMC,MAAMC,OAAO1F,KACnC,OACUnC,EAAAC,EAAAC,cAACgI,EAAD,CAAkB/F,KAAMA,EAAMC,qBAAsBsF,KAAKC,MAAMvF,8BAhCrC+F,aAiDzBC,eAbU,SAAAnJ,GACvB,MAAO,CACLmD,qBAFiEnD,EAA1CoJ,wBAGvBP,gBAHiE7I,EAAlBqJ,YAGlBf,SAIN,SAAAvB,GACzB,MAAO,CACLgC,YAAa,SAAC7F,GAAD,OAAU6D,EAAS/D,EAAwBE,OAI7CiG,CAA8CG,YAAWd,cCjDlErI,GAAYC,YAAW,SAAAC,GAC3B,MAAO,CACLwB,KAAM,CACJ0H,MAAO,OACP1G,QAAS,QAEXG,QAAS,CACPF,UAAW,QAEb0G,QAAQ,CACJ1G,UAAW,aASJ,SAAS2G,KACtB,IAAM3I,EAAUX,KACVuJ,EALC,IAAIC,gBAAgBC,cAAcC,QAKhBC,IAAI,QACzB1G,EAAUC,cAEV0G,EAAchJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAUC,GAAG,YAsB/B,OATIP,IACFK,EACEhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQ0I,SACtBzI,EAAAC,EAAAC,cAAA,mCAA2ByI,EAA3B,OACA3I,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAAQC,QAAQ,YAAY7I,MAAM,UAAUgE,QAdnC,WACb0B,QAAQC,IAAI,SACZ7D,EAAQU,KAAR,iBAAA5D,OAA8BwJ,MAY1B,eAMJ3I,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOlE,UAAWJ,EAAQe,MACxBd,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQkC,SACtBjC,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAYC,QAlBL,WACblC,EAAQU,KAAK,cAkBL/C,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,QAGH+I,ICpCMK,OAhBf,SAAApK,GACE,OADkCA,EAAVsI,OAEtBvH,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,KACEjJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAK,YAAYC,OAAK,GAC3BvJ,EAAAC,EAAAC,cAACwI,GAAD,OAEF1I,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAI,mBACTtJ,EAAAC,EAAAC,cAACsJ,GAAD,OAEFxJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAK,KAAZ,qECGAG,eACJ,SAAAA,EAAY9B,GAAO,IAAA+B,EAAA,OAAA/G,OAAAgH,EAAA,EAAAhH,CAAA+E,KAAA+B,IACjBC,EAAA/G,OAAAiH,EAAA,EAAAjH,CAAA+E,KAAA/E,OAAAkH,EAAA,EAAAlH,CAAA8G,GAAAK,KAAApC,KAAMC,KAORoC,YAAe,WAEb,IAAIT,EAAI,aAAAnK,OAAgBuK,EAAK/B,MAAMxF,MACnC8D,QAAQC,IAAIwD,EAAK/B,MAAMtF,QAAQ4F,QAAQqB,KAXtBI,EAcnBM,SAAW,SAAAC,GACTA,EAAEC,kBACFR,EAAK/B,MAAMqC,YAhBMN,EAmBnBS,mBAAqB,WACnB1F,EAAQiF,EAAK/B,MAAMxF,MAAM6C,KAAK,SAAAC,GAC5B,IAAMS,EAAUL,EAAiBJ,GACjCyE,EAAKU,SAAS,CAAElJ,KAAMwE,OAtBPgE,EA0BnBW,OAAS,WAAM,IACLlI,EAASuH,EAAK/B,MAAdxF,KACAjB,EAASwI,EAAKY,MAAdpJ,KACR,OACIlB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAM8I,MAAO,CAAEC,aAAc,UAAYjG,QAASmF,EAAKK,aACrD/J,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,MAAOQ,EACPsI,OAASf,EAAK/B,MAAMqC,UAClBhK,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAYoG,aAAW,WAAWnG,QAASmF,EAAKM,UAC9ChK,EAAAC,EAAAC,cAACyK,GAAA1K,EAAD,CAAYM,MAAM,iBAIxBP,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACGV,EAAOlB,EAAAC,EAAAC,cAACe,EAAD,CAAMC,KAAMA,IAAWlB,EAAAC,EAAAC,cAAA,wBAtCvCwJ,EAAKY,MAAQ,CACbpJ,KAAM,MAHWwI,6BADCvB,aAgDPI,eAAWkB,sDCtDX,SAASmB,GAAT3L,GAAiE,IAAzC4L,EAAyC5L,EAAzC4L,KAAM1I,EAAmClD,EAAnCkD,KAAM2I,EAA6B7L,EAA7B6L,SAAUC,EAAmB9L,EAAnB8L,SAC3D,OACE/K,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CACEC,KAAMJ,EACNK,QAASH,EACTI,kBAAgB,qBAChBC,mBAAiB,4BAEjBpL,EAAAC,EAAAC,cAACmL,GAAA,EAAD,CAAazH,GAAG,sBACb,0CAEH5D,EAAAC,EAAAC,cAACoL,GAAA,EAAD,KACEtL,EAAAC,EAAAC,cAACqL,GAAA,EAAD,CAAmB3H,GAAG,4BACnBzB,IAGLnC,EAAAC,EAAAC,cAACsL,GAAA,EAAD,KACExL,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAAQ5E,QAASwG,EAAUxK,MAAM,WAAjC,YAGAP,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAAQ5E,QAASuG,EAAUvK,MAAM,UAAUkL,WAAS,GAApD,8CC/BK,SAASC,GAAsB/D,GAK5C,OACE3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAACyL,GAAA,EAAD,CAAKpL,MAAM,UAAU6I,QAAQ,WAAWsB,aAAW,MAAMnG,QALxC,WACjBoD,EAAMiE,cAKJ5L,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,MADF,uBCGA6L,8MACJxB,MAAQ,CACNsB,WAAW,EACXG,WAAY,QAEdC,YAAc,WACZtC,EAAKU,SAAS,CAAEwB,WAAW,IAC3BlC,EAAK/B,MAAMsE,WAAWvC,EAAKY,MAAMyB,eAGnCG,YAAc,WACZjG,QAAQC,IAAI,aACZwD,EAAKU,SAAS,CAAEwB,WAAW,EAAOG,YAAY,OAGhDI,cAAgB,SAAAnI,GACd0F,EAAKU,SAAS,CAAE2B,WAAY/H,EAAO4H,WAAW,6EAGvC,IAAAQ,EAAA1E,KAAA2E,EACqB3E,KAAKC,MAAzBJ,EADD8E,EACC9E,OAAQxH,EADTsM,EACStM,QAChB,OACEC,EAAAC,EAAAC,cAACF,EAAAC,EAAMuB,SAAP,KACExB,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAMC,MAAI,EAACoI,GAAI,GAAIlI,GAAI,GACrBpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAOlE,UAAWJ,EAAQ8B,OACvB0F,EAAOtE,IAAI,SAACd,EAAM6B,GAAP,OACVhE,EAAAC,EAAAC,cAACqM,GAAD,CACEhJ,IAAKpB,EAAO6B,EACZ7B,KAAMA,EACN6H,SAAUhG,EAAQ,EAAI,kBAAMoI,EAAKD,cAAcnI,IAAS,SAG5DhE,EAAAC,EAAAC,cAACwL,GAAD,CAAuBE,UAAWlE,KAAKC,MAAMiE,cAIjD5L,EAAAC,EAAAC,cAAC0K,GAAD,CACEC,KAAMnD,KAAK4C,MAAMsB,UACjBd,SAAUpD,KAAKsE,YACfjB,SAAUrD,KAAKwE,YACf/J,KAAMoF,EAAOG,KAAK4C,MAAMyB,sBAxCR5D,aA+CXqE,gBAvDA,SAAAlN,GACb,MAAO,CACLuC,MAAO,CACLC,QAAS,OACTC,UAAW,YAmDFyK,CAAmBV,sDCtC5B1M,GAAYC,YAAY,SAAAC,GAC5B,MAAQ,CACNwB,KAAK,CACHiB,UAAU,UAEZ0K,QAAQ,CACN3K,QAAQ,OACRV,OAAO,WAKE,SAASsL,GAAY/E,GAElC,IAAM5H,EAAUX,KAuBhB,OAEEY,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuB,SAAA,KAEExB,EAAAC,EAAAC,cAAC8K,GAAA,EAAD,CAAQC,KAAMtD,EAAMsD,KAAME,kBAAgB,oBAAoBhL,UAAWJ,EAAQe,MAC/Ed,EAAAC,EAAAC,cAACmL,GAAA,EAAD,CAAazH,GAAG,qBAAhB,gBACA5D,EAAAC,EAAAC,cAACoL,GAAA,EAAD,KACEtL,EAAAC,EAAAC,cAACyM,GAAA,EAAD,CACElB,WAAS,EACTmB,aAAcjF,EAAMkF,UAAYlF,EAAMkF,UAAY,GAClDC,YAAa,oBACb1L,OAAO,QACPwC,GAAG,OACHmJ,MAAM,OACNrI,KAAK,OACLsI,SA/BiB,SAAAC,GACzB,IAAIC,EAAQD,EAAME,OAAOD,MACzB,GAAIA,EAAME,OAAOxI,OAAS,EACxB,OAAO,KAETyI,WAAW,WACT1F,EAAMb,WAAWoG,IAChB,MAyBKI,WAAS,IAEV3F,EAAM4F,WAAavN,EAAAC,EAAAC,cAACsC,EAAA,EAAD,CAAkBrC,UAAWJ,EAAQ0M,UACxD9E,EAAM6F,eACLxN,EAAAC,EAAAC,cAACuN,GAAA,EAAD,CAAMC,UAAU,MAAMhD,aAAW,wBAC9B/C,EAAM6F,cAAcvK,IAAI,SAAC0K,EAAQ3J,GAChC,OACEhE,EAAAC,EAAAC,cAAC0N,GAAA,EAAD,CAAUC,QAAM,EAACtJ,QAAS,kBA5BrB,SAACP,GACpB2D,EAAMd,QAAQc,EAAM6F,cAAcxJ,IAClC2D,EAAMmG,OA0BuCC,CAAa/J,IAAQT,IAAKoK,EAAO3J,GAC9DhE,EAAAC,EAAAC,cAAC8N,GAAA,EAAD,KACAhO,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,OAEAD,EAAAC,EAAAC,cAAC+N,GAAA,EAAD,CAAcC,QAASP,SAOnC3N,EAAAC,EAAAC,cAACsL,GAAA,EAAD,KACExL,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAAQ5E,QAzDI,WACfoD,EAAMkF,WACPsB,OAAO9L,QAAQ+L,UAAU,GAAI,GAAG,YAElCzG,EAAMmG,QAqD8BvN,MAAM,WAApC,iBC7EJ8N,8MAKJC,wBAA0B,SAAAnM,GACxBuH,EAAK/B,MAAM4G,gBAAgBpM,uFAIxBuF,KAAKC,MAAMJ,OAAO3C,OAAS,GAC5B8C,KAAKC,MAAM6G,kBAEb,IAAI7F,EAAO,IAAIC,gBAAgBlB,KAAKC,MAAM8G,SAAS3F,QAAQC,IAAI,QAC5DJ,IACDjB,KAAKC,MAAM+G,cACXhH,KAAKC,MAAMb,WAAW6B,qCAKxB,IAAIA,EAAO,IAAIC,gBAAgBlB,KAAKC,MAAM8G,SAAS3F,QAAQC,IAAI,QAC/D,OACE/I,EAAAC,EAAAC,cAACF,EAAAC,EAAMuB,SAAP,KACExB,EAAAC,EAAAC,cAACyO,GAAD,CACEpH,OAAQG,KAAKC,MAAMJ,OACnBqE,UAAWlE,KAAKC,MAAM+G,YACtBzC,WAAYvE,KAAKC,MAAMiH,eAEzB5O,EAAAC,EAAAC,cAACwM,GAAD,CACEzB,KAAMvD,KAAKC,MAAMiE,UACjB9E,WAAYY,KAAKC,MAAMb,WACvByG,UAAW7F,KAAKC,MAAM4F,UACtBC,cAAe9F,KAAKC,MAAM6F,cAC1B3G,QAASa,KAAKC,MAAMd,QACpBiH,KAAMpG,KAAKC,MAAMkH,YACjBhC,UAAWlE,GAAgB,eApCDR,aA2CpCkG,GAAsBS,UAAY,CAChCC,QAASC,KAAUC,KAAKC,YAG1B,IAgBe9G,eAPS,SAAAnJ,GAAA,IAAGqJ,EAAHrJ,EAAGqJ,YAAH,MAAsB,CAC5Cf,OAAQe,EAAYf,OACpBgG,UAAWjF,EAAYiF,UACvBC,cAAelF,EAAYkF,cAC3B5B,UAAWtD,EAAYsD,YAbE,SAAA5F,GAAQ,MAAK,CACtCwI,gBAAiB,kBAAMxI,EX7BhB,SAAAA,GACLjB,MAFgB,0BAGbC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KACC,SAAA/F,GAA2B,IAErBkQ,EAAmB,CAFElQ,EAAxBkD,KAAwBlD,EAAlBmQ,cAEqCC,KAAK,MACjDrJ,EAASa,EAAQsI,IACjBnJ,EAASF,EAAgBqJ,SWsBjCrI,WAAY,SAAAC,GAAQ,OAAIf,EAASc,EAAWC,KAC5C2H,YAAa,kBAAM1I,EXyBZ,CACLtB,KChF4B,uBUuD9BmK,YAAa,kBAAM7I,EX8BZ,CACLtB,KCrF4B,uBUuD9BmC,QAAS,SAAA1E,GAAI,OAAI6D,EAASa,EAAQ1E,KAClCyM,aAAc,SAAAzM,GAAI,OAAI6D,EXiCE,SAAC7D,GACzB,MAAM,CACJuC,KCvGsB,cDwGtBqB,QAAQ5D,GWpCqB8J,CAAW9J,OAU7BiG,CAGbG,YAAW8F,yBC/EPjP,GAAYC,YAAW,SAAAC,GAC3B,MAAO,CACLwB,KAAM,GAGNwO,OAAQ,CACNC,OAAQ,QACR9P,QAAS,OACTC,eAAgB,UAElB8P,MAAO,CACLhH,MAAOlJ,EAAMmQ,QAAQ,IACrBF,OAAQjQ,EAAMmQ,QAAQ,QAKb,SAASC,KACtB,IAAM3P,EAAUX,KAChB,OACEY,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQe,MACtBd,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQuP,QACtBtP,EAAAC,EAAAC,cAACyP,GAAA,EAAD,CACEtP,IAAI,aACJD,IAAI,sHACJD,UAAWJ,EAAQyP,SAGvBxP,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KACEzB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,KACE5B,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CACE1D,UAAWJ,EAAQ4B,MACnBpB,MAAM,gBACNqP,cAAY,GAHd,mBAQA5P,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAY1D,UAAWJ,EAAQ8P,IAAKtP,MAAM,iBAA1C,aAGAP,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAYuF,QAAQ,QAAQsE,UAAU,KAAtC,2BAEE1N,EAAAC,EAAAC,cAAA,WACC,yBAGLF,EAAAC,EAAAC,cAAC4P,GAAA,EAAD,KACE9P,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CAAQ4G,KAAK,SAAb,iBCnDK,SAASC,KACpB,OACIhQ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwP,GAAD,OCAG,SAASO,KACpB,OACIjQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAK,SACVtJ,EAAAC,EAAAC,cAAC8P,GAAD,OCFV,IAAME,GAAgB,WACpB,OACElQ,EAAAC,EAAAC,cAACF,EAAAC,EAAMuB,SAAP,KACExB,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAK,WAAWC,OAAK,GAC1BvJ,EAAAC,EAAAC,cAACiQ,GAAD,SAMFC,GAAW,WACf,OAAOpQ,EAAAC,EAAAC,cAAA,wBAGM,SAASmQ,GAAO1I,GAC7B,IAAI2I,EACFtQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,KACEjJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAK,IAAIC,OAAK,GACnBvJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAUC,GAAG,cAEflJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAK,YACVtJ,EAAAC,EAAAC,cAACqQ,GAAD,OAGFvQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAK,aACVtJ,EAAAC,EAAAC,cAACsQ,GAAD,OAGFxQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAK,SACVtJ,EAAAC,EAAAC,cAAC+P,GAAD,OAGFjQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAK,KACVtJ,EAAAC,EAAAC,cAACuQ,GAAD,QAyBN,OArBI9I,EAAM+I,SACRJ,EACEtQ,EAAAC,EAAAC,cAACF,EAAAC,EAAMuB,SAAP,KACExB,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAK,YACVtJ,EAAAC,EAAAC,cAACiQ,GAAD,OAIFnQ,EAAAC,EAAAC,cAACsQ,GAAD,MAGAxQ,EAAAC,EAAAC,cAAC+P,GAAD,MAEAjQ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAU0H,KAAK,IAAIzH,GAAG,aACtBlJ,EAAAC,EAAAC,cAAC+I,EAAA,EAAD,CAAOK,KAAK,KACVtJ,EAAAC,EAAAC,cAAA,oBAMDoQ,wDCnDHlR,GAAYC,YAAW,SAAAC,GAAK,MAAK,CACrCwB,KAAM,CACJtB,SAAU,GAEZoR,WAAY,CACVC,YAAavR,EAAMmQ,QAAQ,IAE7B9N,MAAO,CACLnC,SAAU,MAIC,SAAS8P,KAAS,IAAAwB,EACCC,IAAMC,SAAS,MADhBC,EAAAtO,OAAAiD,EAAA,EAAAjD,CAAAmO,EAAA,GACxBI,EADwBD,EAAA,GACdE,EADcF,EAAA,GAOzBG,EAAc,WAClBD,EAAY,OAGRE,EAAW,WACfC,MAAM,eACNF,KAGIrR,EAAUX,KAEhB,OACEY,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuB,SAAA,KACExB,EAAAC,EAAAC,cAACqR,GAAA,EAAD,CAAQC,SAAS,UACfxR,EAAAC,EAAAC,cAACuR,GAAA,EAAD,KACEzR,EAAAC,EAAAC,cAAC2D,EAAA,EAAD,CAAYuF,QAAQ,KAAKjJ,UAAWJ,EAAQ4B,OAA5C,cAGA3B,EAAAC,EAAAC,cAACiJ,GAAA,EAAD,CACExF,gBAAc,cACd+N,gBAAc,OACdnN,QAzBU,SAAA0I,GAClBkE,EAAYlE,EAAM0E,gBAyBVvI,QAAQ,YAAY7I,MAAM,WAJ5B,QAQAP,EAAAC,EAAAC,cAAC0R,GAAA,EAAD,CACEhO,GAAG,cACHsN,SAAUA,EACVW,aAAW,EACX5G,KAAM6G,QAAQZ,GACdhG,QAASkG,GAETpR,EAAAC,EAAAC,cAAC6R,GAAA,EAAD,CAAUxN,QAAS8M,GAAnB,WACArR,EAAAC,EAAAC,cAAC6R,GAAA,EAAD,CAAUxN,QAAS8M,GAAnB,cACArR,EAAAC,EAAAC,cAAC6R,GAAA,EAAD,CAAUxN,QAAS8M,GAAnB,yBCtDNjS,GAAYC,YAAW,SAAAC,GAC3B,MAAO,CACLwB,KAAM,CACJtB,SAAU,GAEZwS,UAAW,CACTC,UAAW,WCRGH,QACW,cAA7B3D,OAAOM,SAASyD,UAEe,UAA7B/D,OAAOM,SAASyD,UAEhB/D,OAAOM,SAASyD,SAAStK,MACvB,2FCPAuK,GAAe,CACnBC,aAAc,KACd7K,OAAQ,GACRiG,cAAe,GACfD,WAAW,EACX3B,WAAW,GCZEyG,gBAAgB,CAC3B/J,YDcuB,WAAkC,IAAjCgC,EAAiC3F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBwN,GAAc1H,EAAW9F,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQ4F,EAAO/F,MACb,IlBrBoB,YkBsBlB,OAAO/B,OAAA2P,GAAA,EAAA3P,CAAA,GAAK2H,EAAZ,CAAmB8H,aAAc3H,EAAO1E,UAC1C,IlBrBoB,WkBsBlB,IAAIwM,EAAa,GAAApT,OAAAwD,OAAAC,EAAA,EAAAD,CAAO2H,EAAM/C,QAAb,CAAqBkD,EAAO1E,UAC7C,OAAOpD,OAAA2P,GAAA,EAAA3P,CAAA,GAAK2H,EAAZ,CAAmB/C,OAAQgL,IAC7B,IlBR6B,oBkBS3B,OAAO5P,OAAA2P,GAAA,EAAA3P,CAAA,GAAK2H,EAAZ,CAAmBiD,WAAW,IAChC,IlBR4B,mBkBS1B,OAAO5K,OAAA2P,GAAA,EAAA3P,CAAA,GAAK2H,EAAZ,CAAmBiD,WAAW,IAChC,IlBX+B,sBkBY7B,OAAO5K,OAAA2P,GAAA,EAAA3P,CAAA,GAAK2H,EAAZ,CAAmBiD,WAAW,EAAOC,cAAe/C,EAAO1E,UAC7D,IlBjB4B,oBkBkB1B,OAAOpD,OAAA2P,GAAA,EAAA3P,CAAA,GAAK2H,EAAZ,CAAmBsB,WAAW,EAAM4B,cAAc,KACpD,IlBlB4B,oBkBmB1B,OAAO7K,OAAA2P,GAAA,EAAA3P,CAAA,GAAK2H,EAAZ,CAAmBsB,WAAW,EAAO4B,cAAc,KACrD,IlBhCsB,ckBkCpB,OADA+E,EAAejI,EAAM/C,OAAOjB,OAAO,SAACnE,EAAMqQ,GAAP,OAAYA,IAAM/H,EAAO1E,UACzDuE,EAAM8H,eAAiB9H,EAAM/C,OAAOkD,EAAO1E,SACrCpD,OAAA2P,GAAA,EAAA3P,CAAA,GAAK2H,EAAZ,CAAmB/C,OAAQgL,EAAeH,aAAa9H,EAAM/C,OAAO,KACrC,IAAxB+C,EAAM/C,OAAO3C,OACbjC,OAAA2P,GAAA,EAAA3P,CAAA,GAAK2H,EAAZ,CAAmB/C,OAAQgL,EAAeH,aAAa,OAElDzP,OAAA2P,GAAA,EAAA3P,CAAA,GAAK2H,EAAZ,CAAmB/C,OAAQgL,IAC7B,QACE,OAAOjI,ICxCIjC,wBCCuB,WAAyB,IAAxBiC,EAAwB3F,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAM8F,EAAW9F,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQ4F,EAAO/F,MACX,IpBFyB,oBoBEzB,IAAA+N,EACkChI,EAAO1E,QACrC,MAAO,CAFX0M,EACWtQ,KADXsQ,EACiBrM,gBAEjB,QACI,OAAOkE,MCRboI,GAAkBvE,OAAOwE,sCAAwCC,KAC1DC,GAAOC,aAAaC,GAAUL,GAAiBM,aAAgBC,QCI5EC,IAAS7I,OACLrK,EAAAC,EAAAC,cAACiT,EAAA,EAAD,CAAUN,MAAOA,IACb7S,EAAAC,EAAAC,cNcR,SAAeyH,GACb,IAAM5H,EAAUX,KAChB,OACEY,EAAAC,EAAAC,cAACkT,EAAA,EAAD,KACEpT,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAQe,MACtBd,EAAAC,EAAAC,cAACoP,GAAD,MACAtP,EAAAC,EAAAC,cAACmT,GAAA,EAAD,CAAWlT,UAAWJ,EAAQiS,UAAWsB,SAAS,MAChDtT,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAM+N,WAAS,EAACvC,QAAS,GACvBzP,EAAAC,EAAAC,cAACmQ,GAAD,WMtBJ,OACSkD,SAASC,eAAe,SLqHnC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3O,KAAK,SAAA4O,GACjCA,EAAaC","file":"static/js/main.9a969566.chunk.js","sourcesContent":["import React from 'react';\r\n//  fa-rainbow  fa-cloud-moon fa-cloud-moon-rain cloud-sun-rain fa-cloud-sun\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst getWeatherIcon= ({icon}) => {\r\n    return (`http://openweathermap.org/img/w/${icon}.png`);\r\n};\r\n\r\nconst useStyles = makeStyles( theme => {\r\n  return ({\r\n    temperature:{\r\n      flexGrow:\"2\",\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\"\r\n    }}\r\n  )\r\n})\r\nexport default ({temperature, weatherState}) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.temperature}>\r\n      <img  src={getWeatherIcon(weatherState)}alt=\"\" className=\"icon-img\" />\r\n      <h3>{`  ${temperature}`}<span className=\"tempDegrees\">Cº</span></h3>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\n\r\nconst useStyles = makeStyles( theme => {\r\n    return ({\r\n    extraInfo:{\r\n      flexGrow:\"1\",\r\n      color:\"blue\",\r\n      display:\"flex\",\r\n      flexDirection:\"column\",\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\"\r\n    }\r\n    }\r\n    )\r\n  })\r\nexport default ({humidity: h, wind: w}) => {\r\n   const classes = useStyles()\r\n  \r\n  return (\r\n    <div className={classes.extraInfo}>\r\n      <span>{`Humidity: ${h}%`}</span>\r\n      <span>{`Wind: ${w}`}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n// components\r\nimport WeatherTemperature from './Temperature';\r\nimport WeatherExtraInfo from './ExtraInfo';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( theme =>{\r\n  return {\r\n    \r\n      root:{\r\n        display:'flex',\r\n        backgroundColor: \"rgba(240, 240, 240, .5)\",\r\n        boxSizing:\"border-box\"\r\n      }\r\n    \r\n  }\r\n})\r\n\r\n\r\n\r\n\r\nexport  default ({data}) => {\r\n\r\n  const classes = useStyles()\r\n  \r\n  const {temperature, weatherState, humidity, wind } = data; \r\n \r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <WeatherTemperature temperature={temperature} weatherState={weatherState}/>\r\n      <WeatherExtraInfo  humidity={humidity} wind={wind} />\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// components\r\nimport WeatherData from '../WeatherData';\r\nimport {Card, CardHeader, CardContent} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStiles= makeStyles( theme => {\r\n  return ({root:{\r\n    margin:\"1rem\"\r\n  }})\r\n})\r\n\r\nexport default ({weekDay, hour, data })=> {\r\n  const classes = useStiles();\r\n\r\n    return (\r\n      <React.Fragment>\r\n          <Card className={classes.root}>\r\n            <CardHeader title={`${hour}:00`} />\r\n            <CardContent>\r\n              <WeatherData data={data}></WeatherData>\r\n            </CardContent>\r\n            \r\n          </Card>\r\n      </React.Fragment> \r\n    )\r\n  \r\n}\r\n","import React from \"react\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ForescastItem from \"../ForecastItem/ForecastItem\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport {\r\n  CircularProgress,\r\n  Grid,\r\n  Paper,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  Typography,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    paper: {\r\n      padding: \"1rem\",\r\n      textAlign: \"center\"\r\n    },\r\n    expansionPanelDetail: {\r\n      flexDirection: \"column\"\r\n    },\r\n    actions:{\r\n      textAlign:\"left\"\r\n    }\r\n  };\r\n});\r\n\r\nconst ForecastExtended = ({ city, forecastExtendedData }) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  let forecast = <CircularProgress />;\r\n\r\n  const onBack = () => {\r\n    history.push(\"/weather\")\r\n  };\r\n\r\n  if (forecastExtendedData && forecastExtendedData[0] === city) {\r\n    // it's an object\r\n    let forecastGroups = forecastExtendedData[1].reduce((weekDay, a) => {\r\n      weekDay[a.weekDay] = [...(weekDay[a.weekDay] || []), a];\r\n      return weekDay;\r\n    }, {});\r\n\r\n    // converting into an array of groups objects\r\n    let groupArray = [];\r\n    for (let group in forecastGroups) {\r\n      groupArray.push({ [group]: forecastGroups[group] });\r\n    }\r\n\r\n    forecast = groupArray.map((dayGroup, groupIndex) => {\r\n      let dayGroupName;\r\n      for (let name in dayGroup) {\r\n        dayGroupName = name;\r\n      }\r\n      return (\r\n        <ExpansionPanel key={dayGroupName + groupIndex}>\r\n          <ExpansionPanelSummary\r\n            key={dayGroupName + groupIndex}\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls={dayGroupName}\r\n            id={dayGroupName}\r\n          >\r\n            <Typography>{dayGroupName}</Typography>\r\n          </ExpansionPanelSummary>\r\n          <ExpansionPanelDetails className={classes.expansionPanelDetail}>\r\n            {dayGroup[dayGroupName].map((day, index) => {\r\n              return (\r\n                <ForescastItem\r\n                  weekDay={day.weekDay}\r\n                  hour={day.hour}\r\n                  data={day.data}\r\n                  key={day + index}\r\n                ></ForescastItem>\r\n              );\r\n            })}\r\n          </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Grid item sm={12} md={6}>\r\n      <Paper className={classes.paper}>\r\n        <div className={classes.actions}>\r\n          <IconButton onClick={onBack}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n        </div>\r\n        <h1>{city}</h1>\r\n        {forecast && forecast}\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ForecastExtended;\r\n","import moment from 'moment';\r\n\r\n // fetch from API\r\nexport const getData = (city, type=\"weather\") => {\r\nconst apiKey = \"ea0b23131c72bacfe9c361211bb6ea7f\";\r\nconst api_weather = `https://api.openweathermap.org/data/2.5/${type}?q=${city}&units=metric&APPID=${apiKey}`;\r\n   return fetch(api_weather)\r\n    .then( res => {\r\n       return res.json();\r\n    })\r\n    .then( res => {\r\n        return res;\r\n    })\r\n    .catch( err => {\r\n        throw err;\r\n    }) ;\r\n};\r\n\r\n// transform API response into an \"data\" object for simple forecast\r\n  export const  transformWeather = (res) => {\r\n        const {speed} = res.wind;\r\n        const {humidity, temp} = res.main;\r\n        const {weather} = res;\r\n        const weatherState = getWeatherState(weather);\r\n        return  {\r\n          humidity,\r\n          weatherState,\r\n          temperature:temp,\r\n          wind: `${speed}m/s`\r\n        }\r\n      };\r\n      \r\n // get Wheather from response object\r\n const  getWeatherState = ([weather]) =>{\r\n     const {main, description, icon} = weather;\r\n     const weatherState={\r\n            main,\r\n            description,\r\n            icon\r\n     }\r\n    return (weatherState);\r\n  };\r\n\r\n  // transform API response into an \"data\" object for Extended Forecast\r\n  export const transformForecastExtend = ({list}) => {\r\n    \r\n        return (list.filter( item => \r\n        moment.unix(item.dt).utc().hour() === 6 ||\r\n        moment.unix(item.dt).utc().hour() === 12 ||\r\n        moment.unix(item.dt).utc().hour() === 18  ))\r\n        .map( item => {\r\n            return  {\r\n                weekDay:moment.unix(item.dt).format('ddd'),\r\n                hour:moment.unix(item.dt).hour(),\r\n                data:{\r\n                  temperature:item.main.temp,\r\n                  wind:item.wind.speed,\r\n                  humidity:item.main.humidity,\r\n                  weatherState: getWeatherState(item.weather)\r\n                  }\r\n                }\r\n          });\r\n      \r\n      };\r\n\r\n  \r\n","import { getData, transformForecastExtend } from \"../services/TransformWeather\";\r\nimport { findCity } from \"../services/findCity\";\r\nimport {\r\n  SET_CITY,\r\n  SET_FORECAST_DATA,\r\n  ADD_CITY,\r\n  SET_USER_LOCATION,\r\n  SEARCH_CITY_START,\r\n  SEARCH_CITY_SUCCESS,\r\n  SEARCH_CITY_FAIL,\r\n  HIDE_SEARCH_MODAL,\r\n  SHOW_SEARCH_MODAL,\r\n  DELETE_CITY\r\n} from \"./ActionTypes\";\r\nconst setCity = payload => ({ type: SET_CITY, payload });\r\nconst setForecastData = payload => ({ type: SET_FORECAST_DATA, payload });\r\n\r\nexport const getForecastData = payload => {\r\n  return dispatch => {\r\n    console.log(payload)\r\n    getData(payload, \"forecast\")\r\n      .then(forecastData => {\r\n        //modificar el estado con el resultado del fecht\r\n        const forecastExtend = transformForecastExtend(forecastData);\r\n        dispatch(setForecastData({ city: payload, forecastExtend }));\r\n      })\r\n      .catch(err => console.log(`${err}`));\r\n  };\r\n};\r\n\r\nexport const addCity = city => {\r\n  return {\r\n    type: ADD_CITY,\r\n    payload: city\r\n  };\r\n};\r\nexport const setUserLocation = () => {\r\n  let locationUrl = \"https://ipapi.co/json/\";\r\n  return dispatch => {\r\n    fetch(locationUrl)\r\n      .then(res => res.json())\r\n      .then(\r\n        ({ city, country_name}) => {\r\n          // set city in correct format for wheather api ej ( \" rosario , ar \")\r\n          let formatedCityInfo = [city, country_name].join(\", \");\r\n          dispatch(addCity(formatedCityInfo));\r\n          dispatch(getForecastData(formatedCityInfo));\r\n        }\r\n      );\r\n  };\r\n};\r\n\r\nconst searchCityStart = () => {\r\n  return {\r\n    type: SEARCH_CITY_START\r\n  };\r\n};\r\n\r\nconst searchCityfail = error => {\r\n  return {\r\n    type: SEARCH_CITY_FAIL,\r\n    payload: error\r\n  };\r\n};\r\nconst searchCitySuccess = cities => {\r\n  return {\r\n    type: SEARCH_CITY_SUCCESS,\r\n    payload: cities\r\n  };\r\n};\r\n\r\nexport const searchCity = city => {\r\n  return dispatch => {\r\n    dispatch(searchCityStart());\r\n    findCity(city)\r\n      .then(({_embedded}) => {\r\n        const cities = _embedded['city:search-results'];\r\n        let formatedCitiesList = cities.map( city => {\r\n          // city name is the firts element on the array\r\n          let cityNameArray = city.matching_full_name.split(\",\")\r\n          let cityName= cityNameArray[0]\r\n          // remove parentesis from the last statement\r\n          let country = cityNameArray[cityNameArray.length - 1].split(\"(\")[0]\r\n          let formatedName = cityName+\",\"+country;\r\n          return formatedName\r\n        }\r\n        );\r\n        dispatch(searchCitySuccess(formatedCitiesList));\r\n      })\r\n      .catch(err => dispatch(searchCityfail(err)));\r\n  };\r\n};\r\n\r\nexport const showModal = () => {\r\n  return {\r\n    type: SHOW_SEARCH_MODAL\r\n  };\r\n};\r\n\r\nexport const hideModal = () => {\r\n  return {\r\n    type: HIDE_SEARCH_MODAL\r\n  };\r\n};\r\n\r\nexport const deleteCity = (city) => {\r\n  return{\r\n    type:DELETE_CITY,\r\n    payload:city\r\n  }\r\n}\r\n","export const SET_CITY = \"SET_CITY!\";\r\nexport const GET_CITIES = \"GET_CITIES\";\r\nexport const ADD_CITY = \"ADD_CITY\";\r\nexport const SET_USER_LOCATION = \"SET_USER_LOCATION\";\r\nexport const DELETE_CITY =\"DELETE_CITY\"\r\n\r\nexport const SET_FORECAST_DATA = \"SET_FORECAST_DATA\";\r\nexport const GET_FORECAST_DATA = \"SET_FORECAST_DATA\";\r\nexport const GET_FORECAST_DATA_START=\"SET_FORECAST_DATA_START\";\r\nexport const GET_FORECAST_DATA_FAIL=\"SET_FORECAST_DATA_FAIL\";\r\nexport const GET_FORECAST_DATA_SUCCESS=\"SET_FORECAST_DATA_SUCCES\";\r\n\r\n\r\n\r\n// for city search\r\nexport const SHOW_SEARCH_MODAL =\"SHOW_SEARCH_MODAL\";\r\nexport const HIDE_SEARCH_MODAL =\"HIDE_SEARCH_MODAL\"\r\n\r\nexport const SEARCH_CITY_START = \"SEARCH_CITY_START\";\r\nexport const SEARCH_CITY_SUCCESS = \"SEARCH_CITY_SUCCESS\";\r\nexport const SEARCH_CITY_FAIL = \"SEARCH_CITY_FAIL\";\r\n","export const findCity = (criterio) => {\r\n  \r\n  let googglePlaceApi=`https://api.teleport.org/api/cities/?search=${criterio}`;\r\n  return fetch(googglePlaceApi)\r\n    .then(res => res.json())\r\n    .then(res => res)\r\n    .catch(err => console.log(err));\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {withRouter} from 'react-router-dom'\r\nimport { connect } from \"react-redux\";\r\nimport ForecastExtended from \"../Components/Weather/ForecastExtended/ForecastExtended\";\r\nimport * as actions from \"../actions/index\";\r\n\r\nclass ForecastExtendedContainer extends Component {\r\n  static propTypes = {\r\n    city: PropTypes.string.isRequired\r\n  };\r\n\r\n  componentDidMount(){\r\n    let city = this.props.match.params.city;\r\n    let cityIndex =this.props.availableCities.indexOf(city)\r\n\r\n    if(cityIndex >= 0){\r\n      this.props.getForecast(city)\r\n    }else{\r\n\r\n      this.props.history.replace(`/forecast?find=${city}`)\r\n    }\r\n    \r\n\r\n  }\r\n  componentDidUpdate(){\r\n    \r\n    \r\n    if(this.props.forecastExtendedData[0] !== this.props.match.params.city){\r\n      console.log(\"deberia actualizar\")\r\n    let city = this.props.match.params.city;\r\n    this.props.getForecast(city)\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    let city = this.props.match.params.city;\r\n    return ( \r\n              <ForecastExtended city={city} forecastExtendedData={this.props.forecastExtendedData}/>\r\n    );\r\n  }\r\n}\r\nconst mapsStateToProps = ({extendedForecastReducer,cityReducer }) => {\r\n  return { \r\n    forecastExtendedData: extendedForecastReducer,\r\n    availableCities: cityReducer.cities\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n    getForecast :(city) => dispatch(actions.getForecastData(city))\r\n  }\r\n}\r\n\r\nexport default connect(mapsStateToProps, mapDispatchToProps)(withRouter(ForecastExtendedContainer));\r\n","import React from \"react\";\r\nimport { Paper, IconButton, Grid, Button } from \"@material-ui/core\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { useLocation, useHistory, Redirect } from \"react-router\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      padding: \"2rem\"\r\n    },\r\n    actions: {\r\n      textAlign: \"left\"\r\n    },\r\n    message:{\r\n        textAlign: \"center\"\r\n    }\r\n  };\r\n});\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nexport default function forecastPlaceholder() {\r\n  const classes = useStyles();\r\n  const query = useQuery().get(\"find\");\r\n  let history = useHistory()\r\n\r\n  let placeHolder = <Redirect to=\"weather\"/>\r\n\r\n  \r\n  const onFind = () => {\r\n    console.log(\"click\")\r\n    history.push(`/weather?find=${query}`);\r\n  };\r\n\r\n  const onBack = () => {\r\n    history.push(\"/weather\");\r\n  };\r\n\r\n\r\n  if (query) {\r\n    placeHolder = (\r\n      <div className={classes.message}>\r\n        <h1> Do you like to find \"{query}\" ?</h1>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={onFind}>Find it !</Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid item sm={12} md={8}>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.actions}>\r\n          <IconButton onClick={onBack}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n        </div>\r\n        {placeHolder}\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ForecastExtendedContainer from \"../ForecastExtendedContainer\";\r\nimport ForecastPlaceHolder from \"../../Components/forecast/forecastPlaceholder\"\r\n\r\n// reconfigurar la ruta para que sea /weather/forecast/:city\r\n// hacer que el parametro city sea dinamico dentro del map y cada ruta tenga el atributo exact\r\n//mostrar un componente placeHolder para la ruta /weather/forecast/\r\n\r\nfunction forecastRoutes({ cities }) {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/forecast\" exact>\r\n        <ForecastPlaceHolder />\r\n      </Route>\r\n      <Route path={`/forecast/:city`}>\r\n        <ForecastExtendedContainer />\r\n      </Route>\r\n      <Route path=\"*\">\r\n        Ups, not mach for that!\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default forecastRoutes;\r\n","import React, { Component } from \"react\";\r\nimport Data from \"../WeatherData\";\r\n//Router\r\nimport {withRouter ,RouteComponentProps} from 'react-router-dom'\r\n// Services\r\nimport {\r\n  transformWeather,\r\n  getData\r\n} from \"../../../services/TransformWeather.js\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\r\n\r\ninterface props extends RouteComponentProps{\r\n  city:string,\r\n  onDelete: ()=>void | null\r\n}\r\n\r\ntype state= {\r\n  data:any\r\n}\r\n\r\nclass Weather extends Component<props, state> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    data: null\r\n  };\r\n  }\r\n  \r\n\r\n  headleClick =  () => {\r\n\r\n    let path = `/forecast/${this.props.city}`;\r\n    console.log(this.props.history.replace(path))\r\n  };\r\n\r\n  onDelete = e => {\r\n    e.stopPropagation()\r\n    this.props.onDelete()\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    getData(this.props.city).then(res => {\r\n      const weather = transformWeather(res);\r\n      this.setState({ data: weather });\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    const { city } = this.props;\r\n    const { data } = this.state;\r\n    return (\r\n        <Card style={{ marginBottom: \"1.5rem\" }} onClick={this.headleClick}>\r\n          <CardHeader\r\n            title={city}\r\n            action={ this.props.onDelete &&\r\n              <IconButton aria-label=\"settings\" onClick={this.onDelete}>\r\n                <CancelIcon color=\"secondary\" />\r\n              </IconButton>\r\n            }\r\n          />\r\n          <CardContent>\r\n            {data ? <Data data={data} /> : <p>cargando</p>}\r\n          </CardContent>\r\n        </Card>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(Weather )\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\ntype props = {\r\n  show: boolean,\r\n  city: string | null,\r\n  onSubmit: () => void;\r\n  onCancel: () => void;\r\n};\r\nexport default function weatherAlert({ show, city, onSubmit, onCancel }: props) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={show}\r\n        onClose={onCancel}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Are you sure to delete this location ?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {city}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onCancel} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport { Fab } from \"@material-ui/core\";\r\n\r\n\r\nexport default function WeatherListController(props) {\r\n\r\n  const clickHandler = () => {\r\n      props.showModal()\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      <Fab color=\"primary\" variant=\"extended\" aria-label=\"add\" onClick={clickHandler}>\r\n        <LocationOnIcon/> NEW\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport WeatherItem from \"../weatherItem/weatherItem.tsx\";\r\nimport WeatherAlert from \"../weatherAlert/weatherAlert.tsx\";\r\nimport WeatherListController from \"../weatherListController/weatherListController\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = theme => {\r\n  return {\r\n    paper: {\r\n      padding: \"1rem\",\r\n      textAlign: \"center\"\r\n    }\r\n  };\r\n};\r\nclass WeatherList extends Component {\r\n  state = {\r\n    showModal: false,\r\n    deleteItem: null\r\n  };\r\n  modalSubmit = () => {\r\n    this.setState({ showModal: false });\r\n    this.props.deleteCity(this.state.deleteItem);\r\n  };\r\n\r\n  modalCancel = () => {\r\n    console.log(\"cancelado\");\r\n    this.setState({ showModal: false, deleteItem: false });\r\n  };\r\n\r\n  setDeleteItem = index => {\r\n    this.setState({ deleteItem: index, showModal: true });\r\n  };\r\n\r\n  render() {\r\n    const { cities, classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className={classes.paper}>\r\n            {cities.map((city, index) => (\r\n              <WeatherItem\r\n                key={city + index}\r\n                city={city}\r\n                onDelete={index > 0 ? () => this.setDeleteItem(index) : null}\r\n              />\r\n            ))}\r\n            <WeatherListController showModal={this.props.showModal} />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <WeatherAlert\r\n          show={this.state.showModal}\r\n          onSubmit={this.modalSubmit}\r\n          onCancel={this.modalCancel}\r\n          city={cities[this.state.deleteItem]}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(WeatherList);\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\n\r\n\r\n//lista\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { CircularProgress } from \"@material-ui/core/\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// redux\r\n\r\n\r\nconst useStyles = makeStyles( theme => {\r\n  return ({\r\n    root:{\r\n      textAlign:\"center\"\r\n    },\r\n    spinner:{\r\n      padding:\"1rem\",\r\n      margin:\"1rem\"\r\n    }\r\n  })\r\n})\r\n\r\nexport default function SearchModal(props) {\r\n\r\n  const classes = useStyles()\r\n  const handleClose = () => {\r\n    if(props.findValue){\r\n      window.history.pushState(\"\", \"\",\"/weather\")\r\n    }\r\n    props.hide()\r\n  };\r\n  const inputChangedHanler = event => {\r\n    let value = event.target.value;\r\n    if (value.trim().length < 3) {\r\n      return null;\r\n    }\r\n    setTimeout(() => {\r\n      props.searchCity(value);\r\n    }, 200);\r\n  };\r\n\r\n\r\n  const clickHandler = (index) => {\r\n    props.addCity(props.searchResults[index])\r\n    props.hide()\r\n  }\r\n  \r\n  return (\r\n    \r\n    <>\r\n    \r\n      <Dialog open={props.open} aria-labelledby=\"form-dialog-title\" className={classes.root}>\r\n        <DialogTitle id=\"form-dialog-title\">New location</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            defaultValue={props.findValue ? props.findValue : \"\"}\r\n            placeholder\t=\" ej. Buenos Aires\"\r\n            margin=\"dense\"\r\n            id=\"city\"\r\n            label=\"find\"\r\n            type=\"text\"\r\n            onChange={inputChangedHanler}\r\n            fullWidth\r\n          />\r\n          {props.isLoading && <CircularProgress className={classes.spinner} />}\r\n          {props.searchResults && (\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n              {props.searchResults.map((result, index) => {\r\n                return (\r\n                  <ListItem button onClick={() =>clickHandler(index)} key={result+index}>\r\n                    <ListItemIcon>\r\n                    <LocationOnIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={result} />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//router\r\nimport {withRouter} from \"react-router\"\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setSelectedCity,\r\n  setUserLocation,\r\n  searchCity,\r\n  showModal,\r\n  hideModal,\r\n  addCity,\r\n  deleteCity\r\n} from \"../actions\";\r\n// components\r\nimport WeatherList from \"../Components/Weather/WeatherList/WeatherList\";\r\nimport SearchModal from \"../Components/modal/modal\";\r\n\r\nclass ForecastListContainer extends Component {\r\n  static propTypes = {\r\n    dispatchsetCity: PropTypes.func.isRequired\r\n  };\r\n\r\n  handleSelectionLocation = city => {\r\n    this.props.dispatchsetCity(city);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if(this.props.cities.length < 1 ){\r\n      this.props.setUserLocation();\r\n    }\r\n    let query= new URLSearchParams(this.props.location.search).get(\"find\")\r\n    if(query){\r\n      this.props.onShowModal()\r\n      this.props.searchCity(query)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let query= new URLSearchParams(this.props.location.search).get(\"find\")\r\n    return (\r\n      <React.Fragment>\r\n        <WeatherList\r\n          cities={this.props.cities}\r\n          showModal={this.props.onShowModal}\r\n          deleteCity={this.props.onDeleteCity}\r\n        />\r\n        <SearchModal\r\n          open={this.props.showModal}\r\n          searchCity={this.props.searchCity}\r\n          isLoading={this.props.isLoading}\r\n          searchResults={this.props.searchResults}\r\n          addCity={this.props.addCity}\r\n          hide={this.props.onHideModal}\r\n          findValue={query ? query : null}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nForecastListContainer.propsType = {\r\n  setCity: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setUserLocation: () => dispatch(setUserLocation()),\r\n  searchCity: criterio => dispatch(searchCity(criterio)),\r\n  onShowModal: () => dispatch(showModal()),\r\n  onHideModal: () => dispatch(hideModal()),\r\n  addCity: city => dispatch(addCity(city)),\r\n  onDeleteCity: city => dispatch(deleteCity(city))\r\n});\r\n\r\nconst mapStateToProps = ({ cityReducer }) => ({\r\n  cities: cityReducer.cities,\r\n  isLoading: cityReducer.isLoading,\r\n  searchResults: cityReducer.searchResults,\r\n  showModal: cityReducer.showModal\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(ForecastListContainer))\r\n","import React from \"react\";\r\nimport { Paper, Avatar, Card, CardActions,CardContent, Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    root: {\r\n        \r\n    },\r\n    Header: {\r\n      height: \"100px\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\"\r\n    },\r\n    large: {\r\n      width: theme.spacing(10),\r\n      height: theme.spacing(10),\r\n    }\r\n  };\r\n});\r\n\r\nexport default function userProfile() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.Header}>\r\n        <Avatar\r\n          alt=\"Remy Sharp\"\r\n          src=\"https://cdn5.vectorstock.com/i/1000x1000/66/14/default-avatar-photo-placeholder-profile-picture-vector-21806614.jpg\"\r\n          className={classes.large}\r\n        />\r\n      </div>\r\n      <Card>\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.title}\r\n            color=\"textSecondary\"\r\n            gutterBottom\r\n          >\r\n            Word of the Day\r\n          </Typography>\r\n          \r\n          <Typography className={classes.pos} color=\"textSecondary\">\r\n            adjective\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"p\">\r\n            well meaning and kindly.\r\n            <br />\r\n            {'\"a benevolent smile\"'}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Button size=\"small\">Learn More</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport UserProfile from '../Components/user/userProfile'\r\n\r\nexport default function userContainer() {\r\n    return (\r\n        <div>\r\n            <UserProfile />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route} from \"react-router-dom\";\r\n\r\nimport UserContainer from \"./../userContainer\";\r\n\r\n\r\nexport default function UserRoutes() {\r\n    return (\r\n        <Route path=\"/user\" >\r\n          <UserContainer />\r\n        </Route>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nimport ForecastRoutes from \"./forecastRoutes\";\r\nimport LocationListContainer from \"./../LocationListContainer\";\r\nimport UserRoutes from \"./userRoutes\";\r\n\r\nconst WeatherRoutes = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Route path=\"/weather\" exact>\r\n        <LocationListContainer />\r\n      </Route>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst NotFound = () => {\r\n  return <h1>not found</h1>;\r\n};\r\n\r\nexport default function Routes(props) {\r\n  let routes = (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <Redirect to=\"/weather\" />\r\n      </Route>\r\n      <Route path=\"/weather\">\r\n        <WeatherRoutes />\r\n      </Route>\r\n\r\n      <Route path=\"/forecast\">\r\n        <ForecastRoutes />\r\n      </Route>\r\n\r\n      <Route path=\"/user\">\r\n        <UserRoutes />\r\n      </Route>\r\n\r\n      <Route path=\"*\">\r\n        <NotFound />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n  if (props.isAuth) {\r\n    routes = (\r\n      <React.Fragment>\r\n        <Route path=\"/weather\">\r\n          <LocationListContainer />\r\n        </Route>\r\n\r\n        {/* Dinamic Routes for Forecast Extended */}\r\n        <ForecastRoutes />\r\n\r\n        {/* Dinamic Routes for User*/}\r\n        <UserRoutes />\r\n\r\n        <Redirect from=\"/\" to=\"/weather\" />\r\n        <Route path=\"*\">\r\n          <h1>404</h1>\r\n        </Route>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  return routes;\r\n}\r\n","import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  Menu,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nexport default function Header() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const comingSoon=()=>{\r\n    alert(\"Coming Soon\")\r\n    handleClose();\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            WeatherApp\r\n          </Typography>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n            variant=\"contained\" color=\"primary\"\r\n          >\r\n            Menu\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={comingSoon}>Profile</MenuItem>\r\n            <MenuItem onClick={comingSoon}>My account</MenuItem>\r\n            <MenuItem onClick={comingSoon}>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n// Router\r\nimport {BrowserRouter as Router } from \"react-router-dom\";\r\nimport Routes from './Containers/routes/routes'\r\n// material\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n\r\n// Components\r\nimport Header from \"./Components/Header/Header\";\r\nimport \"./App.css\";\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return {\r\n    root: {\r\n      flexGrow: 1\r\n    },\r\n    container: {\r\n      marginTop: \"80px\"\r\n    }\r\n  };\r\n});\r\n\r\nexport default props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <Header />\r\n        <Container className={classes.container} maxWidth=\"md\">\r\n          <Grid container spacing={3}>\r\n            <Routes/>\r\n          </Grid>\r\n        </Container>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  SET_CITY,\r\n  ADD_CITY,\r\n  SEARCH_CITY_START,\r\n  SEARCH_CITY_FAIL,\r\n  SEARCH_CITY_SUCCESS,\r\n  SHOW_SEARCH_MODAL,\r\n  HIDE_SEARCH_MODAL,\r\n  DELETE_CITY\r\n} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  selectedCity: null,\r\n  cities: [],\r\n  searchResults: [],\r\n  isLoading: false,\r\n  showModal: false\r\n};\r\n\r\nexport const cityReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CITY:\r\n      return { ...state, selectedCity: action.payload };\r\n    case ADD_CITY:\r\n      let newCitiesList = [...state.cities, action.payload];\r\n      return { ...state, cities: newCitiesList};\r\n    case SEARCH_CITY_START:\r\n      return { ...state, isLoading: true };\r\n    case SEARCH_CITY_FAIL:\r\n      return { ...state, isLoading: false };\r\n    case SEARCH_CITY_SUCCESS:\r\n      return { ...state, isLoading: false, searchResults: action.payload };\r\n    case SHOW_SEARCH_MODAL:\r\n      return { ...state, showModal: true, searchResults:[] };\r\n    case HIDE_SEARCH_MODAL:\r\n      return { ...state, showModal: false, searchResults:[] };\r\n    case DELETE_CITY:\r\n      newCitiesList =state.cities.filter((city, i)=> i !== action.payload)\r\n      if(state.selectedCity === state.cities[action.payload]){\r\n        return { ...state, cities: newCitiesList, selectedCity:state.cities[0] }\r\n      }else if(state.cities.length === 0){\r\n        return { ...state, cities: newCitiesList, selectedCity:null }\r\n      }\r\n      return { ...state, cities: newCitiesList }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {extendedForecastReducer} from './forecastExtendedReducer.js'\r\nimport {cityReducer} from './cityReducer.js';\r\n\r\nexport default combineReducers({\r\n    cityReducer, extendedForecastReducer\r\n})\r\n","import {SET_FORECAST_DATA} from  '../actions/ActionTypes';\r\n\r\nconst initialState={\r\n\r\n}\r\n\r\nexport  const extendedForecastReducer = (state =null, action) => {\r\n    switch (action.type) {\r\n        case SET_FORECAST_DATA:\r\n            const {city, forecastExtend} =action.payload;\r\n            return [city, forecastExtend ]\r\n        default:\r\n            return state ;\r\n    }\r\n}","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './../reducers/';\r\n\r\nconst composeEnhancers= window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store= createStore( reducers, composeEnhancers(applyMiddleware(thunk)) );\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from './store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}