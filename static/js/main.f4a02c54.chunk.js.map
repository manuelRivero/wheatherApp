{"version":3,"sources":["Components/Header/Header.js","services/TransformWeather.js","actions/index.js","actions/ActionTypes.js","services/findCity.js","Components/Weather/WeatherData/Temperature.js","Components/Weather/WeatherData/ExtraInfo.js","Components/Weather/WeatherData/index.js","Components/Weather/weatherItem/weatherItem.tsx","Components/Weather/weatherAlert/weatherAlert.tsx","Components/Weather/weatherListController/weatherListController.js","Components/Weather/WeatherList/WeatherList.js","Components/modal/modal.js","Containers/LocationListContainer.js","Components/Weather/ForecastItem/ForecastItem.js","Components/Weather/ForecastExtended/ForecastExtended.js","Containers/ForecastExtendedContainer.js","App.js","serviceWorker.js","reducers/cityReducer.js","reducers/index.js","reducers/forecastExtendedReducer.js","store/index.js","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","_React$useState","React","useState","_React$useState2","Object","slicedToArray","anchorEl","setAnchorEl","handleClose","comingSoon","alert","classes","react_default","a","createElement","Fragment","AppBar","position","Toolbar","Typography","variant","className","Button","aria-controls","aria-haspopup","onClick","event","currentTarget","color","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","getData","city","type","arguments","length","undefined","api_weather","concat","fetch","then","res","json","catch","err","transformWeather","speed","wind","_res$main","main","humidity","temp","weather","weatherState","getWeatherState","temperature","_ref","description","icon","setSelectedCity","payload","dispatch","setCity","forecastData","console","log","forecastExtend","list","filter","item","moment","unix","dt","utc","hour","map","weekDay","format","data","setForecastData","addCity","searchCity","criterio","url","findCity","_ref2","formatedCitiesList","name","country","getWeatherIcon","display","justifyContent","alignItems","Temperature","src","alt","extraInfo","flexDirection","ExtraInfo","h","w","backgroundColor","boxSizing","WeatherData","Weather","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","headleClick","click","onDelete","e","stopPropagation","componentWillMount","setState","render","state","Card","style","marginBottom","CardHeader","action","IconButton","aria-label","Cancel_default","CardContent","Component","weatherAlert","show","onSubmit","onCancel","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","WeatherListController","Fab","showModal","LocationOn_default","WeatherList","deleteItem","modalSubmit","deleteCity","modalCancel","setDeleteItem","index","_this2","cities","weatherItem_Weather","key","selectCity","SearchModal","searchResults","TextField","margin","label","onChange","value","target","trim","setTimeout","fullWidth","isLoading","CircularProgress","List","component","result","ListItem","button","clickHandler","ListItemIcon","ListItemText","primary","Add_default","ForecastListContainer","handleSelectionLocation","dispatchsetCity","setUserLocation","WeatherList_WeatherList","onShowModal","onDeleteCity","propsType","PropTypes","func","isRequired","connect","cityReducer","geoplugin_city","formatedCityInfo","geoplugin_regionName","geoplugin_currencyCode","join","onHideModal","useStiles","ForecastItem","subheader","ForecastExtended","forecastExtendedData","forecast","day","ForecastExtendedContainer","Weather_ForecastExtended_ForecastExtended","extendedForecastReducer","selectedCity","paper","padding","textAlign","container","marginTop","window","location","hostname","match","initialState","combineReducers","objectSpread","newCitiesList","toConsumableArray","i","_action$payload","defineProperty","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","es","Container","maxWidth","Grid","xs","sm","Paper","LocationListContainer","Containers_ForecastExtendedContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4a02c54.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Button,\r\n  Menu,\r\n  MenuItem\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nexport default function Header() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const comingSoon=()=>{\r\n    alert(\"Coming Soon\")\r\n    handleClose();\r\n  }\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            WeatherApp\r\n          </Typography>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n            variant=\"contained\" color=\"primary\"\r\n          >\r\n            Menu\r\n          </Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={comingSoon}>Profile</MenuItem>\r\n            <MenuItem onClick={comingSoon}>My account</MenuItem>\r\n            <MenuItem onClick={comingSoon}>Logout</MenuItem>\r\n          </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n}\r\n","import moment from 'moment';\r\n\r\n // fetch from API\r\nexport const getData = (city, type=\"weather\") => {\r\nconst apiKey = \"ea0b23131c72bacfe9c361211bb6ea7f\";\r\nconst api_weather = `http://api.openweathermap.org/data/2.5/${type}?q=${city}&units=metric&APPID=${apiKey}`;\r\n   return fetch(api_weather)\r\n    .then( res => {\r\n       return res.json();\r\n    })\r\n    .then( res => {\r\n        return res;\r\n    })\r\n    .catch( err => {\r\n        throw err;\r\n    }) ;\r\n};\r\n\r\n// transform API response into an \"data\" object for simple forecast\r\n  export const  transformWeather = (res) => {\r\n        const {speed} = res.wind;\r\n        const {humidity, temp} = res.main;\r\n        const {weather} = res;\r\n        const weatherState = getWeatherState(weather);\r\n        return  {\r\n          humidity,\r\n          weatherState,\r\n          temperature:temp,\r\n          wind: `${speed}m/s`\r\n        }\r\n      };\r\n      \r\n // get Wheather from response object\r\n const  getWeatherState = ([weather]) =>{\r\n     const {main, description, icon} = weather;\r\n     const weatherState={\r\n            main,\r\n            description,\r\n            icon\r\n     }\r\n    return (weatherState);\r\n  };\r\n\r\n  // transform API response into an \"data\" object for Extended Forecast\r\n  export const transformForecastExtend = ({list}) => {\r\n    \r\n        return (list.filter( item => \r\n        moment.unix(item.dt).utc().hour() === 6 ||\r\n        moment.unix(item.dt).utc().hour() === 12 ||\r\n        moment.unix(item.dt).utc().hour() === 18  ))\r\n        .map( item => {\r\n            return  {\r\n                weekDay:moment.unix(item.dt).format('ddd'),\r\n                hour:moment.unix(item.dt).hour(),\r\n                data:{\r\n                  temperature:item.main.temp,\r\n                  wind:item.wind.speed,\r\n                  humidity:item.main.humidity,\r\n                  weatherState: getWeatherState(item.weather)\r\n                  }\r\n                }\r\n          });\r\n      \r\n      };\r\n\r\n  \r\n","import { getData, transformForecastExtend } from \"../services/TransformWeather\";\r\nimport { findCity } from \"../services/findCity\";\r\nimport {\r\n  SET_CITY,\r\n  SET_FORECAST_DATA,\r\n  ADD_CITY,\r\n  SET_USER_LOCATION,\r\n  SEARCH_CITY_START,\r\n  SEARCH_CITY_SUCCESS,\r\n  SEARCH_CITY_FAIL,\r\n  HIDE_SEARCH_MODAL,\r\n  SHOW_SEARCH_MODAL,\r\n  DELETE_CITY\r\n} from \"./ActionTypes\";\r\nconst setCity = payload => ({ type: SET_CITY, payload });\r\nconst setForecastData = payload => ({ type: SET_FORECAST_DATA, payload });\r\n\r\nexport const setSelectedCity = payload => {\r\n  return dispatch => {\r\n    //activar indicador de busqueda\r\n    dispatch(setCity(payload));\r\n    getData(payload, \"forecast\")\r\n      .then(forecastData => {\r\n        //modificar el estado con el resultado del fecht\r\n        console.log(forecastData);\r\n        const forecastExtend = transformForecastExtend(forecastData);\r\n        console.log(forecastExtend);\r\n        dispatch(setForecastData({ city: payload, forecastExtend }));\r\n      })\r\n      .catch(err => console.log(`${err}`));\r\n  };\r\n};\r\n\r\nexport const addCity = city => {\r\n  return {\r\n    type: ADD_CITY,\r\n    payload: city\r\n  };\r\n};\r\nexport const setUserLocation = () => {\r\n  let locationUrl = \"http://www.geoplugin.net/json.gp\";\r\n  return dispatch => {\r\n    fetch(locationUrl)\r\n      .then(res => res.json())\r\n      .then(\r\n        ({ geoplugin_city, geoplugin_regionName, geoplugin_currencyCode }) => {\r\n          // set city in correct format for wheather api ej ( \" rosario , ar \")\r\n          let formatedCityInfo = [geoplugin_city, geoplugin_currencyCode].join(\r\n            \",\"\r\n          );\r\n          dispatch(addCity(formatedCityInfo));\r\n          dispatch(setSelectedCity(formatedCityInfo));\r\n        }\r\n      );\r\n  };\r\n};\r\n\r\nconst searchCityStart = () => {\r\n  return {\r\n    type: SEARCH_CITY_START\r\n  };\r\n};\r\n\r\nconst searchCityfail = error => {\r\n  return {\r\n    type: SEARCH_CITY_FAIL,\r\n    payload: error\r\n  };\r\n};\r\nconst searchCitySuccess = cities => {\r\n  return {\r\n    type: SEARCH_CITY_SUCCESS,\r\n    payload: cities\r\n  };\r\n};\r\n\r\nexport const searchCity = city => {\r\n  return dispatch => {\r\n    dispatch(searchCityStart());\r\n    findCity(city)\r\n      .then(({ data }) => {\r\n        let formatedCitiesList = data.map(\r\n          city => city.name + \",\" + city.country\r\n        );\r\n        console.log(formatedCitiesList);\r\n        dispatch(searchCitySuccess(formatedCitiesList));\r\n      })\r\n      .catch(err => dispatch(searchCityfail(err)));\r\n  };\r\n};\r\n\r\nexport const showModal = () => {\r\n  return {\r\n    type: SHOW_SEARCH_MODAL\r\n  };\r\n};\r\n\r\nexport const hideModal = () => {\r\n  return {\r\n    type: HIDE_SEARCH_MODAL\r\n  };\r\n};\r\n\r\nexport const deleteCity = (city) => {\r\n  return{\r\n    type:DELETE_CITY,\r\n    payload:city\r\n  }\r\n}\r\n","export const SET_CITY = \"SET_CITY!\";\r\nexport const GET_CITIES = \"GET_CITIES\";\r\nexport const SET_FORECAST_DATA = \"SET_FORECAST_DATA\";\r\nexport const ADD_CITY = \"ADD_CITY\";\r\nexport const SET_USER_LOCATION = \"SET_USER_LOCATION\";\r\nexport const DELETE_CITY =\"DELETE_CITY\"\r\n\r\n// for city search\r\nexport const SHOW_SEARCH_MODAL =\"SHOW_SEARCH_MODAL\";\r\nexport const HIDE_SEARCH_MODAL =\"HIDE_SEARCH_MODAL\"\r\n\r\nexport const SEARCH_CITY_START = \"SEARCH_CITY_START\";\r\nexport const SEARCH_CITY_SUCCESS = \"SEARCH_CITY_SUCCESS\";\r\nexport const SEARCH_CITY_FAIL = \"SEARCH_CITY_FAIL\";\r\n","export const findCity = (criterio) => {\r\n  const url = `http://geodb-free-service.wirefreethought.com/v1/geo/cities?limit=5&offset=0&namePrefix=${criterio}`;\r\n  return fetch(url)\r\n    .then(res => res.json())\r\n    .then(res => res)\r\n    .catch(err => console.log(err));\r\n};\r\n","import React from 'react';\r\n//  fa-rainbow  fa-cloud-moon fa-cloud-moon-rain cloud-sun-rain fa-cloud-sun\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst getWeatherIcon= ({icon}) => {\r\n    return (`http://openweathermap.org/img/w/${icon}.png`);\r\n};\r\n\r\nconst useStyles = makeStyles( theme => {\r\n  return ({\r\n    temperature:{\r\n      flexGrow:\"2\",\r\n      display:\"flex\",\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\"\r\n    }}\r\n  )\r\n})\r\nexport default ({temperature, weatherState}) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.temperature}>\r\n      <img  src={getWeatherIcon(weatherState)}alt=\"\" className=\"icon-img\" />\r\n      <h3>{`  ${temperature}`}<span className=\"tempDegrees\">Cº</span></h3>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\n\r\nconst useStyles = makeStyles( theme => {\r\n    return ({\r\n    extraInfo:{\r\n      flexGrow:\"1\",\r\n      color:\"blue\",\r\n      display:\"flex\",\r\n      flexDirection:\"column\",\r\n      justifyContent:\"center\",\r\n      alignItems:\"center\"\r\n    }\r\n    }\r\n    )\r\n  })\r\nexport default ({humidity: h, wind: w}) => {\r\n   const classes = useStyles()\r\n  \r\n  return (\r\n    <div className={classes.extraInfo}>\r\n      <span>{`Humidity: ${h}%`}</span>\r\n      <span>{`Wind: ${w}`}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n// components\r\nimport WeatherTemperature from './Temperature';\r\nimport WeatherExtraInfo from './ExtraInfo';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles( theme =>{\r\n  return {\r\n    \r\n      root:{\r\n        display:'flex',\r\n        backgroundColor: \"rgba(240, 240, 240, .5)\",\r\n        boxSizing:\"border-box\"\r\n      }\r\n    \r\n  }\r\n})\r\n\r\n\r\n\r\n\r\nexport  default ({data}) => {\r\n\r\n  const classes = useStyles()\r\n  \r\n  const {temperature, weatherState, humidity, wind } = data; \r\n \r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <WeatherTemperature temperature={temperature} weatherState={weatherState}/>\r\n      <WeatherExtraInfo  humidity={humidity} wind={wind} />\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport Data from \"../WeatherData\";\r\n// Services\r\nimport {\r\n  transformWeather,\r\n  getData\r\n} from \"../../../services/TransformWeather.js\";\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport { Card, CardContent, CardHeader, IconButton } from \"@material-ui/core\";\r\n\r\n\r\ntype props ={\r\n  city:string,\r\n  click: ()=> void,\r\n  onDelete: ()=> void,\r\n}\r\n\r\ntype state = {\r\n  data:any\r\n}\r\n\r\nexport default class Weather extends Component <props, state> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    data: null\r\n  };\r\n  }\r\n  \r\n\r\n  headleClick = city => {\r\n    this.props.click();\r\n  };\r\n\r\n  onDelete = e => {\r\n    e.stopPropagation()\r\n    this.props.onDelete()\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    getData(this.props.city).then(res => {\r\n      const weather = transformWeather(res);\r\n      this.setState({ data: weather });\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    const { city } = this.props;\r\n    const { data } = this.state;\r\n    return (\r\n      <div className=\"weatherItem\" onClick={this.headleClick}>\r\n        <Card style={{ marginBottom: \"1.5rem\" }}>\r\n          <CardHeader\r\n            title={city}\r\n            action={\r\n              <IconButton aria-label=\"settings\" onClick={this.onDelete}>\r\n                <CancelIcon color=\"secondary\" />\r\n              </IconButton>\r\n            }\r\n          />\r\n          <CardContent>\r\n            {data ? <Data data={data} /> : <p>cargando</p>}\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\ntype props = {\r\n  show: boolean,\r\n  city: string | null,\r\n  onSubmit: () => void;\r\n  onCancel: () => void;\r\n};\r\nexport default function weatherAlert({ show, city, onSubmit, onCancel }: props) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={show}\r\n        onClose={onCancel}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Are you sure to delete this location ?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {city}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onCancel} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={onSubmit} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport { Fab } from \"@material-ui/core\";\r\n\r\n\r\nexport default function WeatherListController(props) {\r\n\r\n  const clickHandler = () => {\r\n      props.showModal()\r\n  };\r\n  return (\r\n    <div className=\"\">\r\n      <Fab color=\"primary\" variant=\"extended\" aria-label=\"add\" onClick={clickHandler}>\r\n        <LocationOnIcon/> NEW\r\n      </Fab>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport WeatherItem from \"../weatherItem/weatherItem.tsx\";\r\nimport WeatherAlert from \"../weatherAlert/weatherAlert.tsx\"\r\nimport WeatherListController from \"../weatherListController/weatherListController\";\r\n\r\nexport default class WeatherList extends Component {\r\n  \r\n  state={\r\n    showModal:false,\r\n    deleteItem:null\r\n  }\r\n  modalSubmit=()=>{\r\n    this.setState({showModal:false})\r\n    this.props.deleteCity(this.state.deleteItem)\r\n  }\r\n\r\n  modalCancel=()=>{\r\n    console.log(\"cancelado\")\r\n    this.setState({showModal:false, deleteItem:false})\r\n  }\r\n\r\n  setDeleteItem=(index)=>{\r\n    this.setState({deleteItem:index, showModal:true})\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { cities } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        \r\n      <div className=\"weatherList\">\r\n        {cities.map((city, index) => (\r\n          <WeatherItem\r\n            key={city + index}\r\n            city={city}\r\n            click={() => this.props.selectCity(city)}\r\n            onDelete={()=> this.setDeleteItem(index)}\r\n          />\r\n        ))}\r\n        <WeatherListController showModal ={this.props.showModal} />\r\n      </div>\r\n      <WeatherAlert show={this.state.showModal} onSubmit={this.modalSubmit} onCancel={this.modalCancel} city={this.state.deleteItem} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\n\r\n\r\n//lista\r\n\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { CircularProgress, Fab } from \"@material-ui/core/\";\r\n\r\n// redux\r\n\r\nimport * as actions from \"./../../actions/index\";\r\n\r\nexport default function SearchModal(props) {\r\n  const handleClose = () => {\r\n    console.log(\"close\");\r\n  };\r\n  const inputChangedHanler = event => {\r\n    let value = event.target.value;\r\n    if (value.trim().length < 3) {\r\n      return null;\r\n    }\r\n    setTimeout(() => {\r\n      props.searchCity(value);\r\n    }, 200);\r\n  };\r\n\r\n  const clickHandler = (index) => {\r\n    props.addCity(props.searchResults[index])\r\n  }\r\n  return (\r\n    <>\r\n    {console.log(props.searchResults)}\r\n      <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">New location</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"city\"\r\n            label=\"find\"\r\n            type=\"text\"\r\n            onChange={inputChangedHanler}\r\n            fullWidth\r\n          />\r\n          {props.isLoading && <CircularProgress />}\r\n          {props.searchResults && (\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n              {props.searchResults.map((result, index) => {\r\n                return (\r\n                  <ListItem button onClick={() =>clickHandler(index)} key={result+index}>\r\n                    <ListItemIcon>\r\n                    <LocationOnIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={result} />\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            </List>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n\r\n          <Fab color=\"primary\" onClick={handleClose} aria-label=\"add\">\r\n            <AddIcon />\r\n          </Fab>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport { setSelectedCity, setUserLocation, searchCity, showModal, hideModal, addCity, deleteCity } from \"../actions\";\r\n// components\r\nimport WeatherList from \"../Components/Weather/WeatherList/WeatherList\";\r\nimport SearchModal from \"../Components/modal/modal\";\r\n\r\nclass ForecastListContainer extends Component {\r\n \r\n  static propTypes = {\r\n    dispatchsetCity: PropTypes.func.isRequired\r\n  };\r\n\r\n  handleSelectionLocation = city => {\r\n    this.props.dispatchsetCity(city);\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.props.setUserLocation()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <WeatherList\r\n          cities={this.props.cities}\r\n          selectCity={this.handleSelectionLocation}\r\n          showModal={this.props.onShowModal}\r\n          deleteCity={this.props.onDeleteCity}\r\n        />\r\n        <SearchModal open={this.props.showModal} \r\n        searchCity={this.props.searchCity} \r\n        isLoading={this.props.isLoading}\r\n        searchResults ={this.props.searchResults}\r\n        addCity={this.props.addCity}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForecastListContainer.propsType = {\r\n  setCity: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatchsetCity: city => dispatch(setSelectedCity(city)),\r\n  setUserLocation: () => dispatch(setUserLocation()),\r\n  searchCity: (criterio)=> dispatch(searchCity(criterio)),\r\n  onShowModal: ()=> dispatch(showModal()),\r\n  onHideModal: () => dispatch(hideModal()),\r\n  addCity: (city)=> dispatch(addCity(city)),\r\n  onDeleteCity: (city)=> dispatch(deleteCity(city))\r\n});\r\n\r\nconst mapStateToProps = ({ cityReducer }) => ({\r\n  cities: cityReducer.cities,\r\n  isLoading: cityReducer.isLoading,\r\n  searchResults: cityReducer.searchResults,\r\n  showModal: cityReducer.showModal\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ForecastListContainer);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// components\r\nimport WeatherData from '../WeatherData';\r\nimport {Card, CardHeader, CardContent} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStiles= makeStyles( theme => {\r\n  return ({root:{\r\n    margin:\"1rem\"\r\n  }})\r\n})\r\n\r\nexport default ({weekDay, hour, data })=> {\r\n  const classes = useStiles();\r\n\r\n    return (\r\n      <React.Fragment>\r\n          <Card className={classes.root}>\r\n            <CardHeader title={weekDay} subheader={`${hour}:00`} />\r\n            <CardContent>\r\n              <WeatherData data={data}></WeatherData>\r\n            </CardContent>\r\n            \r\n          </Card>\r\n      </React.Fragment> \r\n    )\r\n  \r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ForescastItem from \"../ForecastItem/ForecastItem\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst ForecastExtended = ({ city, forecastExtendedData }) => {\r\n  let forecast = <CircularProgress />;\r\n\r\n  if (forecastExtendedData && forecastExtendedData[city]) {\r\n    forecast = forecastExtendedData[city].map((day, index) => (\r\n      <ForescastItem\r\n        weekDay={day.weekDay}\r\n        hour={day.hour}\r\n        data={day.data}\r\n        key={index}\r\n      ></ForescastItem>\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <div className=\"forecastExtendedCont\">\r\n      {city && <h1>{city}</h1>}\r\n      {forecast}\r\n    </div>\r\n  );\r\n};\r\nForecastExtended.propTypes = {\r\n  city: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ForecastExtended;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport ForecastExtended from \"../Components/Weather/ForecastExtended/ForecastExtended\";\r\n\r\nclass ForecastExtendedContainer extends Component {\r\n  static propTypes = {\r\n    city: PropTypes.string.isRequired\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.city ? (\r\n          <ForecastExtended city={this.props.city} forecastExtendedData={this.props.forecastExtendedData}/>\r\n        ) : (\r\n          <h1>no se selecciono ninguna ciudad</h1>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapsStateToProps = ({ cityReducer, extendedForecastReducer }) => {\r\n  return { \r\n    city: cityReducer.selectedCity,\r\n    forecastExtendedData: extendedForecastReducer\r\n  };\r\n};\r\nexport default connect(mapsStateToProps, null)(ForecastExtendedContainer);\r\n","import React, { Component } from \"react\";\n// material\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\n\n// Components\nimport Header from \"./Components/Header/Header\";\nimport LocationListContainer from \"./Containers/LocationListContainer\";\nimport ForecastExtendedContainer from \"./Containers/ForecastExtendedContainer\";\nimport \"./App.css\";\n\nconst useStyles = makeStyles(theme => {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: \"1rem\",\n      textAlign: \"center\"\n    },\n    container:{\n      marginTop:'80px'\n    }\n  };\n});\n\nexport default () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Container className={classes.container} maxWidth=\"md\">\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <Paper className={classes.paper}>\n              <LocationListContainer />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <Paper className={classes.paper}>\n              <ForecastExtendedContainer />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  SET_CITY,\r\n  ADD_CITY,\r\n  SEARCH_CITY_START,\r\n  SEARCH_CITY_FAIL,\r\n  SEARCH_CITY_SUCCESS,\r\n  SHOW_SEARCH_MODAL,\r\n  HIDE_SEARCH_MODAL,\r\n  DELETE_CITY\r\n} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  selectedCity: null,\r\n  cities: [],\r\n  searchResults: [],\r\n  isLoading: false,\r\n  showModal: false\r\n};\r\n\r\nexport const cityReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CITY:\r\n      return { ...state, selectedCity: action.payload };\r\n    case ADD_CITY:\r\n      let newCitiesList = [...state.cities, action.payload];\r\n      return { ...state, cities: newCitiesList, showModal:false };\r\n    case SEARCH_CITY_START:\r\n      return { ...state, isLoading: true };\r\n    case SEARCH_CITY_FAIL:\r\n      return { ...state, isLoading: false };\r\n    case SEARCH_CITY_SUCCESS:\r\n      return { ...state, isLoading: false, searchResults: action.payload };\r\n    case SHOW_SEARCH_MODAL:\r\n      return { ...state, showModal: true, searchResults:[] };\r\n    case HIDE_SEARCH_MODAL:\r\n      return { ...state, showModal: false, searchResults:[] };\r\n    case DELETE_CITY:\r\n      newCitiesList =state.cities.filter((city, i)=> i !== action.payload)\r\n      if(state.selectedCity === state.cities[action.payload]){\r\n        return { ...state, cities: newCitiesList, selectedCity:state.cities[0] }\r\n      }else if(state.cities.length === 0){\r\n        return { ...state, cities: newCitiesList, selectedCity:null }\r\n      }\r\n      return { ...state, cities: newCitiesList }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {combineReducers} from 'redux';\r\nimport {extendedForecastReducer} from './forecastExtendedReducer.js'\r\nimport {cityReducer} from './cityReducer.js';\r\n\r\nexport default combineReducers({\r\n    cityReducer, extendedForecastReducer\r\n})\r\n","import {SET_FORECAST_DATA} from  '../actions/ActionTypes';\r\n\r\nconst initialState={\r\n\r\n}\r\n\r\nexport  const extendedForecastReducer = (state =null, action) => {\r\n    switch (action.type) {\r\n        case SET_FORECAST_DATA:\r\n            const {city, forecastExtend} =action.payload;\r\n            return {...state, [city]: forecastExtend };\r\n        default:\r\n            return state ;\r\n    }\r\n}","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './../reducers/';\r\n\r\nconst composeEnhancers= window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store= createStore( reducers, composeEnhancers(applyMiddleware(thunk)) );\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {store} from './store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}